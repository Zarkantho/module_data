module_title: Geo Queries
module_name: geo_queries
module_description: 'TODO: geo_queries description'
module_groups:
-   group_title: 'TODO: Name this group'
    group_description: 'GEO query code. TODO: describe the structure of this and how
        it interacts with the new index# system.'
    group_files:
    - src/mongo/db/geo/core.h
    - src/mongo/db/geo/geoconstants.h
    - src/mongo/db/geo/geoparser.cpp
    - src/mongo/db/geo/geoparser.h
    - src/mongo/db/geo/geoparser_test.cpp
    - src/mongo/db/geo/geoquery.cpp
    - src/mongo/db/geo/geoquery.h
    - src/mongo/db/geo/hash.cpp
    - src/mongo/db/geo/hash.h
    - src/mongo/db/geo/hash_test.cpp
    - src/mongo/db/geo/haystack.cpp
    - src/mongo/db/geo/s2.h
    - src/mongo/db/geo/s2common.cpp
    - src/mongo/db/geo/s2common.h
    - src/mongo/db/geo/shapes.cpp
    - src/mongo/db/geo/shapes.h
    group_generated_data:
    -   file_name: src/mongo/db/geo/core.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/geo/geoconstants.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/geo/geoparser.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::GeoParser::parseLine(mongo::BSONObj const&, mongo::LineWithCRS*)
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::GeoParser::isMultiPoint(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::GeoParser::isMultiPolygon(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::GeoParser::parseCap(mongo::BSONObj const&, mongo::CapWithCRS*)
            symbol_uses:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::GeoParser::isLine(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::GeoParser::parsePoint(mongo::BSONObj const&, mongo::PointWithCRS*)
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::GeoParser::isBox(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::GeoParser::isPolygon(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::GeoParser::parseMultiPolygon(mongo::BSONObj const&,
                mongo::MultiPolygonWithCRS*)
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::GeoParser::parseMultiPoint(mongo::BSONObj const&,
                mongo::MultiPointWithCRS*)
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::GeoParser::parseGeometryCollection(mongo::BSONObj
                const&, mongo::GeometryCollection*)
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::GeoParser::parseBox(mongo::BSONObj const&, mongo::BoxWithCRS*)
            symbol_uses:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::GeoParser::isCap(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::GeoParser::parsePointWithMaxDistance(mongo::BSONObj
                const&, mongo::PointWithCRS*, double*)
            symbol_uses:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::GeoParser::isGeometryCollection(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::GeoParser::isPoint(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/commands/geonear.cpp
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::GeoParser::parsePolygon(mongo::BSONObj const&, mongo::PolygonWithCRS*)
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::GeoParser::isMultiLine(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::GeoParser::parseMultiLine(mongo::BSONObj const&, mongo::MultiLineWithCRS*)
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/geo/geoquery.cpp
        file_dependencies:
        -   symbol_name: mongo::Polygon::Polygon()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: S2Loop::IsValid() const
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2LatLng::ToPoint() const
            symbol_sources:
            - src/third_party/s2/s2latlng.cc
        -   symbol_name: S2PolygonBuilder::S2PolygonBuilder(S2PolygonBuilderOptions
                const&)
            symbol_sources:
            - src/third_party/s2/s2polygonbuilder.cc
        -   symbol_name: S2Loop::~S2Loop()
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for S2Cell
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: S2Cell::Init(S2CellId const&)
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2Polyline::S2Polyline()
            symbol_sources:
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: vtable for S2Cap
            symbol_sources:
            - src/third_party/s2/s2cap.cc
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: S2Loop::Contains(S2Loop const*) const
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2Loop::Normalize()
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2PolygonBuilder::~S2PolygonBuilder()
            symbol_sources:
            - src/third_party/s2/s2polygonbuilder.cc
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONElement::Array() const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: S2Polyline::IsValid(std::vector<Vector3<double>, std::allocator<Vector3<double>
                > > const&)
            symbol_sources:
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Polygon::Polygon(std::vector<mongo::Point, std::allocator<mongo::Point>
                >)
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: S2Polygon::S2Polygon()
            symbol_sources:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2LatLng::Normalized() const
            symbol_sources:
            - src/third_party/s2/s2latlng.cc
        -   symbol_name: S2PolygonBuilder::AddLoop(S2Loop const*)
            symbol_sources:
            - src/third_party/s2/s2polygonbuilder.cc
        -   symbol_name: S2Polyline::Init(std::vector<Vector3<double>, std::allocator<Vector3<double>
                > > const&)
            symbol_sources:
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: S2Loop::S2Loop(std::vector<Vector3<double>, std::allocator<Vector3<double>
                > > const&)
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2Cap::FromAxisAngle(Vector3<double> const&, S1Angle const&)
            symbol_sources:
            - src/third_party/s2/s2cap.cc
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2Loop::Invert()
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S2PolygonBuilderOptions::set_xor_edges(bool)
            symbol_sources:
            - src/third_party/s2/s2polygonbuilder.cc
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S2PolygonBuilder::AssemblePolygon(S2Polygon*, std::vector<std::pair<Vector3<double>,
                Vector3<double> >, std::allocator<std::pair<Vector3<double>, Vector3<double>
                > > >*)
            symbol_sources:
            - src/third_party/s2/s2polygonbuilder.cc
        -   symbol_name: S2PolygonBuilderOptions::set_validate(bool)
            symbol_sources:
            - src/third_party/s2/s2polygonbuilder.cc
        -   symbol_name: mongo::Point::Point(double, double)
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: S2Polygon::~S2Polygon()
            symbol_sources:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: mongo::Point::Point()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: S2CellId::FromPoint(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
    -   file_name: src/mongo/db/geo/geoparser.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/geo/geoparser_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::Polygon::Polygon()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::GeoParser::isMultiPolygon(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::GeoParser::parseLine(mongo::BSONObj const&, mongo::LineWithCRS*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for S2Cell
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: mongo::GeoParser::isMultiPoint(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::fromjson(std::string const&)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::GeoParser::parseGeometryCollection(mongo::BSONObj
                const&, mongo::GeometryCollection*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2Polyline::S2Polyline()
            symbol_sources:
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::GeoParser::isLine(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::GeoParser::isPolygon(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::GeoParser::isPoint(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: S2Polyline::~S2Polyline()
            symbol_sources:
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: S2Polygon::S2Polygon()
            symbol_sources:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::GeoParser::parsePoint(mongo::BSONObj const&, mongo::PointWithCRS*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::GeoParser::crsIsOK(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2Polygon::Contains(Vector3<double> const&) const
            symbol_sources:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::GeoParser::parsePolygon(mongo::BSONObj const&, mongo::PolygonWithCRS*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2Polygon::~S2Polygon()
            symbol_sources:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::Point::Point()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::GeoParser::parseMultiPoint(mongo::BSONObj const&,
                mongo::MultiPointWithCRS*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::GeoParser::isGeometryCollection(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::GeoParser::parseMultiLine(mongo::BSONObj const&, mongo::MultiLineWithCRS*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::GeoParser::parseMultiPolygon(mongo::BSONObj const&,
                mongo::MultiPolygonWithCRS*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::GeoParser::isMultiLine(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
    -   file_name: src/mongo/db/geo/geoquery.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::GeometryContainer::getRegion() const
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
        -   symbol_name: mongo::GeometryContainer::parseFrom(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/matcher/expression_geo.cpp
        -   symbol_name: mongo::GeoQuery::getRegion() const
            symbol_uses:
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::GeoQuery::satisfiesPredicate(mongo::GeometryContainer
                const&) const
            symbol_uses:
            - src/mongo/db/matcher/expression_geo.cpp
        -   symbol_name: mongo::NearQuery::parseFrom(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser_geo.cpp
        -   symbol_name: mongo::GeometryContainer::hasS2Region() const
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/query/planner_ixselect.cpp
        -   symbol_name: mongo::GeometryContainer::hasFlatRegion() const
            symbol_uses:
            - src/mongo/db/query/planner_ixselect.cpp
        -   symbol_name: mongo::GeoQuery::parseFrom(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser_geo.cpp
        file_dependencies:
        -   symbol_name: mongo::Polygon::Polygon()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: S2Polyline::MayIntersect(S2Cell const&) const
            symbol_sources:
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: S2RegionUnion::Add(S2Region*)
            symbol_sources:
            - src/third_party/s2/s2regionunion.cc
        -   symbol_name: mongo::GeoParser::isMultiPolygon(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::Box::inside(mongo::Point, double) const
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::GeoParser::parseCap(mongo::BSONObj const&, mongo::CapWithCRS*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::GeoParser::parseLine(mongo::BSONObj const&, mongo::LineWithCRS*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Polygon::contains(mongo::Point const&) const
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: vtable for S2Cell
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: mongo::GeoParser::isMultiPoint(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::GeoParser::parseGeometryCollection(mongo::BSONObj
                const&, mongo::GeometryCollection*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2Polyline::S2Polyline()
            symbol_sources:
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: vtable for S2Cap
            symbol_sources:
            - src/third_party/s2/s2cap.cc
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: S2Cell::MayIntersect(S2Cell const&) const
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2Polygon::Intersects(S2Polygon const*) const
            symbol_sources:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: mongo::GeoParser::parseBox(mongo::BSONObj const&, mongo::BoxWithCRS*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::GeoParser::isPolygon(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::GeoParser::isLine(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::GeoParser::isPoint(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: S2Polyline::~S2Polyline()
            symbol_sources:
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: mongo::GeoParser::isCap(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2Polygon::S2Polygon()
            symbol_sources:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: mongo::GeoParser::parsePoint(mongo::BSONObj const&, mongo::PointWithCRS*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2Polygon::Contains(S2Polygon const*) const
            symbol_sources:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::distanceWithin(mongo::Point const&, mongo::Point const&,
                double)
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::Circle::Circle()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: S2Polygon::Contains(Vector3<double> const&) const
            symbol_sources:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2Polygon::IntersectWithPolyline(S2Polyline const*, std::vector<S2Polyline*,
                std::allocator<S2Polyline*> >*) const
            symbol_sources:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2Polyline::NearlyCoversPolyline(S2Polyline const&, S1Angle
                const&) const
            symbol_sources:
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: S2RegionUnion::S2RegionUnion()
            symbol_sources:
            - src/third_party/s2/s2regionunion.cc
        -   symbol_name: S2Polygon::MayIntersect(S2Cell const&) const
            symbol_sources:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: mongo::BSONElement::getGtLtOp(int) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::GeoParser::parsePolygon(mongo::BSONObj const&, mongo::PolygonWithCRS*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2Polygon::~S2Polygon()
            symbol_sources:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: mongo::GeoParser::parsePointWithMaxDistance(mongo::BSONObj
                const&, mongo::PointWithCRS*, double*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::Point::Point()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::GeoParser::parseMultiPoint(mongo::BSONObj const&,
                mongo::MultiPointWithCRS*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::GeoParser::isGeometryCollection(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::GeoParser::parseMultiLine(mongo::BSONObj const&, mongo::MultiLineWithCRS*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2Polyline::Intersects(S2Polyline const*) const
            symbol_sources:
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: mongo::GeoParser::parseMultiPolygon(mongo::BSONObj const&,
                mongo::MultiPolygonWithCRS*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::Box::Box()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: S2Cap::MayIntersect(S2Cell const&) const
            symbol_sources:
            - src/third_party/s2/s2cap.cc
        -   symbol_name: mongo::GeoParser::isMultiLine(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::GeoParser::isBox(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
    -   file_name: src/mongo/db/geo/geoquery.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/geo/hash.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::GeoHash::up() const
            symbol_uses:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::GeoHash::GeoHash(mongo::BSONElement const&, unsigned
                int)
            symbol_uses:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::GeoHash::move(int, int)
            symbol_uses:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::GeoHash::constrains() const
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::GeoHash::canRefine() const
            symbol_uses:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::GeoHashConverter::hash(mongo::Point const&) const
            symbol_uses:
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::GeoHash::GeoHash(mongo::GeoHash const&)
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2dcommon.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::GeoHashConverter::hash(mongo::BSONObj const&) const
            symbol_uses:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::GeoHashConverter::hash(mongo::BSONObj const&, mongo::BSONObj
                const*) const
            symbol_uses:
            - src/mongo/db/index/2d_access_method.cpp
        -   symbol_name: mongo::GeoHash::GeoHash()
            symbol_uses:
            - src/mongo/db/exec/2dcommon.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::GeoHash::atMinX() const
            symbol_uses:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::GeoHash::operator+(std::string const&) const
            symbol_uses:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::GeoHashConverter::sizeEdge(mongo::GeoHash const&)
                const
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::GeoHashConverter::unhashToPoint(mongo::GeoHash const&)
                const
            symbol_uses:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::GeoHash::atMinY() const
            symbol_uses:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::GeoHash::operator=(mongo::GeoHash const&)
            symbol_uses:
            - src/mongo/db/exec/2dcommon.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::GeoHash::atMaxY() const
            symbol_uses:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::GeoHash::GeoHash(unsigned int, unsigned int, unsigned
                int)
            symbol_uses:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::GeoHashConverter::hash(double, double) const
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::GeoHash::operator!=(mongo::GeoHash const&) const
            symbol_uses:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::GeoHashConverter::GeoHashConverter(mongo::GeoHashConverter::Parameters
                const&)
            symbol_uses:
            - src/mongo/db/index/2d_access_method.cpp
            - src/mongo/db/query/planner_ixselect.cpp
        -   symbol_name: mongo::GeoHash::appendToBuilder(mongo::BSONObjBuilder*, char
                const*) const
            symbol_uses:
            - src/mongo/db/index/2d_access_method.cpp
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::GeoHashConverter::unhashToPoint(mongo::BSONElement
                const&) const
            symbol_uses:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::GeoHash::hasPrefix(mongo::GeoHash const&) const
            symbol_uses:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::GeoHash::atMaxX() const
            symbol_uses:
            - src/mongo/db/exec/2dcommon.cpp
        file_dependencies:
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::Point::Point()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::causedBy(std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/geo/hash.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/geo/hash_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::UserException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::PseudoRandom::nextInt32()
            symbol_sources:
            - src/mongo/platform/random.cpp
        -   symbol_name: mongo::PseudoRandom::PseudoRandom(int)
            symbol_sources:
            - src/mongo/platform/random.cpp
        -   symbol_name: mongo::GeoHash::GeoHash(unsigned int, unsigned int, unsigned
                int)
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::GeoHash::GeoHash(std::string const&)
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::GeoHash::isBitSet(unsigned int, unsigned int)
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
    -   file_name: src/mongo/db/geo/haystack.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::ActionType::find
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::IndexCatalog::findIndexByType(std::string const&,
                std::vector<mongo::IndexDescriptor*, std::allocator<mongo::IndexDescriptor*>
                >&) const
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: vtable for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Command::parseResourcePattern(std::string const&,
                mongo::BSONObj const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::HaystackAccessMethod::searchCommand(mongo::BSONObj
                const&, double, mongo::BSONObj const&, mongo::BSONObjBuilder*, unsigned
                int)
            symbol_sources:
            - src/mongo/db/index/haystack_access_method.cpp
        -   symbol_name: mongo::Command::checkAuthForCommand(mongo::ClientBasic*,
                std::string const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::IndexNames::GEO_HAYSTACK
            symbol_sources:
            - src/mongo/db/index_names.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ActionSet::addAction(mongo::ActionType const&)
            symbol_sources:
            - src/mongo/db/auth/action_set.cpp
        -   symbol_name: mongo::Privilege::Privilege(mongo::ResourcePattern const&,
                mongo::ActionSet const&)
            symbol_sources:
            - src/mongo/db/auth/privilege.cpp
        -   symbol_name: typeinfo for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Command::parseNs(std::string const&, mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Command::redactForLogging(mongo::mutablebson::Document*)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::Command::help(std::basic_stringstream<char, std::char_traits<char>,
                std::allocator<char> >&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Command::Command(mongo::StringData, bool, mongo::StringData)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Command::stopIndexBuilds(std::string const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::IndexCatalog::getIndex(mongo::IndexDescriptor const*)
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
    -   file_name: src/mongo/db/geo/s2.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/geo/s2common.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::S2SearchUtil::getKeysForObject(mongo::BSONObj const&,
                mongo::S2IndexingParams const&, std::vector<std::string, std::allocator<std::string>
                >*)
            symbol_uses:
            - src/mongo/db/index/s2_access_method.cpp
        -   symbol_name: mongo::S2SearchUtil::distanceBetween(Vector3<double> const&,
                mongo::BSONObj const&, double*)
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
        file_dependencies:
        -   symbol_name: mongo::Polygon::Polygon()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::GeoParser::isMultiPolygon(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2RegionCoverer::S2RegionCoverer()
            symbol_sources:
            - src/third_party/s2/s2regioncoverer.cc
        -   symbol_name: mongo::GeoParser::parseLine(mongo::BSONObj const&, mongo::LineWithCRS*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: S2RegionCoverer::set_max_cells(int)
            symbol_sources:
            - src/third_party/s2/s2regioncoverer.cc
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::GeometryContainer::getRegion() const
            symbol_sources:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: vtable for S2Cell
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: mongo::GeoParser::isMultiPoint(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: mongo::GeoParser::parseGeometryCollection(mongo::BSONObj
                const&, mongo::GeometryCollection*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2::kAvgEdge
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2Polyline::S2Polyline()
            symbol_sources:
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: mongo::GeometryContainer::parseFrom(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: S2CellId::kNumFaces
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: mongo::GeoParser::isLine(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: mongo::GeoParser::isPolygon(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S2RegionCoverer::set_max_level(int)
            symbol_sources:
            - src/third_party/s2/s2regioncoverer.cc
        -   symbol_name: mongo::GeoParser::isPoint(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: S2::kMaxCellLevel
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: S2Polyline::~S2Polyline()
            symbol_sources:
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: mongo::GeometryContainer::hasS2Region() const
            symbol_sources:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: S2Polygon::S2Polygon()
            symbol_sources:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2CellId::ToString() const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2CellId::level() const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: mongo::GeoParser::parsePoint(mongo::BSONObj const&, mongo::PointWithCRS*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2RegionCoverer::set_min_level(int)
            symbol_sources:
            - src/third_party/s2/s2regioncoverer.cc
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::GeoParser::parsePolygon(mongo::BSONObj const&, mongo::PolygonWithCRS*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2RegionCoverer::~S2RegionCoverer()
            symbol_sources:
            - src/third_party/s2/s2regioncoverer.cc
        -   symbol_name: S1Angle::S1Angle(Vector3<double> const&, Vector3<double>
                const&)
            symbol_sources:
            - src/third_party/s2/s1angle.cc
        -   symbol_name: S2CellId::kMaxLevel
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2Polygon::~S2Polygon()
            symbol_sources:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2Polyline::Project(Vector3<double> const&, int*) const
            symbol_sources:
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: mongo::Point::Point()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::GeoParser::parseMultiPoint(mongo::BSONObj const&,
                mongo::MultiPointWithCRS*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::GeoParser::parseMultiLine(mongo::BSONObj const&, mongo::MultiLineWithCRS*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2CellId::kPosBits
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: mongo::GeoParser::parseMultiPolygon(mongo::BSONObj const&,
                mongo::MultiPolygonWithCRS*)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2Polygon::Project(Vector3<double> const&) const
            symbol_sources:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: mongo::GeoParser::isGeometryCollection(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::GeoParser::isMultiLine(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2RegionCoverer::GetCovering(S2Region const&, std::vector<S2CellId,
                std::allocator<S2CellId> >*)
            symbol_sources:
            - src/third_party/s2/s2regioncoverer.cc
    -   file_name: src/mongo/db/geo/s2common.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/geo/shapes.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::Box::Box(mongo::Point, mongo::Point)
            symbol_uses:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::Point::Point(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/index/haystack_access_method.cpp
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::Polygon::Polygon(std::vector<mongo::Point, std::allocator<mongo::Point>
                >)
            symbol_uses:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: mongo::Box::inside(mongo::Point, double) const
            symbol_uses:
            - src/mongo/db/geo/geoquery.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::Polygon::contains(mongo::Point const&) const
            symbol_uses:
            - src/mongo/db/geo/geoquery.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::Box::onBoundary(mongo::Point, double)
            symbol_uses:
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::Box::Box(double, double, double)
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
        -   symbol_name: mongo::Box::fudge(double)
            symbol_uses:
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::Polygon::Polygon()
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/geo/geoquery.cpp
            - src/mongo/db/geo/geoparser.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::Box::intersects(mongo::Box const&) const
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::Box::center() const
            symbol_uses:
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::Polygon::bounds()
            symbol_uses:
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::Box::maxDim() const
            symbol_uses:
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::checkEarthBounds(mongo::Point const&)
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::distanceWithin(mongo::Point const&, mongo::Point const&,
                double)
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/geo/geoquery.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::Circle::Circle()
            symbol_uses:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::distance(mongo::Point const&, mongo::Point const&)
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/index/haystack_access_method.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::Box::Box()
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/geo/geoquery.cpp
            - src/mongo/db/exec/2dcommon.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::Polygon::contains(mongo::Point const&, double) const
            symbol_uses:
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::Point::Point(mongo::BSONElement const&)
            symbol_uses:
            - src/mongo/db/index/haystack_access_method.cpp
        -   symbol_name: mongo::spheredist_deg(mongo::Point const&, mongo::Point const&)
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::Point::Point(double, double)
            symbol_uses:
            - src/mongo/db/geo/geoparser.cpp
            - src/mongo/db/exec/2dcommon.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::Box::truncate(double, double)
            symbol_uses:
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::Point::Point()
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/geo/hash.cpp
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/query/planner_access.cpp
            - src/mongo/db/geo/geoparser.cpp
            - src/mongo/db/geo/geoquery.cpp
            - src/mongo/db/matcher/expression_parser_geo.cpp
            - src/mongo/db/query/stage_builder.cpp
            - src/mongo/db/matcher/expression_geo.cpp
            - src/mongo/db/exec/2d.cpp
            - src/mongo/db/query/query_planner.cpp
        file_dependencies:
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/geo/shapes.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
