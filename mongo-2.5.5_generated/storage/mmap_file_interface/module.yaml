module_title: Mmap File Interface
module_name: mmap_file_interface
module_description: 'TODO: mmap_file_interface description'
module_groups:
-   group_title: 'TODO: Name this group'
    group_description: Interface to data file. Depends on journaling module. These
        are the actual data files on disk# "<dbname>.#".  Handles file preallocation.
    group_files:
    - src/mongo/db/storage/data_file.cpp
    - src/mongo/db/storage/data_file.h
    group_generated_data:
    -   file_name: src/mongo/db/storage/data_file.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::DataFile::openExisting(char const*)
            symbol_uses:
            - src/mongo/db/storage/extent_manager.cpp
        -   symbol_name: mongo::DataFile::open(char const*, int, bool)
            symbol_uses:
            - src/mongo/db/storage/extent_manager.cpp
        -   symbol_name: mongo::DataFile::flush(bool)
            symbol_uses:
            - src/mongo/db/storage/extent_manager.cpp
        -   symbol_name: mongo::DataFile::allocExtentArea(int)
            symbol_uses:
            - src/mongo/db/storage/extent_manager.cpp
        -   symbol_name: mongo::DataFile::maxSize()
            symbol_uses:
            - src/mongo/dbtests/pdfiletests.cpp
            - src/mongo/db/storage/extent.cpp
            - src/mongo/db/storage/extent_manager.cpp
        -   symbol_name: mongo::DataFile::badOfs(int) const
            symbol_uses:
            - src/mongo/db/storage/extent_manager.cpp
        file_dependencies:
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::inShutdown()
            symbol_sources:
            - src/mongo/client/scoped_db_conn_test.cpp
            - src/mongo/unittest/crutch.cpp
            - src/mongo/db/instance.cpp
            - src/mongo/client/clientAndShell.cpp
            - src/mongo/s/server.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::Lock::somethingWriteLocked()
            symbol_sources:
            - src/mongo/db/d_concurrency.cpp
        -   symbol_name: mongo::LockState::Dump()
            symbol_sources:
            - src/mongo/db/lockstate.cpp
        -   symbol_name: mongo::FileAllocator::requestAllocation(std::string const&,
                long&)
            symbol_sources:
            - src/mongo/util/file_allocator.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MemoryMappedFile::flush(bool)
            symbol_sources:
            - src/mongo/util/mmap_posix.cpp
        -   symbol_name: mongo::FileAllocator::get()
            symbol_sources:
            - src/mongo/util/file_allocator.cpp
        -   symbol_name: mongo::DurableMappedFile::create(std::string const&, unsigned
                long long&, bool)
            symbol_sources:
            - src/mongo/db/storage/durable_mapped_file.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::storageGlobalParams
            symbol_sources:
            - src/mongo/db/storage_options.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DurableMappedFile::open(std::string const&, bool)
            symbol_sources:
            - src/mongo/db/storage/durable_mapped_file.cpp
        -   symbol_name: mongo::dur::DurableInterface::_impl
            symbol_sources:
            - src/mongo/db/dur.cpp
        -   symbol_name: boost::filesystem3::detail::status(boost::filesystem3::path
                const&, boost::system::error_code*)
            symbol_sources:
            - src/third_party/boost/libs/filesystem/v3/src/operations.cpp
    -   file_name: src/mongo/db/storage/data_file.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
