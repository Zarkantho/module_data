module_title: Update System
module_name: update_system
module_description: 'TODO: update_system description'
module_groups:
-   group_title: 'TODO: Name this group'
    group_description: libupdate.a (only used by libupdate_driver.a). This is the
        new code for handling update# operations:## is this stuff only called from
        update.cpp?
    group_files:
    - src/mongo/db/ops/modifier_add_to_set.cpp
    - src/mongo/db/ops/modifier_add_to_set.h
    - src/mongo/db/ops/modifier_add_to_set_test.cpp
    - src/mongo/db/ops/modifier_bit.cpp
    - src/mongo/db/ops/modifier_bit.h
    - src/mongo/db/ops/modifier_bit_test.cpp
    - src/mongo/db/ops/modifier_compare.cpp
    - src/mongo/db/ops/modifier_compare.h
    - src/mongo/db/ops/modifier_compare_test.cpp
    - src/mongo/db/ops/modifier_current_date.cpp
    - src/mongo/db/ops/modifier_current_date.h
    - src/mongo/db/ops/modifier_current_date_test.cpp
    - src/mongo/db/ops/modifier_inc.cpp
    - src/mongo/db/ops/modifier_inc.h
    - src/mongo/db/ops/modifier_inc_test.cpp
    - src/mongo/db/ops/modifier_interface.h
    - src/mongo/db/ops/modifier_object_replace.cpp
    - src/mongo/db/ops/modifier_object_replace.h
    - src/mongo/db/ops/modifier_object_replace_test.cpp
    - src/mongo/db/ops/modifier_pop.cpp
    - src/mongo/db/ops/modifier_pop.h
    - src/mongo/db/ops/modifier_pop_test.cpp
    - src/mongo/db/ops/modifier_pull.cpp
    - src/mongo/db/ops/modifier_pull.h
    - src/mongo/db/ops/modifier_pull_all.cpp
    - src/mongo/db/ops/modifier_pull_all.h
    - src/mongo/db/ops/modifier_pull_all_test.cpp
    - src/mongo/db/ops/modifier_pull_test.cpp
    - src/mongo/db/ops/modifier_push.cpp
    - src/mongo/db/ops/modifier_push.h
    - src/mongo/db/ops/modifier_push_sorter.h
    - src/mongo/db/ops/modifier_push_sorter_test.cpp
    - src/mongo/db/ops/modifier_push_test.cpp
    - src/mongo/db/ops/modifier_rename.cpp
    - src/mongo/db/ops/modifier_rename.h
    - src/mongo/db/ops/modifier_rename_test.cpp
    - src/mongo/db/ops/modifier_set.cpp
    - src/mongo/db/ops/modifier_set.h
    - src/mongo/db/ops/modifier_set_test.cpp
    - src/mongo/db/ops/modifier_unset.cpp
    - src/mongo/db/ops/modifier_unset.h
    - src/mongo/db/ops/modifier_unset_test.cpp
    group_generated_data:
    -   file_name: src/mongo/db/ops/modifier_add_to_set.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ModifierAddToSet::ModifierAddToSet()
            symbol_uses:
            - src/mongo/db/ops/modifier_table.cpp
        file_dependencies:
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Element::findElementNamed(mongo::StringData
                const&) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::Status::toString() const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::LogBuilder::addToSets(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::pathsupport::createPathAt(mongo::FieldRef const&,
                unsigned long, mongo::mutablebson::Element, mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::mutablebson::Element::pushBack(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::mutablebson::Element::getValue() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementArray(mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::fieldchecker::isUpdatable(mongo::FieldRef const&)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::mutablebson::Document::Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::BSONObj::_okForStorage(bool, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::mutablebson::Element::remove()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementWithNewFieldName(mongo::StringData
                const&, mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::~Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::pathsupport::findLongestPrefix(mongo::FieldRef const&,
                mongo::mutablebson::Element, unsigned long*, mongo::mutablebson::Element*)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::fieldchecker::isPositional(mongo::FieldRef const&,
                unsigned long*, unsigned long*)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::mutablebson::Element::appendElement(mongo::BSONElement
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::mutablebson::Element::getFieldName() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::hasChildren() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::parse(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Element::compareWithElement(mongo::mutablebson::ConstElement
                const&, bool) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::getPart(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Element::leftChild() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::getType() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::typeName(mongo::BSONType)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElement(mongo::BSONElement
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::setPart(unsigned long, mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Element::toString() const
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::mutablebson::Element::rightSibling(unsigned long)
                const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/db/ops/modifier_add_to_set.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/modifier_add_to_set_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierAddToSet::apply() const
            symbol_sources:
            - src/mongo/db/ops/modifier_add_to_set.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierAddToSet::~ModifierAddToSet()
            symbol_sources:
            - src/mongo/db/ops/modifier_add_to_set.cpp
        -   symbol_name: mongo::ModifierAddToSet::ModifierAddToSet()
            symbol_sources:
            - src/mongo/db/ops/modifier_add_to_set.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierAddToSet::init(mongo::BSONElement const&,
                mongo::ModifierInterface::Options const&, bool*)
            symbol_sources:
            - src/mongo/db/ops/modifier_add_to_set.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Document::~Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document(mongo::BSONObj const&,
                mongo::mutablebson::Document::InPlaceMode)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ModifierAddToSet::log(mongo::LogBuilder*) const
            symbol_sources:
            - src/mongo/db/ops/modifier_add_to_set.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Document::getCurrentInPlaceMode() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierAddToSet::prepare(mongo::mutablebson::Element,
                mongo::StringData const&, mongo::ModifierInterface::ExecInfo*)
            symbol_sources:
            - src/mongo/db/ops/modifier_add_to_set.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::StringData const&)
            symbol_sources:
            - src/mongo/base/string_data.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::checkDoc(mongo::mutablebson::Document
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::Status::operator!=(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::operator<<(std::ostream&, mongo::mutablebson::Document
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
    -   file_name: src/mongo/db/ops/modifier_bit.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ModifierBit::ModifierBit()
            symbol_uses:
            - src/mongo/db/ops/modifier_table.cpp
        file_dependencies:
        -   symbol_name: mongo::SafeNum::isIdentical(mongo::SafeNum const&) const
            symbol_sources:
            - src/mongo/util/safe_num.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Element::findElementNamed(mongo::StringData
                const&) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::setValueSafeNum(mongo::SafeNum)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::LogBuilder::addToSets(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::pathsupport::createPathAt(mongo::FieldRef const&,
                unsigned long, mongo::mutablebson::Element, mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::SafeNum::orInternal(mongo::SafeNum const&, mongo::SafeNum
                const&)
            symbol_sources:
            - src/mongo/util/safe_num.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::fieldchecker::isUpdatable(mongo::FieldRef const&)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::FieldRef::parse(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Element::toString() const
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::pathsupport::findLongestPrefix(mongo::FieldRef const&,
                mongo::mutablebson::Element, unsigned long*, mongo::mutablebson::Element*)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::fieldchecker::isPositional(mongo::FieldRef const&,
                unsigned long*, unsigned long*)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::SafeNum::xorInternal(mongo::SafeNum const&, mongo::SafeNum
                const&)
            symbol_sources:
            - src/mongo/util/safe_num.cpp
        -   symbol_name: mongo::mutablebson::Element::getValueSafeNum() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::SafeNum::debugString() const
            symbol_sources:
            - src/mongo/util/safe_num.cpp
        -   symbol_name: mongo::mutablebson::Element::getFieldName() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::Element::isIntegral() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::SafeNum::SafeNum(mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/util/safe_num.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementSafeNum(mongo::StringData
                const&, mongo::SafeNum)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::getPart(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Element::leftChild() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::getType() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::setPart(unsigned long, mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::SafeNum::andInternal(mongo::SafeNum const&, mongo::SafeNum
                const&)
            symbol_sources:
            - src/mongo/util/safe_num.cpp
        -   symbol_name: mongo::typeName(mongo::BSONType)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/db/ops/modifier_bit.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/modifier_bit_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierBit::apply() const
            symbol_sources:
            - src/mongo/db/ops/modifier_bit.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Document::~Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document(mongo::BSONObj const&,
                mongo::mutablebson::Document::InPlaceMode)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Document::getCurrentInPlaceMode() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierBit::ModifierBit()
            symbol_sources:
            - src/mongo/db/ops/modifier_bit.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Element::findFirstChildNamed(mongo::StringData
                const&) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::ModifierBit::init(mongo::BSONElement const&, mongo::ModifierInterface::Options
                const&, bool*)
            symbol_sources:
            - src/mongo/db/ops/modifier_bit.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ModifierBit::prepare(mongo::mutablebson::Element,
                mongo::StringData const&, mongo::ModifierInterface::ExecInfo*)
            symbol_sources:
            - src/mongo/db/ops/modifier_bit.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::checkDoc(mongo::mutablebson::Document
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::mutablebson::Element::getType() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::Status::operator!=(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::operator<<(std::ostream&, mongo::mutablebson::Document
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ModifierBit::~ModifierBit()
            symbol_sources:
            - src/mongo/db/ops/modifier_bit.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::ModifierBit::log(mongo::LogBuilder*) const
            symbol_sources:
            - src/mongo/db/ops/modifier_bit.cpp
    -   file_name: src/mongo/db/ops/modifier_compare.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ModifierCompare::ModifierCompare(mongo::ModifierCompare::ModifierCompareMode)
            symbol_uses:
            - src/mongo/db/ops/modifier_table.cpp
        file_dependencies:
        -   symbol_name: mongo::mutablebson::Element::setValueBSONElement(mongo::BSONElement
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Element::compareWithBSONElement(mongo::BSONElement
                const&, bool) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::pathsupport::createPathAt(mongo::FieldRef const&,
                unsigned long, mongo::mutablebson::Element, mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::fieldchecker::isUpdatable(mongo::FieldRef const&)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::FieldRef::parse(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementWithNewFieldName(mongo::StringData
                const&, mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::pathsupport::findLongestPrefix(mongo::FieldRef const&,
                mongo::mutablebson::Element, unsigned long*, mongo::mutablebson::Element*)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::fieldchecker::isPositional(mongo::FieldRef const&,
                unsigned long*, unsigned long*)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::LogBuilder::addToSetsWithNewFieldName(mongo::StringData
                const&, mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::FieldRef::getPart(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::setPart(unsigned long, mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/db/ops/modifier_compare.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/modifier_compare_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::ModifierCompare::apply() const
            symbol_sources:
            - src/mongo/db/ops/modifier_compare.cpp
        -   symbol_name: mongo::ModifierCompare::log(mongo::LogBuilder*) const
            symbol_sources:
            - src/mongo/db/ops/modifier_compare.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Document::~Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document(mongo::BSONObj const&,
                mongo::mutablebson::Document::InPlaceMode)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::ModifierCompare::ModifierCompare(mongo::ModifierCompare::ModifierCompareMode)
            symbol_sources:
            - src/mongo/db/ops/modifier_compare.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Document::getCurrentInPlaceMode() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierCompare::init(mongo::BSONElement const&, mongo::ModifierInterface::Options
                const&, bool*)
            symbol_sources:
            - src/mongo/db/ops/modifier_compare.cpp
        -   symbol_name: mongo::ModifierCompare::prepare(mongo::mutablebson::Element,
                mongo::StringData const&, mongo::ModifierInterface::ExecInfo*)
            symbol_sources:
            - src/mongo/db/ops/modifier_compare.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ModifierCompare::~ModifierCompare()
            symbol_sources:
            - src/mongo/db/ops/modifier_compare.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::StringData const&)
            symbol_sources:
            - src/mongo/base/string_data.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::checkDoc(mongo::mutablebson::Document
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::mutablebson::operator<<(std::ostream&, mongo::mutablebson::Document
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
    -   file_name: src/mongo/db/ops/modifier_current_date.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ModifierCurrentDate::ModifierCurrentDate()
            symbol_uses:
            - src/mongo/db/ops/modifier_table.cpp
        file_dependencies:
        -   symbol_name: mongo::jsTime()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementTimestamp(mongo::StringData
                const&, mongo::OpTime)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::typeName(mongo::BSONType)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::pathsupport::createPathAt(mongo::FieldRef const&,
                unsigned long, mongo::mutablebson::Element, mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::OpTime::now(mongo::mutex::scoped_lock const&)
            symbol_sources:
            - src/mongo/bson/optime.cpp
        -   symbol_name: mongo::LogBuilder::addToSetsWithNewFieldName(mongo::StringData
                const&, mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::fieldchecker::isUpdatable(mongo::FieldRef const&)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::FieldRef::parse(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::pathsupport::findLongestPrefix(mongo::FieldRef const&,
                mongo::mutablebson::Element, unsigned long*, mongo::mutablebson::Element*)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::fieldchecker::isPositional(mongo::FieldRef const&,
                unsigned long*, unsigned long*)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::mutablebson::Element::setValueDate(mongo::Date_t)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::OpTime::m
            symbol_sources:
            - src/mongo/bson/optime.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::getPart(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementDate(mongo::StringData
                const&, mongo::Date_t)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::setValueTimestamp(mongo::OpTime)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::setPart(unsigned long, mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/db/ops/modifier_current_date.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/modifier_current_date_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierCurrentDate::apply() const
            symbol_sources:
            - src/mongo/db/ops/modifier_current_date.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierCurrentDate::init(mongo::BSONElement const&,
                mongo::ModifierInterface::Options const&, bool*)
            symbol_sources:
            - src/mongo/db/ops/modifier_current_date.cpp
        -   symbol_name: mongo::ModifierCurrentDate::prepare(mongo::mutablebson::Element,
                mongo::StringData const&, mongo::ModifierInterface::ExecInfo*)
            symbol_sources:
            - src/mongo/db/ops/modifier_current_date.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Document::~Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document(mongo::BSONObj const&,
                mongo::mutablebson::Document::InPlaceMode)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Element::writeTo(mongo::BSONObjBuilder*)
                const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Document::getCurrentInPlaceMode() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Element::getFieldName() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::ModifierCurrentDate::~ModifierCurrentDate()
            symbol_sources:
            - src/mongo/db/ops/modifier_current_date.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::StringData const&)
            symbol_sources:
            - src/mongo/base/string_data.cpp
        -   symbol_name: mongo::ModifierCurrentDate::ModifierCurrentDate()
            symbol_sources:
            - src/mongo/db/ops/modifier_current_date.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::Element::leftChild() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::getType() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::Status::operator!=(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ModifierCurrentDate::log(mongo::LogBuilder*) const
            symbol_sources:
            - src/mongo/db/ops/modifier_current_date.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
    -   file_name: src/mongo/db/ops/modifier_inc.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ModifierInc::ModifierInc(mongo::ModifierInc::ModifierIncMode)
            symbol_uses:
            - src/mongo/db/ops/modifier_table.cpp
        file_dependencies:
        -   symbol_name: mongo::SafeNum::isIdentical(mongo::SafeNum const&) const
            symbol_sources:
            - src/mongo/util/safe_num.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::SafeNum::mulInternal(mongo::SafeNum const&, mongo::SafeNum
                const&)
            symbol_sources:
            - src/mongo/util/safe_num.cpp
        -   symbol_name: mongo::mutablebson::Element::isNumeric() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::setValueSafeNum(mongo::SafeNum)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::LogBuilder::addToSets(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::pathsupport::createPathAt(mongo::FieldRef const&,
                unsigned long, mongo::mutablebson::Element, mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::fieldchecker::isUpdatable(mongo::FieldRef const&)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::FieldRef::parse(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::pathsupport::findLongestPrefix(mongo::FieldRef const&,
                mongo::mutablebson::Element, unsigned long*, mongo::mutablebson::Element*)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::fieldchecker::isPositional(mongo::FieldRef const&,
                unsigned long*, unsigned long*)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::mutablebson::Element::findFirstChildNamed(mongo::StringData
                const&) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::getValueSafeNum() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::SafeNum::debugString() const
            symbol_sources:
            - src/mongo/util/safe_num.cpp
        -   symbol_name: mongo::mutablebson::Element::getFieldName() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::SafeNum::SafeNum(mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/util/safe_num.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementSafeNum(mongo::StringData
                const&, mongo::SafeNum)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::getPart(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Element::getType() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::SafeNum::addInternal(mongo::SafeNum const&, mongo::SafeNum
                const&)
            symbol_sources:
            - src/mongo/util/safe_num.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::setPart(unsigned long, mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Element::toString() const
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::typeName(mongo::BSONType)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/db/ops/modifier_inc.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/modifier_inc_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierInc::apply() const
            symbol_sources:
            - src/mongo/db/ops/modifier_inc.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Document::~Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document(mongo::BSONObj const&,
                mongo::mutablebson::Document::InPlaceMode)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::ModifierInc::ModifierInc(mongo::ModifierInc::ModifierIncMode)
            symbol_sources:
            - src/mongo/db/ops/modifier_inc.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Document::getCurrentInPlaceMode() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierInc::init(mongo::BSONElement const&, mongo::ModifierInterface::Options
                const&, bool*)
            symbol_sources:
            - src/mongo/db/ops/modifier_inc.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierInc::log(mongo::LogBuilder*) const
            symbol_sources:
            - src/mongo/db/ops/modifier_inc.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Element::findFirstChildNamed(mongo::StringData
                const&) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::ModifierInc::prepare(mongo::mutablebson::Element,
                mongo::StringData const&, mongo::ModifierInterface::ExecInfo*)
            symbol_sources:
            - src/mongo/db/ops/modifier_inc.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::StringData const&)
            symbol_sources:
            - src/mongo/base/string_data.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ModifierInc::~ModifierInc()
            symbol_sources:
            - src/mongo/db/ops/modifier_inc.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::checkDoc(mongo::mutablebson::Document
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::mutablebson::Element::getType() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::Status::operator!=(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::operator<<(std::ostream&, mongo::mutablebson::Document
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::Element::rightChild() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
    -   file_name: src/mongo/db/ops/modifier_interface.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/modifier_object_replace.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ModifierObjectReplace::ModifierObjectReplace()
            symbol_uses:
            - src/mongo/db/ops/update_driver.cpp
        file_dependencies:
        -   symbol_name: mongo::mutablebson::Element::compareWithBSONElement(mongo::BSONElement
                const&, bool) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::LogBuilder::getReplacementObject(mongo::mutablebson::Element*)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::OpTime::now(mongo::mutex::scoped_lock const&)
            symbol_sources:
            - src/mongo/bson/optime.cpp
        -   symbol_name: mongo::mutablebson::Element::remove()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::writeTo(mongo::BSONObjBuilder*)
                const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::Element::appendElement(mongo::BSONElement
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::mutablebson::Element::getFieldName() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::OpTime::m
            symbol_sources:
            - src/mongo/bson/optime.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::Element::leftChild() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::toString() const
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::mutablebson::Element::rightSibling(unsigned long)
                const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/db/ops/modifier_object_replace.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/modifier_object_replace_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierObjectReplace::apply() const
            symbol_sources:
            - src/mongo/db/ops/modifier_object_replace.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Document::~Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document(mongo::BSONObj const&,
                mongo::mutablebson::Document::InPlaceMode)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::getValue() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::ModifierObjectReplace::init(mongo::BSONElement const&,
                mongo::ModifierInterface::Options const&, bool*)
            symbol_sources:
            - src/mongo/db/ops/modifier_object_replace.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::ModifierObjectReplace::ModifierObjectReplace()
            symbol_sources:
            - src/mongo/db/ops/modifier_object_replace.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ModifierObjectReplace::log(mongo::LogBuilder*) const
            symbol_sources:
            - src/mongo/db/ops/modifier_object_replace.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Document::Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierObjectReplace::~ModifierObjectReplace()
            symbol_sources:
            - src/mongo/db/ops/modifier_object_replace.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Element::findFirstChildNamed(mongo::StringData
                const&) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ModifierObjectReplace::prepare(mongo::mutablebson::Element,
                mongo::StringData const&, mongo::ModifierInterface::ExecInfo*)
            symbol_sources:
            - src/mongo/db/ops/modifier_object_replace.cpp
        -   symbol_name: mongo::mutablebson::checkDoc(mongo::mutablebson::Document
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::Status::operator!=(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::operator<<(std::ostream&, mongo::mutablebson::Document
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/ops/modifier_pop.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ModifierPop::ModifierPop()
            symbol_uses:
            - src/mongo/db/ops/modifier_table.cpp
        file_dependencies:
        -   symbol_name: mongo::LogBuilder::addToSets(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Element::remove()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::FieldRef::parse(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::LogBuilder::addToUnsets(mongo::StringData)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::pathsupport::findLongestPrefix(mongo::FieldRef const&,
                mongo::mutablebson::Element, unsigned long*, mongo::mutablebson::Element*)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::fieldchecker::isPositional(mongo::FieldRef const&,
                unsigned long*, unsigned long*)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::mutablebson::Element::findFirstChildNamed(mongo::StringData
                const&) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementWithNewFieldName(mongo::StringData
                const&, mongo::mutablebson::ConstElement)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::getFieldName() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::hasChildren() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::fieldchecker::isUpdatable(mongo::FieldRef const&)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::mutablebson::Element::leftChild() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::getType() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::toString() const
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::setPart(unsigned long, mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Element::rightChild() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::typeName(mongo::BSONType)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/db/ops/modifier_pop.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/modifier_pop_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::ModifierPop::init(mongo::BSONElement const&, mongo::ModifierInterface::Options
                const&, bool*)
            symbol_sources:
            - src/mongo/db/ops/modifier_pop.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierPop::prepare(mongo::mutablebson::Element,
                mongo::StringData const&, mongo::ModifierInterface::ExecInfo*)
            symbol_sources:
            - src/mongo/db/ops/modifier_pop.cpp
        -   symbol_name: mongo::ModifierPop::ModifierPop()
            symbol_sources:
            - src/mongo/db/ops/modifier_pop.cpp
        -   symbol_name: mongo::ModifierPop::~ModifierPop()
            symbol_sources:
            - src/mongo/db/ops/modifier_pop.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Document::getCurrentInPlaceMode() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::Document::Document(mongo::BSONObj const&,
                mongo::mutablebson::Document::InPlaceMode)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierPop::apply() const
            symbol_sources:
            - src/mongo/db/ops/modifier_pop.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::StringData const&)
            symbol_sources:
            - src/mongo/base/string_data.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ModifierPop::log(mongo::LogBuilder*) const
            symbol_sources:
            - src/mongo/db/ops/modifier_pop.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::checkDoc(mongo::mutablebson::Document
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::mutablebson::operator<<(std::ostream&, mongo::mutablebson::Document
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::Document::~Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
    -   file_name: src/mongo/db/ops/modifier_pull.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ModifierPull::ModifierPull()
            symbol_uses:
            - src/mongo/db/ops/modifier_table.cpp
        file_dependencies:
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Element::compareWithBSONElement(mongo::BSONElement
                const&, bool) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::LogBuilder::addToSets(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Element::pushBack(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::mutablebson::Element::getValue() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementArray(mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::remove()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::FieldRef::parse(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementWithNewFieldName(mongo::StringData
                const&, mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parse(mongo::BSONObj const&,
                bool)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::BSONElement::getGtLtOp(int) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::LogBuilder::addToUnsets(mongo::StringData)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::pathsupport::findLongestPrefix(mongo::FieldRef const&,
                mongo::mutablebson::Element, unsigned long*, mongo::mutablebson::Element*)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::fieldchecker::isPositional(mongo::FieldRef const&,
                unsigned long*, unsigned long*)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::mutablebson::Element::hasChildren() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::fieldchecker::isUpdatable(mongo::FieldRef const&)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::Element::leftChild() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::getType() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::setPart(unsigned long, mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::mutablebson::Element::rightSibling(unsigned long)
                const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/db/ops/modifier_pull.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/modifier_pull_all.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ModifierPullAll::ModifierPullAll()
            symbol_uses:
            - src/mongo/db/ops/modifier_table.cpp
        file_dependencies:
        -   symbol_name: mongo::mutablebson::Element::compareWithBSONElement(mongo::BSONElement
                const&, bool) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::findElementNamed(mongo::StringData
                const&) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::LogBuilder::addToSets(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Element::remove()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::FieldRef::parse(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::LogBuilder::addToUnsets(mongo::StringData)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::pathsupport::findLongestPrefix(mongo::FieldRef const&,
                mongo::mutablebson::Element, unsigned long*, mongo::mutablebson::Element*)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::fieldchecker::isPositional(mongo::FieldRef const&,
                unsigned long*, unsigned long*)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::BSONElement::Array() const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementWithNewFieldName(mongo::StringData
                const&, mongo::mutablebson::ConstElement)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::getFieldName() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::hasChildren() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::fieldchecker::isUpdatable(mongo::FieldRef const&)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::mutablebson::Element::leftChild() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::getType() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::toString() const
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::setPart(unsigned long, mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::typeName(mongo::BSONType)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::mutablebson::Element::rightSibling(unsigned long)
                const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/db/ops/modifier_pull_all.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/modifier_pull_all_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::ModifierPullAll::~ModifierPullAll()
            symbol_sources:
            - src/mongo/db/ops/modifier_pull_all.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierPullAll::init(mongo::BSONElement const&, mongo::ModifierInterface::Options
                const&, bool*)
            symbol_sources:
            - src/mongo/db/ops/modifier_pull_all.cpp
        -   symbol_name: mongo::mutablebson::Document::~Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document(mongo::BSONObj const&,
                mongo::mutablebson::Document::InPlaceMode)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::ModifierPullAll::apply() const
            symbol_sources:
            - src/mongo/db/ops/modifier_pull_all.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Document::getCurrentInPlaceMode() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierPullAll::log(mongo::LogBuilder*) const
            symbol_sources:
            - src/mongo/db/ops/modifier_pull_all.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::checkDoc(mongo::mutablebson::Document
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::Status::operator!=(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::operator<<(std::ostream&, mongo::mutablebson::Document
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ModifierPullAll::ModifierPullAll()
            symbol_sources:
            - src/mongo/db/ops/modifier_pull_all.cpp
        -   symbol_name: mongo::ModifierPullAll::prepare(mongo::mutablebson::Element,
                mongo::StringData const&, mongo::ModifierInterface::ExecInfo*)
            symbol_sources:
            - src/mongo/db/ops/modifier_pull_all.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/ops/modifier_pull_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Document::~Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document(mongo::BSONObj const&,
                mongo::mutablebson::Document::InPlaceMode)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::StringData const&)
            symbol_sources:
            - src/mongo/base/string_data.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierPull::log(mongo::LogBuilder*) const
            symbol_sources:
            - src/mongo/db/ops/modifier_pull.cpp
        -   symbol_name: mongo::mutablebson::Document::getCurrentInPlaceMode() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierPull::init(mongo::BSONElement const&, mongo::ModifierInterface::Options
                const&, bool*)
            symbol_sources:
            - src/mongo/db/ops/modifier_pull.cpp
        -   symbol_name: mongo::ModifierPull::~ModifierPull()
            symbol_sources:
            - src/mongo/db/ops/modifier_pull.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierPull::apply() const
            symbol_sources:
            - src/mongo/db/ops/modifier_pull.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierPull::prepare(mongo::mutablebson::Element,
                mongo::StringData const&, mongo::ModifierInterface::ExecInfo*)
            symbol_sources:
            - src/mongo/db/ops/modifier_pull.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ModifierPull::ModifierPull()
            symbol_sources:
            - src/mongo/db/ops/modifier_pull.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::checkDoc(mongo::mutablebson::Document
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::Status::operator!=(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::operator<<(std::ostream&, mongo::mutablebson::Document
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
    -   file_name: src/mongo/db/ops/modifier_push.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ModifierPush::ModifierPush(mongo::ModifierPush::ModifierPushMode)
            symbol_uses:
            - src/mongo/db/ops/modifier_table.cpp
        file_dependencies:
        -   symbol_name: mongo::mutablebson::Element::leftSibling(unsigned long) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Element::toString() const
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::pathsupport::createPathAt(mongo::FieldRef const&,
                unsigned long, mongo::mutablebson::Element, mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::mutablebson::Element::countChildren() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::pushBack(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::mutablebson::Element::getValue() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementArray(mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::LogBuilder::addToSetsWithNewFieldName(mongo::StringData
                const&, mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::fieldchecker::isUpdatable(mongo::FieldRef const&)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::mutablebson::Element::findNthChild(unsigned long)
                const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::remove()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementWithNewFieldName(mongo::StringData
                const&, mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::BSONObj::extractFields(mongo::BSONObj const&, bool)
                const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::pathsupport::findLongestPrefix(mongo::FieldRef const&,
                mongo::mutablebson::Element, unsigned long*, mongo::mutablebson::Element*)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::fieldchecker::isPositional(mongo::FieldRef const&,
                unsigned long*, unsigned long*)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::mutablebson::Element::addSiblingRight(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::findFirstChildNamed(mongo::StringData
                const&) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::FieldRef::FieldRef(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::LogBuilder::addToSetsWithNewFieldName(mongo::StringData
                const&, mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::parse(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::mutablebson::Element::compareWithElement(mongo::mutablebson::ConstElement
                const&, bool) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::getPart(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Element::leftChild() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::getType() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::typeName(mongo::BSONType)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::Element::rightSibling(unsigned long)
                const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::setPart(unsigned long, mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Element::rightChild() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::mutablebson::Element::pushFront(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/db/ops/modifier_push.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/modifier_push_sorter.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/modifier_push_sorter_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Element::pushBack(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::mutablebson::Element::getValue() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementArray(mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Element::remove()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONObj::extractFields(mongo::BSONObj const&, bool)
                const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::mutablebson::Document::~Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Element::findFirstChildNamed(mongo::StringData
                const&) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::mutablebson::Element::compareWithElement(mongo::mutablebson::ConstElement
                const&, bool) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::Element::leftChild() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::getType() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::appendObject(mongo::StringData
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::mutablebson::Element::rightSibling(unsigned long)
                const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::findNthChild(unsigned long)
                const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
    -   file_name: src/mongo/db/ops/modifier_push_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::Ordering
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ModifierPush::ModifierPush(mongo::ModifierPush::ModifierPushMode)
            symbol_sources:
            - src/mongo/db/ops/modifier_push.cpp
        -   symbol_name: mongo::ModifierPush::prepare(mongo::mutablebson::Element,
                mongo::StringData const&, mongo::ModifierInterface::ExecInfo*)
            symbol_sources:
            - src/mongo/db/ops/modifier_push.cpp
        -   symbol_name: mongo::BSONObj::extractFields(mongo::BSONObj const&, bool)
                const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Element::countChildren() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::~Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ModifierPush::apply() const
            symbol_sources:
            - src/mongo/db/ops/modifier_push.cpp
        -   symbol_name: mongo::ModifierPush::init(mongo::BSONElement const&, mongo::ModifierInterface::Options
                const&, bool*)
            symbol_sources:
            - src/mongo/db/ops/modifier_push.cpp
        -   symbol_name: mongo::Status::operator!=(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Document::Document(mongo::BSONObj const&,
                mongo::mutablebson::Document::InPlaceMode)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::ModifierPush::~ModifierPush()
            symbol_sources:
            - src/mongo/db/ops/modifier_push.cpp
        -   symbol_name: mongo::mutablebson::Document::getCurrentInPlaceMode() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::checkDoc(mongo::mutablebson::Document
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ModifierPush::log(mongo::LogBuilder*) const
            symbol_sources:
            - src/mongo/db/ops/modifier_push.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Document::Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::StringData const&)
            symbol_sources:
            - src/mongo/base/string_data.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::mutablebson::operator<<(std::ostream&, mongo::mutablebson::Document
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
    -   file_name: src/mongo/db/ops/modifier_rename.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ModifierRename::ModifierRename()
            symbol_uses:
            - src/mongo/db/ops/modifier_table.cpp
        file_dependencies:
        -   symbol_name: mongo::FieldRef::compare(mongo::FieldRef const&) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Element::findElementNamed(mongo::StringData
                const&) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::LogBuilder::addToSets(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::pathsupport::createPathAt(mongo::FieldRef const&,
                unsigned long, mongo::mutablebson::Element, mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::mutablebson::Element::getValue() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::isPrefixOf(mongo::FieldRef const&) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::fieldchecker::isUpdatable(mongo::FieldRef const&)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::mutablebson::Element::remove()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementWithNewFieldName(mongo::StringData
                const&, mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::LogBuilder::addToUnsets(mongo::StringData)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::pathsupport::findLongestPrefix(mongo::FieldRef const&,
                mongo::mutablebson::Element, unsigned long*, mongo::mutablebson::Element*)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::fieldchecker::isPositional(mongo::FieldRef const&,
                unsigned long*, unsigned long*)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementWithNewFieldName(mongo::StringData
                const&, mongo::mutablebson::ConstElement)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::getFieldName() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::parse(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::getPart(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Element::leftChild() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::getType() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::toString() const
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::Element::parent() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/db/ops/modifier_rename.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/modifier_rename_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierRename::ModifierRename()
            symbol_sources:
            - src/mongo/db/ops/modifier_rename.cpp
        -   symbol_name: mongo::ModifierRename::init(mongo::BSONElement const&, mongo::ModifierInterface::Options
                const&, bool*)
            symbol_sources:
            - src/mongo/db/ops/modifier_rename.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Document::~Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document(mongo::BSONObj const&,
                mongo::mutablebson::Document::InPlaceMode)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Document::getCurrentInPlaceMode() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::StringData const&)
            symbol_sources:
            - src/mongo/base/string_data.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ModifierRename::~ModifierRename()
            symbol_sources:
            - src/mongo/db/ops/modifier_rename.cpp
        -   symbol_name: mongo::ModifierRename::apply() const
            symbol_sources:
            - src/mongo/db/ops/modifier_rename.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::checkDoc(mongo::mutablebson::Document
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::Status::operator!=(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::operator<<(std::ostream&, mongo::mutablebson::Document
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ModifierRename::log(mongo::LogBuilder*) const
            symbol_sources:
            - src/mongo/db/ops/modifier_rename.cpp
        -   symbol_name: mongo::ModifierRename::prepare(mongo::mutablebson::Element,
                mongo::StringData const&, mongo::ModifierInterface::ExecInfo*)
            symbol_sources:
            - src/mongo/db/ops/modifier_rename.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
    -   file_name: src/mongo/db/ops/modifier_set.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ModifierSet::ModifierSet(mongo::ModifierSet::ModifierSetMode)
            symbol_uses:
            - src/mongo/db/ops/modifier_table.cpp
        file_dependencies:
        -   symbol_name: mongo::mutablebson::Element::setValueBSONElement(mongo::BSONElement
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Element::compareWithBSONElement(mongo::BSONElement
                const&, bool) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::LogBuilder::addToSets(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::pathsupport::createPathAt(mongo::FieldRef const&,
                unsigned long, mongo::mutablebson::Element, mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::mutablebson::Element::setValueObject(mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::fieldchecker::isUpdatable(mongo::FieldRef const&)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::FieldRef::parse(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementWithNewFieldName(mongo::StringData
                const&, mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::pathsupport::findLongestPrefix(mongo::FieldRef const&,
                mongo::mutablebson::Element, unsigned long*, mongo::mutablebson::Element*)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::fieldchecker::isPositional(mongo::FieldRef const&,
                unsigned long*, unsigned long*)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::FieldRef::getPart(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Element::getType() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::setPart(unsigned long, mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/db/ops/modifier_set.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/modifier_set_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::ModifierSet::log(mongo::LogBuilder*) const
            symbol_sources:
            - src/mongo/db/ops/modifier_set.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierSet::init(mongo::BSONElement const&, mongo::ModifierInterface::Options
                const&, bool*)
            symbol_sources:
            - src/mongo/db/ops/modifier_set.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementInt(mongo::StringData
                const&, int)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Element::countChildren() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Element::pushBack(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::mutablebson::Document::Document(mongo::BSONObj const&,
                mongo::mutablebson::Document::InPlaceMode)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::ModifierSet::ModifierSet(mongo::ModifierSet::ModifierSetMode)
            symbol_sources:
            - src/mongo/db/ops/modifier_set.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ModifierSet::apply() const
            symbol_sources:
            - src/mongo/db/ops/modifier_set.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Document::getCurrentInPlaceMode() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Document::~Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementObject(mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::StringData const&)
            symbol_sources:
            - src/mongo/base/string_data.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ModifierSet::~ModifierSet()
            symbol_sources:
            - src/mongo/db/ops/modifier_set.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::checkDoc(mongo::mutablebson::Document
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::Status::operator!=(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::operator<<(std::ostream&, mongo::mutablebson::Document
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::ModifierSet::prepare(mongo::mutablebson::Element,
                mongo::StringData const&, mongo::ModifierInterface::ExecInfo*)
            symbol_sources:
            - src/mongo/db/ops/modifier_set.cpp
    -   file_name: src/mongo/db/ops/modifier_unset.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ModifierUnset::ModifierUnset()
            symbol_uses:
            - src/mongo/db/ops/modifier_table.cpp
        file_dependencies:
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Element::remove()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::FieldRef::parse(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::LogBuilder::addToUnsets(mongo::StringData)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::pathsupport::findLongestPrefix(mongo::FieldRef const&,
                mongo::mutablebson::Element, unsigned long*, mongo::mutablebson::Element*)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::fieldchecker::isPositional(mongo::FieldRef const&,
                unsigned long*, unsigned long*)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::fieldchecker::isUpdatable(mongo::FieldRef const&)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::mutablebson::Element::setValueNull()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::getType() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::setPart(unsigned long, mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Element::parent() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
    -   file_name: src/mongo/db/ops/modifier_unset.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/modifier_unset_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::ModifierUnset::init(mongo::BSONElement const&, mongo::ModifierInterface::Options
                const&, bool*)
            symbol_sources:
            - src/mongo/db/ops/modifier_unset.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierUnset::apply() const
            symbol_sources:
            - src/mongo/db/ops/modifier_unset.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Document::~Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document(mongo::BSONObj const&,
                mongo::mutablebson::Document::InPlaceMode)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Document::getCurrentInPlaceMode() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModifierUnset::~ModifierUnset()
            symbol_sources:
            - src/mongo/db/ops/modifier_unset.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::StringData const&)
            symbol_sources:
            - src/mongo/base/string_data.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::checkDoc(mongo::mutablebson::Document
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::ModifierUnset::prepare(mongo::mutablebson::Element,
                mongo::StringData const&, mongo::ModifierInterface::ExecInfo*)
            symbol_sources:
            - src/mongo/db/ops/modifier_unset.cpp
        -   symbol_name: mongo::ModifierUnset::ModifierUnset()
            symbol_sources:
            - src/mongo/db/ops/modifier_unset.cpp
        -   symbol_name: mongo::Status::operator!=(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::operator<<(std::ostream&, mongo::mutablebson::Document
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::ModifierUnset::log(mongo::LogBuilder*) const
            symbol_sources:
            - src/mongo/db/ops/modifier_unset.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
-   group_title: 'TODO: Name this group'
    group_description: 'libupdate_driver.a. This is the external interface to the
        new update system:'
    group_files:
    - src/mongo/db/ops/modifier_table.cpp
    - src/mongo/db/ops/modifier_table.h
    - src/mongo/db/ops/modifier_table_test.cpp
    - src/mongo/db/ops/update_driver.cpp
    - src/mongo/db/ops/update_driver.h
    - src/mongo/db/ops/update_driver_test.cpp
    group_generated_data:
    -   file_name: src/mongo/db/ops/modifier_table.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::modifiertable::makeUpdateMod(mongo::modifiertable::ModifierType)
            symbol_uses:
            - src/mongo/db/ops/update_driver.cpp
        -   symbol_name: mongo::modifiertable::getType(mongo::StringData const&)
            symbol_uses:
            - src/mongo/db/ops/update_driver.cpp
        file_dependencies:
        -   symbol_name: mongo::ModifierAddToSet::ModifierAddToSet()
            symbol_sources:
            - src/mongo/db/ops/modifier_add_to_set.cpp
        -   symbol_name: mongo::ModifierRename::ModifierRename()
            symbol_sources:
            - src/mongo/db/ops/modifier_rename.cpp
        -   symbol_name: mongo::ModifierPop::ModifierPop()
            symbol_sources:
            - src/mongo/db/ops/modifier_pop.cpp
        -   symbol_name: mongo::ModifierInc::ModifierInc(mongo::ModifierInc::ModifierIncMode)
            symbol_sources:
            - src/mongo/db/ops/modifier_inc.cpp
        -   symbol_name: mongo::ModifierBit::ModifierBit()
            symbol_sources:
            - src/mongo/db/ops/modifier_bit.cpp
        -   symbol_name: mongo::ModifierCompare::ModifierCompare(mongo::ModifierCompare::ModifierCompareMode)
            symbol_sources:
            - src/mongo/db/ops/modifier_compare.cpp
        -   symbol_name: mongo::ModifierSet::ModifierSet(mongo::ModifierSet::ModifierSetMode)
            symbol_sources:
            - src/mongo/db/ops/modifier_set.cpp
        -   symbol_name: mongo::StringData::Hasher::operator()(mongo::StringData const&)
                const
            symbol_sources:
            - src/mongo/base/string_data.cpp
        -   symbol_name: mongo::ModifierCurrentDate::ModifierCurrentDate()
            symbol_sources:
            - src/mongo/db/ops/modifier_current_date.cpp
        -   symbol_name: mongo::_makeStringVector(int, ...)
            symbol_sources:
            - src/mongo/base/make_string_vector.cpp
        -   symbol_name: mongo::ModifierPull::ModifierPull()
            symbol_sources:
            - src/mongo/db/ops/modifier_pull.cpp
        -   symbol_name: mongo::ModifierUnset::ModifierUnset()
            symbol_sources:
            - src/mongo/db/ops/modifier_unset.cpp
        -   symbol_name: mongo::ModifierPullAll::ModifierPullAll()
            symbol_sources:
            - src/mongo/db/ops/modifier_pull_all.cpp
        -   symbol_name: mongo::GlobalInitializerRegisterer::GlobalInitializerRegisterer(std::string
                const&, boost::function<mongo::Status (mongo::InitializerContext*)>
                const&, std::vector<std::string, std::allocator<std::string> > const&,
                std::vector<std::string, std::allocator<std::string> > const&)
            symbol_sources:
            - src/mongo/base/global_initializer_registerer.cpp
        -   symbol_name: mongo::ModifierPush::ModifierPush(mongo::ModifierPush::ModifierPushMode)
            symbol_sources:
            - src/mongo/db/ops/modifier_push.cpp
    -   file_name: src/mongo/db/ops/modifier_table.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/modifier_table_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::modifiertable::makeUpdateMod(mongo::modifiertable::ModifierType)
            symbol_sources:
            - src/mongo/db/ops/modifier_table.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::modifiertable::getType(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/ops/modifier_table.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
    -   file_name: src/mongo/db/ops/update_driver.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::UpdateDriver::populateDocumentWithQueryFields(mongo::CanonicalQuery
                const*, mongo::mutablebson::Document&) const
            symbol_uses:
            - src/mongo/db/ops/update.cpp
        -   symbol_name: mongo::UpdateDriver::modsAffectIndices() const
            symbol_uses:
            - src/mongo/db/ops/update.cpp
        -   symbol_name: mongo::UpdateDriver::refreshIndexKeys(mongo::IndexPathSet
                const*)
            symbol_uses:
            - src/mongo/db/ops/update.cpp
        -   symbol_name: mongo::UpdateDriver::~UpdateDriver()
            symbol_uses:
            - src/mongo/db/auth/role_graph_update.cpp
            - src/mongo/db/ops/update.cpp
            - src/mongo/db/auth/authz_manager_external_state_mock.cpp
            - src/mongo/db/instance.cpp
        -   symbol_name: mongo::UpdateDriver::modOptions() const
            symbol_uses:
            - src/mongo/db/ops/update.cpp
        -   symbol_name: mongo::UpdateDriver::makeOplogEntryQuery(mongo::BSONObj const&,
                bool) const
            symbol_uses:
            - src/mongo/db/ops/update.cpp
            - src/mongo/db/auth/authz_manager_external_state_mock.cpp
        -   symbol_name: mongo::UpdateDriver::setLogOp(bool)
            symbol_uses:
            - src/mongo/db/ops/update.cpp
        -   symbol_name: mongo::UpdateDriver::isDocReplacement() const
            symbol_uses:
            - src/mongo/db/ops/update.cpp
        -   symbol_name: mongo::UpdateDriver::UpdateDriver(mongo::UpdateDriver::Options
                const&)
            symbol_uses:
            - src/mongo/db/auth/role_graph_update.cpp
            - src/mongo/db/ops/update.cpp
            - src/mongo/db/auth/authz_manager_external_state_mock.cpp
            - src/mongo/db/instance.cpp
        -   symbol_name: mongo::UpdateDriver::parse(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/auth/role_graph_update.cpp
            - src/mongo/db/ops/update.cpp
            - src/mongo/db/auth/authz_manager_external_state_mock.cpp
            - src/mongo/db/instance.cpp
        -   symbol_name: mongo::UpdateDriver::setContext(mongo::ModifierInterface::ExecInfo::UpdateContext)
            symbol_uses:
            - src/mongo/db/ops/update.cpp
        -   symbol_name: mongo::UpdateDriver::populateDocumentWithQueryFields(mongo::BSONObj
                const&, mongo::mutablebson::Document&) const
            symbol_uses:
            - src/mongo/db/auth/role_graph_update.cpp
            - src/mongo/db/auth/authz_manager_external_state_mock.cpp
        -   symbol_name: mongo::UpdateDriver::update(mongo::StringData const&, mongo::mutablebson::Document*,
                mongo::BSONObj*, mongo::FieldRefSet*)
            symbol_uses:
            - src/mongo/db/auth/role_graph_update.cpp
            - src/mongo/db/ops/update.cpp
            - src/mongo/db/auth/authz_manager_external_state_mock.cpp
        file_dependencies:
        -   symbol_name: mongo::FieldRefSet::FieldRefSet()
            symbol_sources:
            - src/mongo/db/field_ref_set.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::modifiertable::makeUpdateMod(mongo::modifiertable::ModifierType)
            symbol_sources:
            - src/mongo/db/ops/modifier_table.cpp
        -   symbol_name: mongo::modifiertable::getType(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/ops/modifier_table.cpp
        -   symbol_name: mongo::mutablebson::Document::~Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::reset()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ModifierObjectReplace::ModifierObjectReplace()
            symbol_sources:
            - src/mongo/db/ops/modifier_object_replace.cpp
        -   symbol_name: mongo::mutablebson::Element::writeTo(mongo::BSONObjBuilder*)
                const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::FieldRefSet::insert(mongo::FieldRef const*, mongo::FieldRef
                const**)
            symbol_sources:
            - src/mongo/db/field_ref_set.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::Document::disableInPlaceUpdates()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CanonicalQuery::canonicalize(std::string const&, mongo::BSONObj
                const&, mongo::CanonicalQuery**)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElement(mongo::BSONElement
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::IndexPathSet::mightBeIndexed(mongo::StringData const&)
                const
            symbol_sources:
            - src/mongo/db/index_set.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::toString() const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::typeName(mongo::BSONType)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::mutablebson::Element::pushFront(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/db/ops/update_driver.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/update_driver_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::UpdateDriver::parse(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/ops/update_driver.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Document::~Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::UpdateDriver::populateDocumentWithQueryFields(mongo::BSONObj
                const&, mongo::mutablebson::Document&) const
            symbol_sources:
            - src/mongo/db/ops/update_driver.cpp
        -   symbol_name: mongo::UpdateDriver::isDocReplacement() const
            symbol_sources:
            - src/mongo/db/ops/update_driver.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Document::Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::UpdateDriver::~UpdateDriver()
            symbol_sources:
            - src/mongo/db/ops/update_driver.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::UpdateDriver::numMods() const
            symbol_sources:
            - src/mongo/db/ops/update_driver.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::checkDoc(mongo::mutablebson::Document
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::Status::operator!=(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::operator<<(std::ostream&, mongo::mutablebson::Document
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::UpdateDriver::UpdateDriver(mongo::UpdateDriver::Options
                const&)
            symbol_sources:
            - src/mongo/db/ops/update_driver.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
-   group_title: 'TODO: Name this group'
    group_description: Utilities for the new update system (libupdate_common.a)
    group_files:
    - src/mongo/db/ops/path_support.cpp
    - src/mongo/db/ops/path_support.h
    - src/mongo/db/ops/path_support_test.cpp
    - src/mongo/db/ops/log_builder.cpp
    - src/mongo/db/ops/log_builder.h
    - src/mongo/db/ops/log_builder_test.cpp
    - src/mongo/db/ops/field_checker.cpp
    - src/mongo/db/ops/field_checker.h
    - src/mongo/db/ops/field_checker_test.cpp
    group_generated_data:
    -   file_name: src/mongo/db/ops/path_support.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::pathsupport::createPathAt(mongo::FieldRef const&,
                unsigned long, mongo::mutablebson::Element, mongo::mutablebson::Element)
            symbol_uses:
            - src/mongo/db/ops/modifier_bit.cpp
            - src/mongo/db/ops/modifier_compare.cpp
            - src/mongo/db/ops/modifier_rename.cpp
            - src/mongo/db/ops/modifier_current_date.cpp
            - src/mongo/db/ops/modifier_set.cpp
            - src/mongo/db/ops/modifier_inc.cpp
            - src/mongo/db/ops/modifier_add_to_set.cpp
            - src/mongo/db/ops/modifier_push.cpp
        -   symbol_name: mongo::pathsupport::findLongestPrefix(mongo::FieldRef const&,
                mongo::mutablebson::Element, unsigned long*, mongo::mutablebson::Element*)
            symbol_uses:
            - src/mongo/db/ops/modifier_unset.cpp
            - src/mongo/db/ops/modifier_pull_all.cpp
            - src/mongo/db/ops/modifier_bit.cpp
            - src/mongo/db/ops/modifier_compare.cpp
            - src/mongo/db/ops/modifier_rename.cpp
            - src/mongo/db/ops/modifier_current_date.cpp
            - src/mongo/db/ops/modifier_set.cpp
            - src/mongo/db/ops/modifier_inc.cpp
            - src/mongo/db/ops/modifier_add_to_set.cpp
            - src/mongo/db/ops/modifier_pull.cpp
            - src/mongo/db/ops/modifier_pop.cpp
            - src/mongo/db/ops/modifier_push.cpp
        file_dependencies:
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Element::countChildren() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::pushBack(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementObject(mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::findNthChild(unsigned long)
                const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::appendNull(mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::mutablebson::Element::findFirstChildNamed(mongo::StringData
                const&) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::getPart(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Element::getType() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::toString() const
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Element::hasChildren() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
    -   file_name: src/mongo/db/ops/path_support.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/path_support_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Element::pushBack(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::mutablebson::Element::getValue() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::Element::hasValue() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::ErrorCodes::Error)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Element::findNthChild(unsigned long)
                const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::Element::leftChild() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::Element::rightSibling(unsigned long)
                const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Document::~Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementObject(mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::operator==(mongo::ErrorCodes::Error) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::Element::leftSibling(unsigned long) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Element::parent() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Element::appendInt(mongo::StringData
                const&, int)
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Element::getFieldName() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::compareWithElement(mongo::mutablebson::ConstElement
                const&, bool) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::getType() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::mutablebson::operator<<(std::ostream&, mongo::mutablebson::Document
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementInt(mongo::StringData
                const&, int)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::pathsupport::createPathAt(mongo::FieldRef const&,
                unsigned long, mongo::mutablebson::Element, mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementArray(mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::FieldRef::parse(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::pathsupport::findLongestPrefix(mongo::FieldRef const&,
                mongo::mutablebson::Element, unsigned long*, mongo::mutablebson::Element*)
            symbol_sources:
            - src/mongo/db/ops/path_support.cpp
        -   symbol_name: mongo::mutablebson::Element::findFirstChildNamed(mongo::StringData
                const&) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::StringData const&)
            symbol_sources:
            - src/mongo/base/string_data.cpp
        -   symbol_name: mongo::mutablebson::checkDoc(mongo::mutablebson::Document
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::mutablebson::Element::countChildren() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::rightChild() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
    -   file_name: src/mongo/db/ops/log_builder.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::LogBuilder::getReplacementObject(mongo::mutablebson::Element*)
            symbol_uses:
            - src/mongo/db/ops/modifier_object_replace.cpp
        -   symbol_name: mongo::LogBuilder::addToSets(mongo::mutablebson::Element)
            symbol_uses:
            - src/mongo/db/ops/modifier_pull.cpp
            - src/mongo/db/ops/modifier_bit.cpp
            - src/mongo/db/ops/modifier_rename.cpp
            - src/mongo/db/ops/modifier_set.cpp
            - src/mongo/db/ops/modifier_inc.cpp
            - src/mongo/db/ops/modifier_add_to_set.cpp
            - src/mongo/db/ops/modifier_pull_all.cpp
            - src/mongo/db/ops/modifier_pop.cpp
        -   symbol_name: mongo::LogBuilder::addToSetsWithNewFieldName(mongo::StringData
                const&, mongo::mutablebson::Element)
            symbol_uses:
            - src/mongo/db/ops/modifier_current_date.cpp
            - src/mongo/db/ops/modifier_push.cpp
        -   symbol_name: mongo::LogBuilder::addToUnsets(mongo::StringData)
            symbol_uses:
            - src/mongo/db/ops/modifier_pull_all.cpp
            - src/mongo/db/ops/modifier_unset.cpp
            - src/mongo/db/ops/modifier_pop.cpp
            - src/mongo/db/ops/modifier_pull.cpp
            - src/mongo/db/ops/modifier_rename.cpp
        -   symbol_name: mongo::LogBuilder::addToSetsWithNewFieldName(mongo::StringData
                const&, mongo::BSONElement const&)
            symbol_uses:
            - src/mongo/db/ops/modifier_push.cpp
            - src/mongo/db/ops/modifier_compare.cpp
        file_dependencies:
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Element::pushBack(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementObject(mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementWithNewFieldName(mongo::StringData
                const&, mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementWithNewFieldName(mongo::StringData
                const&, mongo::mutablebson::ConstElement)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::SafeNum::debugString() const
            symbol_sources:
            - src/mongo/util/safe_num.cpp
        -   symbol_name: mongo::mutablebson::Element::getFieldName() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementSafeNum(mongo::StringData
                const&, mongo::SafeNum)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::getType() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementBool(mongo::StringData
                const&, bool)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::typeName(mongo::BSONType)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::mutablebson::Element::hasChildren() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
    -   file_name: src/mongo/db/ops/log_builder.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/log_builder_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::LogBuilder::addToSets(mongo::StringData const&, mongo::SafeNum
                const&)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Element::appendInt(mongo::StringData
                const&, int)
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::LogBuilder::getReplacementObject(mongo::mutablebson::Element*)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::LogBuilder::addToSets(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementInt(mongo::StringData
                const&, int)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::Element::pushBack(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LogBuilder::addToSetsWithNewFieldName(mongo::StringData
                const&, mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::mutablebson::Document::Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::LogBuilder::addToUnsets(mongo::StringData)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::LogBuilder::addToSetsWithNewFieldName(mongo::StringData
                const&, mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/db/ops/log_builder.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::checkDoc(mongo::mutablebson::Document
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::mutablebson::Element::getType() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::Status::operator!=(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::mutablebson::operator<<(std::ostream&, mongo::mutablebson::Document
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/mutable_bson_test_utils.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::mutablebson::Document::~Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/ops/field_checker.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::fieldchecker::isPositional(mongo::FieldRef const&,
                unsigned long*, unsigned long*)
            symbol_uses:
            - src/mongo/db/ops/modifier_unset.cpp
            - src/mongo/db/ops/modifier_pull_all.cpp
            - src/mongo/db/ops/modifier_bit.cpp
            - src/mongo/db/ops/modifier_compare.cpp
            - src/mongo/db/ops/modifier_rename.cpp
            - src/mongo/db/ops/modifier_current_date.cpp
            - src/mongo/db/ops/modifier_set.cpp
            - src/mongo/db/ops/modifier_inc.cpp
            - src/mongo/db/ops/modifier_add_to_set.cpp
            - src/mongo/db/ops/modifier_pull.cpp
            - src/mongo/db/ops/modifier_pop.cpp
            - src/mongo/db/ops/modifier_push.cpp
        -   symbol_name: mongo::fieldchecker::isUpdatable(mongo::FieldRef const&)
            symbol_uses:
            - src/mongo/db/ops/modifier_unset.cpp
            - src/mongo/db/ops/modifier_pull_all.cpp
            - src/mongo/db/ops/modifier_bit.cpp
            - src/mongo/db/ops/modifier_compare.cpp
            - src/mongo/db/ops/modifier_rename.cpp
            - src/mongo/db/ops/modifier_current_date.cpp
            - src/mongo/db/ops/modifier_set.cpp
            - src/mongo/db/ops/modifier_inc.cpp
            - src/mongo/db/ops/modifier_add_to_set.cpp
            - src/mongo/db/ops/modifier_pull.cpp
            - src/mongo/db/ops/modifier_pop.cpp
            - src/mongo/db/ops/modifier_push.cpp
        file_dependencies:
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::FieldRef::getPart(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/db/ops/field_checker.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/field_checker_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fieldchecker::isUpdatable(mongo::FieldRef const&)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldRef::parse(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fieldchecker::isPositional(mongo::FieldRef const&,
                unsigned long*, unsigned long*)
            symbol_sources:
            - src/mongo/db/ops/field_checker.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldRef::FieldRef(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::Status::operator!=(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
-   group_title: 'TODO: Name this group'
    group_description: 'Other things used by the update system. TODO: figure out what
        these are for.'
    group_files:
    - src/mongo/db/ops/update_lifecycle.h
    - src/mongo/db/ops/update_lifecycle_impl.cpp
    - src/mongo/db/ops/update_lifecycle_impl.h
    - src/mongo/db/ops/update_request.h
    - src/mongo/db/ops/update_result.h
    group_generated_data:
    -   file_name: src/mongo/db/ops/update_lifecycle.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/update_lifecycle_impl.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::UpdateLifecycleImpl::UpdateLifecycleImpl(bool, mongo::NamespaceString
                const&)
            symbol_uses:
            - src/mongo/db/repl/oplog.cpp
            - src/mongo/db/repl/rs_rollback.cpp
            - src/mongo/db/commands/find_and_modify.cpp
            - src/mongo/db/commands/write_commands/batch_executor.cpp
            - src/mongo/db/instance.cpp
            - src/mongo/db/dbhelpers.cpp
        -   symbol_name: vtable for mongo::UpdateLifecycleImpl
            symbol_uses:
            - src/mongo/db/repl/oplog.cpp
            - src/mongo/db/repl/rs_rollback.cpp
            - src/mongo/db/commands/find_and_modify.cpp
            - src/mongo/db/commands/write_commands/batch_executor.cpp
            - src/mongo/db/instance.cpp
            - src/mongo/db/dbhelpers.cpp
        file_dependencies:
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::CollectionInfoCache::computeIndexKeys()
            symbol_sources:
            - src/mongo/db/catalog/collection_info_cache.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::shardingState
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ShardingState::needCollectionMetadata(std::string
                const&) const
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ShardingState::getCollectionMetadata(std::string const&)
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::OID::init(mongo::Date_t, bool)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/ops/update_lifecycle_impl.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/update_request.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/update_result.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
-   group_title: 'TODO: Name this group'
    group_description: Utilites for managing dotted field names such as "a.b.c". For
        example, has things like# "isPrefixOf".## is there any relationship between
        this and bson/ or bson/mutable ?
    group_files:
    - src/mongo/db/field_ref.cpp
    - src/mongo/db/field_ref.h
    - src/mongo/db/field_ref_set.cpp
    - src/mongo/db/field_ref_set.h
    - src/mongo/db/field_ref_set_test.cpp
    - src/mongo/db/field_ref_test.cpp
    group_generated_data:
    -   file_name: src/mongo/db/field_ref.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_uses:
            - src/mongo/db/ops/modifier_bit.cpp
            - src/mongo/db/matcher/expression_geo.cpp
            - src/mongo/db/ops/modifier_unset.cpp
            - src/mongo/db/catalog/index_catalog.cpp
            - src/mongo/db/matcher/path.cpp
            - src/mongo/db/matcher/expression_parser_text.cpp
            - src/mongo/db/ops/modifier_compare.cpp
            - src/mongo/db/ops/modifier_rename.cpp
            - src/mongo/db/matcher/expression_text.cpp
            - src/mongo/db/ops/modifier_inc.cpp
            - src/mongo/db/matcher/expression_parser.cpp
            - src/mongo/db/ops/modifier_push.cpp
            - src/mongo/db/ops/modifier_current_date.cpp
            - src/mongo/db/matcher/expression_parser_geo.cpp
            - src/mongo/db/ops/modifier_set.cpp
            - src/mongo/db/ops/modifier_pull_all.cpp
            - src/mongo/db/ops/modifier_add_to_set.cpp
            - src/mongo/db/matcher/expression_leaf.cpp
            - src/mongo/s/collection_metadata.cpp
            - src/mongo/db/matcher/expression_array.cpp
            - src/mongo/db/ops/modifier_pop.cpp
            - src/mongo/db/ops/modifier_pull.cpp
        -   symbol_name: mongo::FieldRef::compare(mongo::FieldRef const&) const
            symbol_uses:
            - src/mongo/db/field_ref_set.cpp
            - src/mongo/db/ops/modifier_rename.cpp
        -   symbol_name: mongo::FieldRef::isPrefixOf(mongo::FieldRef const&) const
            symbol_uses:
            - src/mongo/db/ops/modifier_rename.cpp
        -   symbol_name: mongo::FieldRef::parse(mongo::StringData const&)
            symbol_uses:
            - src/mongo/db/ops/modifier_unset.cpp
            - src/mongo/db/ops/modifier_pull_all.cpp
            - src/mongo/db/ops/modifier_bit.cpp
            - src/mongo/db/ops/modifier_compare.cpp
            - src/mongo/db/ops/modifier_rename.cpp
            - src/mongo/s/collection_metadata.cpp
            - src/mongo/db/ops/modifier_current_date.cpp
            - src/mongo/db/ops/modifier_set.cpp
            - src/mongo/db/matcher/path.cpp
            - src/mongo/db/ops/modifier_inc.cpp
            - src/mongo/db/ops/modifier_add_to_set.cpp
            - src/mongo/db/ops/modifier_pull.cpp
            - src/mongo/db/ops/modifier_pop.cpp
            - src/mongo/db/ops/modifier_push.cpp
        -   symbol_name: mongo::FieldRef::commonPrefixSize(mongo::FieldRef const&)
                const
            symbol_uses:
            - src/mongo/db/field_ref_set.cpp
        -   symbol_name: mongo::FieldRef::FieldRef(mongo::StringData const&)
            symbol_uses:
            - src/mongo/db/field_ref_set.cpp
            - src/mongo/db/fts/fts_spec.cpp
            - src/mongo/db/ops/update.cpp
            - src/mongo/db/catalog/index_catalog.cpp
            - src/mongo/db/ops/modifier_push.cpp
        -   symbol_name: mongo::FieldRef::getPart(unsigned long) const
            symbol_uses:
            - src/mongo/db/matcher/path_internal.cpp
            - src/mongo/db/field_ref_set.cpp
            - src/mongo/db/ops/modifier_bit.cpp
            - src/mongo/db/ops/modifier_compare.cpp
            - src/mongo/db/ops/modifier_rename.cpp
            - src/mongo/db/ops/modifier_current_date.cpp
            - src/mongo/db/fts/fts_spec.cpp
            - src/mongo/db/ops/update.cpp
            - src/mongo/db/ops/modifier_set.cpp
            - src/mongo/db/catalog/index_catalog.cpp
            - src/mongo/db/matcher/path.cpp
            - src/mongo/db/ops/modifier_inc.cpp
            - src/mongo/db/ops/field_checker.cpp
            - src/mongo/db/ops/modifier_add_to_set.cpp
            - src/mongo/db/ops/path_support.cpp
            - src/mongo/db/ops/modifier_push.cpp
        -   symbol_name: mongo::FieldRef::setPart(unsigned long, mongo::StringData
                const&)
            symbol_uses:
            - src/mongo/db/ops/modifier_pull_all.cpp
            - src/mongo/db/ops/modifier_bit.cpp
            - src/mongo/db/ops/modifier_compare.cpp
            - src/mongo/db/ops/modifier_unset.cpp
            - src/mongo/db/ops/modifier_current_date.cpp
            - src/mongo/db/ops/modifier_set.cpp
            - src/mongo/db/ops/modifier_inc.cpp
            - src/mongo/db/ops/modifier_add_to_set.cpp
            - src/mongo/db/ops/modifier_pull.cpp
            - src/mongo/db/ops/modifier_pop.cpp
            - src/mongo/db/ops/modifier_push.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_uses:
            - src/mongo/db/ops/modifier_bit.cpp
            - src/mongo/db/ops/modifier_unset.cpp
            - src/mongo/db/matcher/path.cpp
            - src/mongo/db/exec/keep_mutations.cpp
            - src/mongo/db/ops/modifier_compare.cpp
            - src/mongo/db/exec/and_sorted.cpp
            - src/mongo/db/ops/modifier_rename.cpp
            - src/mongo/db/ops/update_driver.cpp
            - src/mongo/db/exec/index_scan.cpp
            - src/mongo/db/ops/modifier_inc.cpp
            - src/mongo/db/exec/or.cpp
            - src/mongo/db/ops/path_support.cpp
            - src/mongo/db/ops/modifier_push.cpp
            - src/mongo/db/exec/and_hash.cpp
            - src/mongo/db/ops/modifier_current_date.cpp
            - src/mongo/db/field_ref_set.cpp
            - src/mongo/db/ops/update.cpp
            - src/mongo/db/exec/collection_scan.cpp
            - src/mongo/db/ops/modifier_set.cpp
            - src/mongo/db/ops/modifier_pull_all.cpp
            - src/mongo/db/ops/modifier_add_to_set.cpp
            - src/mongo/db/exec/fetch.cpp
            - src/mongo/db/ops/field_checker.cpp
            - src/mongo/db/ops/modifier_pop.cpp
            - src/mongo/db/ops/modifier_pull.cpp
        -   symbol_name: mongo::FieldRef::equalsDottedField(mongo::StringData const&)
                const
            symbol_uses:
            - src/mongo/db/exec/and_hash.cpp
            - src/mongo/db/exec/fetch.cpp
            - src/mongo/db/exec/keep_mutations.cpp
            - src/mongo/db/exec/and_sorted.cpp
            - src/mongo/db/exec/index_scan.cpp
            - src/mongo/db/exec/text.cpp
            - src/mongo/db/exec/2dcommon.cpp
            - src/mongo/db/exec/collection_scan.cpp
            - src/mongo/db/exec/or.cpp
        file_dependencies:
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::StringData const&)
            symbol_sources:
            - src/mongo/base/string_data.cpp
    -   file_name: src/mongo/db/field_ref.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongorestore
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongosniff
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/field_ref_set.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::FieldRefSet::findConflicts(mongo::FieldRef const*,
                mongo::FieldRefSet*) const
            symbol_uses:
            - src/mongo/db/ops/update.cpp
        -   symbol_name: mongo::FieldRefSet::insert(mongo::FieldRef const*, mongo::FieldRef
                const**)
            symbol_uses:
            - src/mongo/db/ops/update_driver.cpp
        -   symbol_name: mongo::FieldRefSet::toString() const
            symbol_uses:
            - src/mongo/db/ops/update.cpp
        -   symbol_name: mongo::FieldRefSet::fillFrom(std::vector<mongo::FieldRef*,
                std::allocator<mongo::FieldRef*> > const&)
            symbol_uses:
            - src/mongo/db/ops/update.cpp
        -   symbol_name: mongo::FieldRefSet::FieldRefSet()
            symbol_uses:
            - src/mongo/db/ops/update.cpp
            - src/mongo/db/ops/update_driver.cpp
        -   symbol_name: mongo::FieldRefSet::keepShortest(mongo::FieldRef const*)
            symbol_uses:
            - src/mongo/db/ops/update.cpp
        file_dependencies:
        -   symbol_name: mongo::FieldRef::compare(mongo::FieldRef const&) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::FieldRef::commonPrefixSize(mongo::FieldRef const&)
                const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::FieldRef::FieldRef(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::FieldRef::getPart(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
    -   file_name: src/mongo/db/field_ref_set.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/field_ref_set_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldRef::compare(mongo::FieldRef const&) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::FieldRef const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldRefSet::insert(mongo::FieldRef const*, mongo::FieldRef
                const**)
            symbol_sources:
            - src/mongo/db/field_ref_set.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldRef::FieldRef(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldRefSet::FieldRefSet()
            symbol_sources:
            - src/mongo/db/field_ref_set.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
    -   file_name: src/mongo/db/field_ref_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldRef::commonPrefixSize(mongo::FieldRef const&)
                const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldRef::compare(mongo::FieldRef const&) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldRef::isPrefixOf(mongo::FieldRef const&) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldRef::parse(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldRef::FieldRef(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::StringData const&)
            symbol_sources:
            - src/mongo/base/string_data.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldRef::getPart(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldRef::setPart(unsigned long, mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::FieldRef::equalsDottedField(mongo::StringData const&)
                const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
