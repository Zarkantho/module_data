description: 'TODO: geo_queries description'
files_flat:
- src/mongo/db/geo/core.h
- src/mongo/db/geo/geoconstants.h
- src/mongo/db/geo/geoparser.cpp
- src/mongo/db/geo/geoparser.h
- src/mongo/db/geo/geoparser_test.cpp
- src/mongo/db/geo/geoquery.cpp
- src/mongo/db/geo/geoquery.h
- src/mongo/db/geo/hash.cpp
- src/mongo/db/geo/hash.h
- src/mongo/db/geo/hash_test.cpp
- src/mongo/db/geo/haystack.cpp
- src/mongo/db/geo/s2.h
- src/mongo/db/geo/s2common.cpp
- src/mongo/db/geo/s2common.h
- src/mongo/db/geo/shapes.cpp
- src/mongo/db/geo/shapes.h
files_with_exec:
-   execs:
    - !!python/unicode 'mongotop'
    - !!python/unicode 'mongod'
    - !!python/unicode 'perftest'
    - !!python/unicode 'mongoperf'
    - !!python/unicode 'mongosniff'
    - !!python/unicode 'mongodump'
    - !!python/unicode 'mongobridge'
    - !!python/unicode 'mongostat'
    - !!python/unicode 'bsondump'
    - !!python/unicode 'mongoimport'
    - !!python/unicode 'mongos'
    - !!python/unicode 'mongooplog'
    - !!python/unicode 'test'
    - !!python/unicode 'mongoexport'
    - !!python/unicode 'mongofiles'
    - !!python/unicode 'mongorestore'
    name: src/mongo/db/geo/core.h
-   execs:
    - !!python/unicode 'mongotop'
    - !!python/unicode 'mongod'
    - !!python/unicode 'perftest'
    - !!python/unicode 'mongoperf'
    - !!python/unicode 'mongosniff'
    - !!python/unicode 'mongodump'
    - !!python/unicode 'mongobridge'
    - !!python/unicode 'mongostat'
    - !!python/unicode 'bsondump'
    - !!python/unicode 'mongoimport'
    - !!python/unicode 'mongos'
    - !!python/unicode 'mongooplog'
    - !!python/unicode 'test'
    - !!python/unicode 'mongoexport'
    - !!python/unicode 'mongofiles'
    - !!python/unicode 'mongorestore'
    name: src/mongo/db/geo/geoconstants.h
-   execs:
    - !!python/unicode 'mongotop'
    - !!python/unicode 'mongod'
    - !!python/unicode 'perftest'
    - !!python/unicode 'mongoperf'
    - !!python/unicode 'mongosniff'
    - !!python/unicode 'mongodump'
    - !!python/unicode 'mongobridge'
    - !!python/unicode 'mongostat'
    - !!python/unicode 'bsondump'
    - !!python/unicode 'mongoimport'
    - !!python/unicode 'mongos'
    - !!python/unicode 'mongooplog'
    - !!python/unicode 'test'
    - !!python/unicode 'mongoexport'
    - !!python/unicode 'mongofiles'
    - !!python/unicode 'mongorestore'
    name: src/mongo/db/geo/geoparser.cpp
-   execs:
    - !!python/unicode 'mongotop'
    - !!python/unicode 'mongod'
    - !!python/unicode 'perftest'
    - !!python/unicode 'mongoperf'
    - !!python/unicode 'mongosniff'
    - !!python/unicode 'mongodump'
    - !!python/unicode 'mongobridge'
    - !!python/unicode 'mongostat'
    - !!python/unicode 'bsondump'
    - !!python/unicode 'mongoimport'
    - !!python/unicode 'mongos'
    - !!python/unicode 'mongooplog'
    - !!python/unicode 'test'
    - !!python/unicode 'mongoexport'
    - !!python/unicode 'mongofiles'
    - !!python/unicode 'mongorestore'
    name: src/mongo/db/geo/geoparser.h
-   execs: []
    name: src/mongo/db/geo/geoparser_test.cpp
-   execs:
    - !!python/unicode 'mongotop'
    - !!python/unicode 'mongod'
    - !!python/unicode 'perftest'
    - !!python/unicode 'mongoperf'
    - !!python/unicode 'mongosniff'
    - !!python/unicode 'mongodump'
    - !!python/unicode 'mongobridge'
    - !!python/unicode 'mongostat'
    - !!python/unicode 'bsondump'
    - !!python/unicode 'mongoimport'
    - !!python/unicode 'mongos'
    - !!python/unicode 'mongooplog'
    - !!python/unicode 'test'
    - !!python/unicode 'mongoexport'
    - !!python/unicode 'mongofiles'
    - !!python/unicode 'mongorestore'
    name: src/mongo/db/geo/geoquery.cpp
-   execs:
    - !!python/unicode 'mongotop'
    - !!python/unicode 'mongod'
    - !!python/unicode 'perftest'
    - !!python/unicode 'mongoperf'
    - !!python/unicode 'mongosniff'
    - !!python/unicode 'mongodump'
    - !!python/unicode 'mongobridge'
    - !!python/unicode 'mongostat'
    - !!python/unicode 'bsondump'
    - !!python/unicode 'mongoimport'
    - !!python/unicode 'mongos'
    - !!python/unicode 'mongooplog'
    - !!python/unicode 'test'
    - !!python/unicode 'mongoexport'
    - !!python/unicode 'mongofiles'
    - !!python/unicode 'mongorestore'
    name: src/mongo/db/geo/geoquery.h
-   execs:
    - !!python/unicode 'mongotop'
    - !!python/unicode 'mongod'
    - !!python/unicode 'perftest'
    - !!python/unicode 'mongoperf'
    - !!python/unicode 'mongosniff'
    - !!python/unicode 'mongodump'
    - !!python/unicode 'mongobridge'
    - !!python/unicode 'mongostat'
    - !!python/unicode 'bsondump'
    - !!python/unicode 'mongoimport'
    - !!python/unicode 'mongos'
    - !!python/unicode 'mongooplog'
    - !!python/unicode 'test'
    - !!python/unicode 'mongoexport'
    - !!python/unicode 'mongofiles'
    - !!python/unicode 'mongorestore'
    name: src/mongo/db/geo/hash.cpp
-   execs:
    - !!python/unicode 'mongotop'
    - !!python/unicode 'mongod'
    - !!python/unicode 'perftest'
    - !!python/unicode 'mongoperf'
    - !!python/unicode 'mongosniff'
    - !!python/unicode 'mongodump'
    - !!python/unicode 'mongobridge'
    - !!python/unicode 'mongostat'
    - !!python/unicode 'bsondump'
    - !!python/unicode 'mongoimport'
    - !!python/unicode 'mongos'
    - !!python/unicode 'mongooplog'
    - !!python/unicode 'test'
    - !!python/unicode 'mongoexport'
    - !!python/unicode 'mongofiles'
    - !!python/unicode 'mongorestore'
    name: src/mongo/db/geo/hash.h
-   execs: []
    name: src/mongo/db/geo/hash_test.cpp
-   execs:
    - !!python/unicode 'mongotop'
    - !!python/unicode 'mongod'
    - !!python/unicode 'perftest'
    - !!python/unicode 'mongoperf'
    - !!python/unicode 'mongosniff'
    - !!python/unicode 'mongodump'
    - !!python/unicode 'mongobridge'
    - !!python/unicode 'mongostat'
    - !!python/unicode 'bsondump'
    - !!python/unicode 'mongoimport'
    - !!python/unicode 'mongooplog'
    - !!python/unicode 'test'
    - !!python/unicode 'mongoexport'
    - !!python/unicode 'mongofiles'
    - !!python/unicode 'mongorestore'
    name: src/mongo/db/geo/haystack.cpp
-   execs:
    - !!python/unicode 'mongotop'
    - !!python/unicode 'mongod'
    - !!python/unicode 'perftest'
    - !!python/unicode 'mongoperf'
    - !!python/unicode 'mongosniff'
    - !!python/unicode 'mongodump'
    - !!python/unicode 'mongobridge'
    - !!python/unicode 'mongostat'
    - !!python/unicode 'bsondump'
    - !!python/unicode 'mongoimport'
    - !!python/unicode 'mongos'
    - !!python/unicode 'mongooplog'
    - !!python/unicode 'test'
    - !!python/unicode 'mongoexport'
    - !!python/unicode 'mongofiles'
    - !!python/unicode 'mongorestore'
    name: src/mongo/db/geo/s2.h
-   execs:
    - !!python/unicode 'mongotop'
    - !!python/unicode 'mongod'
    - !!python/unicode 'perftest'
    - !!python/unicode 'mongoperf'
    - !!python/unicode 'mongosniff'
    - !!python/unicode 'mongodump'
    - !!python/unicode 'mongobridge'
    - !!python/unicode 'mongostat'
    - !!python/unicode 'bsondump'
    - !!python/unicode 'mongoimport'
    - !!python/unicode 'mongooplog'
    - !!python/unicode 'test'
    - !!python/unicode 'mongoexport'
    - !!python/unicode 'mongofiles'
    - !!python/unicode 'mongorestore'
    name: src/mongo/db/geo/s2common.cpp
-   execs:
    - !!python/unicode 'mongotop'
    - !!python/unicode 'mongod'
    - !!python/unicode 'perftest'
    - !!python/unicode 'mongoperf'
    - !!python/unicode 'mongosniff'
    - !!python/unicode 'mongodump'
    - !!python/unicode 'mongobridge'
    - !!python/unicode 'mongostat'
    - !!python/unicode 'bsondump'
    - !!python/unicode 'mongoimport'
    - !!python/unicode 'mongos'
    - !!python/unicode 'mongooplog'
    - !!python/unicode 'test'
    - !!python/unicode 'mongoexport'
    - !!python/unicode 'mongofiles'
    - !!python/unicode 'mongorestore'
    name: src/mongo/db/geo/s2common.h
-   execs:
    - !!python/unicode 'mongotop'
    - !!python/unicode 'mongod'
    - !!python/unicode 'perftest'
    - !!python/unicode 'mongoperf'
    - !!python/unicode 'mongosniff'
    - !!python/unicode 'mongodump'
    - !!python/unicode 'mongobridge'
    - !!python/unicode 'mongostat'
    - !!python/unicode 'bsondump'
    - !!python/unicode 'mongoimport'
    - !!python/unicode 'mongos'
    - !!python/unicode 'mongooplog'
    - !!python/unicode 'test'
    - !!python/unicode 'mongoexport'
    - !!python/unicode 'mongofiles'
    - !!python/unicode 'mongorestore'
    name: src/mongo/db/geo/shapes.cpp
-   execs:
    - !!python/unicode 'mongotop'
    - !!python/unicode 'mongod'
    - !!python/unicode 'perftest'
    - !!python/unicode 'mongoperf'
    - !!python/unicode 'mongosniff'
    - !!python/unicode 'mongodump'
    - !!python/unicode 'mongobridge'
    - !!python/unicode 'mongostat'
    - !!python/unicode 'bsondump'
    - !!python/unicode 'mongoimport'
    - !!python/unicode 'mongos'
    - !!python/unicode 'mongooplog'
    - !!python/unicode 'test'
    - !!python/unicode 'mongoexport'
    - !!python/unicode 'mongofiles'
    - !!python/unicode 'mongorestore'
    name: src/mongo/db/geo/shapes.h
groups:
-   comments: '# GEO query code. TODO: describe the structure of this and how it interacts
        with the new index# system.'
    files:
    - src/mongo/db/geo/core.h
    - src/mongo/db/geo/geoconstants.h
    - src/mongo/db/geo/geoparser.cpp
    - src/mongo/db/geo/geoparser.h
    - src/mongo/db/geo/geoparser_test.cpp
    - src/mongo/db/geo/geoquery.cpp
    - src/mongo/db/geo/geoquery.h
    - src/mongo/db/geo/hash.cpp
    - src/mongo/db/geo/hash.h
    - src/mongo/db/geo/hash_test.cpp
    - src/mongo/db/geo/haystack.cpp
    - src/mongo/db/geo/s2.h
    - src/mongo/db/geo/s2common.cpp
    - src/mongo/db/geo/s2common.h
    - src/mongo/db/geo/shapes.cpp
    - src/mongo/db/geo/shapes.h
interface:
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    symbol: !!python/unicode 'mongo::GeoParser::isPoint(mongo::BSONObj const&)'
    used_by:
    - !!python/unicode 'src/mongo/db/commands/geonear.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    symbol: !!python/unicode 'mongo::GeometryContainer::parseFrom(mongo::BSONObj const&)'
    used_by:
    - !!python/unicode 'src/mongo/db/matcher/expression_geo.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    symbol: !!python/unicode 'mongo::GeoQuery::getRegion() const'
    used_by:
    - !!python/unicode 'src/mongo/db/query/index_bounds_builder.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    symbol: !!python/unicode 'mongo::GeoQuery::satisfiesPredicate(mongo::GeometryContainer
        const&) const'
    used_by:
    - !!python/unicode 'src/mongo/db/matcher/expression_geo.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    symbol: !!python/unicode 'mongo::NearQuery::parseFrom(mongo::BSONObj const&)'
    used_by:
    - !!python/unicode 'src/mongo/db/matcher/expression_parser_geo.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    symbol: !!python/unicode 'mongo::GeometryContainer::hasS2Region() const'
    used_by:
    - !!python/unicode 'src/mongo/db/query/planner_ixselect.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    symbol: !!python/unicode 'mongo::GeometryContainer::hasFlatRegion() const'
    used_by:
    - !!python/unicode 'src/mongo/db/query/planner_ixselect.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    symbol: !!python/unicode 'mongo::GeoQuery::parseFrom(mongo::BSONObj const&)'
    used_by:
    - !!python/unicode 'src/mongo/db/matcher/expression_parser_geo.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHash::up() const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHash::GeoHash(mongo::BSONElement const&, unsigned
        int)'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHash::move(int, int)'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHash::constrains() const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dnear.cpp'
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHash::canRefine() const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHashConverter::hash(mongo::Point const&) const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHash::GeoHash(mongo::GeoHash const&)'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dnear.cpp'
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHashConverter::hash(mongo::BSONObj const&)
        const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHashConverter::hash(mongo::BSONObj const&,
        mongo::BSONObj const*) const'
    used_by:
    - !!python/unicode 'src/mongo/db/index/2d_access_method.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHash::GeoHash()'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHash::atMinX() const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHash::operator+(std::string const&) const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHashConverter::sizeEdge(mongo::GeoHash const&)
        const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dnear.cpp'
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHashConverter::unhashToPoint(mongo::GeoHash
        const&) const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHash::atMinY() const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHash::operator=(mongo::GeoHash const&)'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHash::atMaxY() const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHash::GeoHash(unsigned int, unsigned int,
        unsigned int)'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHashConverter::hash(double, double) const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dnear.cpp'
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHash::operator!=(mongo::GeoHash const&) const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHashConverter::GeoHashConverter(mongo::GeoHashConverter::Parameters
        const&)'
    used_by:
    - !!python/unicode 'src/mongo/db/index/2d_access_method.cpp'
    - !!python/unicode 'src/mongo/db/query/planner_ixselect.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHash::appendToBuilder(mongo::BSONObjBuilder*,
        char const*) const'
    used_by:
    - !!python/unicode 'src/mongo/db/index/2d_access_method.cpp'
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHashConverter::unhashToPoint(mongo::BSONElement
        const&) const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHash::hasPrefix(mongo::GeoHash const&) const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    symbol: !!python/unicode 'mongo::GeoHash::atMaxX() const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    symbol: !!python/unicode 'mongo::S2SearchUtil::getKeysForObject(mongo::BSONObj
        const&, mongo::S2IndexingParams const&, std::vector<std::string, std::allocator<std::string>
        >*)'
    used_by:
    - !!python/unicode 'src/mongo/db/index/s2_access_method.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    symbol: !!python/unicode 'mongo::S2SearchUtil::distanceBetween(Vector3<double>
        const&, mongo::BSONObj const&, double*)'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/s2near.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::Box::Box(mongo::Point, mongo::Point)'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::Point::Point(mongo::BSONObj const&)'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dnear.cpp'
    - !!python/unicode 'src/mongo/db/index/haystack_access_method.cpp'
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::Box::inside(mongo::Point, double) const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::Polygon::contains(mongo::Point const&) const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::Box::onBoundary(mongo::Point, double)'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::Box::Box(double, double, double)'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dnear.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::Box::fudge(double)'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::Polygon::Polygon()'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::Box::intersects(mongo::Box const&) const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dnear.cpp'
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::Box::center() const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::Polygon::bounds()'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::Box::maxDim() const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::checkEarthBounds(mongo::Point const&)'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dnear.cpp'
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::distanceWithin(mongo::Point const&, mongo::Point
        const&, double)'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dnear.cpp'
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::distance(mongo::Point const&, mongo::Point const&)'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dnear.cpp'
    - !!python/unicode 'src/mongo/db/index/haystack_access_method.cpp'
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::Box::Box()'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dnear.cpp'
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::Polygon::contains(mongo::Point const&, double)
        const'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::Point::Point(mongo::BSONElement const&)'
    used_by:
    - !!python/unicode 'src/mongo/db/index/haystack_access_method.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::spheredist_deg(mongo::Point const&, mongo::Point
        const&)'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dnear.cpp'
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::Point::Point(double, double)'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2dcommon.cpp'
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::Box::truncate(double, double)'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    symbol: !!python/unicode 'mongo::Point::Point()'
    used_by:
    - !!python/unicode 'src/mongo/db/exec/s2near.cpp'
    - !!python/unicode 'src/mongo/db/exec/2dnear.cpp'
    - !!python/unicode 'src/mongo/db/query/planner_access.cpp'
    - !!python/unicode 'src/mongo/db/matcher/expression_parser_geo.cpp'
    - !!python/unicode 'src/mongo/db/query/stage_builder.cpp'
    - !!python/unicode 'src/mongo/db/matcher/expression_geo.cpp'
    - !!python/unicode 'src/mongo/db/exec/2d.cpp'
    - !!python/unicode 'src/mongo/db/query/query_planner.cpp'
leaks:
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2loop.cc'
    symbol: !!python/unicode 'S2Loop::IsValid() const'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2latlng.cc'
    symbol: !!python/unicode 'S2LatLng::ToPoint() const'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polygonbuilder.cc'
    symbol: !!python/unicode 'S2PolygonBuilder::S2PolygonBuilder(S2PolygonBuilderOptions
        const&)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2loop.cc'
    symbol: !!python/unicode 'S2Loop::~S2Loop()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::uasserted(int, char const*)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::msgasserted(int, std::string const&)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2cell.cc'
    symbol: !!python/unicode 'vtable for S2Cell'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/base/logging.cc'
    symbol: !!python/unicode 'google_base::DateLogger::DateLogger()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/concurrency/thread_name.cpp'
    symbol: !!python/unicode 'mongo::getThreadName()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2cell.cc'
    symbol: !!python/unicode 'S2Cell::Init(S2CellId const&)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polyline.cc'
    symbol: !!python/unicode 'S2Polyline::S2Polyline()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2cap.cc'
    symbol: !!python/unicode 'vtable for S2Cap'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::msgasserted(int, char const*)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2loop.cc'
    symbol: !!python/unicode 'S2Loop::Contains(S2Loop const*) const'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2loop.cc'
    symbol: !!python/unicode 'S2Loop::Normalize()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polygonbuilder.cc'
    symbol: !!python/unicode 'S2PolygonBuilder::~S2PolygonBuilder()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/base/logging.cc'
    symbol: !!python/unicode 'google_base::DateLogger::HumanDate()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/mongo/logger/logstream_builder.cpp'
    symbol: !!python/unicode 'mongo::logger::LogstreamBuilder::makeStream()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/mongo/db/jsobj.cpp'
    symbol: !!python/unicode 'mongo::BSONElement::Array() const'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::verifyFailed(char const*, char const*, unsigned
        int)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polyline.cc'
    symbol: !!python/unicode 'S2Polyline::IsValid(std::vector<Vector3<double>, std::allocator<Vector3<double>
        > > const&)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/mongo/logger/logger.cpp'
    symbol: !!python/unicode 'mongo::logger::globalLogManager()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::uasserted(int, std::string const&)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polygon.cc'
    symbol: !!python/unicode 'S2Polygon::S2Polygon()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2latlng.cc'
    symbol: !!python/unicode 'S2LatLng::Normalized() const'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polygonbuilder.cc'
    symbol: !!python/unicode 'S2PolygonBuilder::AddLoop(S2Loop const*)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polyline.cc'
    symbol: !!python/unicode 'S2Polyline::Init(std::vector<Vector3<double>, std::allocator<Vector3<double>
        > > const&)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2loop.cc'
    symbol: !!python/unicode 'S2Loop::S2Loop(std::vector<Vector3<double>, std::allocator<Vector3<double>
        > > const&)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2cap.cc'
    symbol: !!python/unicode 'S2Cap::FromAxisAngle(Vector3<double> const&, S1Angle
        const&)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2region.cc'
    symbol: !!python/unicode 'S2Region::~S2Region()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2loop.cc'
    symbol: !!python/unicode 'S2Loop::Invert()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/mongo/logger/logstream_builder.cpp'
    symbol: !!python/unicode 'mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
        std::string const&, mongo::logger::LogSeverity)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polygonbuilder.cc'
    symbol: !!python/unicode 'S2PolygonBuilderOptions::set_xor_edges(bool)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/hex.cpp'
    symbol: !!python/unicode 'std::string mongo::integerToHex<int>(int)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/mongo/logger/logstream_builder.cpp'
    symbol: !!python/unicode 'mongo::logger::LogstreamBuilder::~LogstreamBuilder()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polygonbuilder.cc'
    symbol: !!python/unicode 'S2PolygonBuilder::AssemblePolygon(S2Polygon*, std::vector<std::pair<Vector3<double>,
        Vector3<double> >, std::allocator<std::pair<Vector3<double>, Vector3<double>
        > > >*)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polygonbuilder.cc'
    symbol: !!python/unicode 'S2PolygonBuilderOptions::set_validate(bool)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polygon.cc'
    symbol: !!python/unicode 'S2Polygon::~S2Polygon()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2cellid.cc'
    symbol: !!python/unicode 'S2CellId::FromPoint(Vector3<double> const&)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'mongo::unittest::Test::Test()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::uasserted(int, char const*)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::msgasserted(int, std::string const&)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2cell.cc'
    symbol: !!python/unicode 'vtable for S2Cell'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/db/json.cpp'
    symbol: !!python/unicode 'mongo::fromjson(std::string const&)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polyline.cc'
    symbol: !!python/unicode 'S2Polyline::S2Polyline()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'mongo::unittest::Suite::getSuite(std::string const&)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::msgasserted(int, char const*)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/base/parse_number.cpp'
    symbol: !!python/unicode 'mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
        const&, int, long*)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'typeinfo for mongo::unittest::Test'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'mongo::unittest::TestAssertion::TestAssertion(char const*,
        unsigned int)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'mongo::unittest::Suite::add(std::string const&, boost::function<void
        ()> const&)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'mongo::unittest::TestAssertion::fail(std::string const&)
        const'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/bson/oid.cpp'
    symbol: !!python/unicode 'mongo::BSONObjBuilder::numStrs'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'mongo::unittest::Test::run()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::verifyFailed(char const*, char const*, unsigned
        int)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::uasserted(int, std::string const&)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polyline.cc'
    symbol: !!python/unicode 'S2Polyline::~S2Polyline()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polygon.cc'
    symbol: !!python/unicode 'S2Polygon::S2Polygon()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'mongo::unittest::Test::tearDown()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'mongo::unittest::Test::~Test()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2region.cc'
    symbol: !!python/unicode 'S2Region::~S2Region()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polygon.cc'
    symbol: !!python/unicode 'S2Polygon::Contains(Vector3<double> const&) const'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/hex.cpp'
    symbol: !!python/unicode 'std::string mongo::integerToHex<int>(int)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/bson/oid.cpp'
    symbol: !!python/unicode 'mongo::BSONObjBuilder::numStrsReady'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polygon.cc'
    symbol: !!python/unicode 'S2Polygon::~S2Polygon()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/db/json.cpp'
    symbol: !!python/unicode 'mongo::fromjson(char const*, int*)'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'mongo::unittest::Test::setUp()'
-   object: !!python/unicode 'src/mongo/db/geo/geoparser_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'mongo::unittest::TestAssertion::~TestAssertion()'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polyline.cc'
    symbol: !!python/unicode 'S2Polyline::MayIntersect(S2Cell const&) const'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2regionunion.cc'
    symbol: !!python/unicode 'S2RegionUnion::Add(S2Region*)'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::uasserted(int, char const*)'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::msgasserted(int, std::string const&)'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2cell.cc'
    symbol: !!python/unicode 'vtable for S2Cell'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/concurrency/thread_name.cpp'
    symbol: !!python/unicode 'mongo::getThreadName()'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polyline.cc'
    symbol: !!python/unicode 'S2Polyline::S2Polyline()'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2cap.cc'
    symbol: !!python/unicode 'vtable for S2Cap'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::msgasserted(int, char const*)'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2cell.cc'
    symbol: !!python/unicode 'S2Cell::MayIntersect(S2Cell const&) const'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polygon.cc'
    symbol: !!python/unicode 'S2Polygon::Intersects(S2Polygon const*) const'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/mongo/logger/logstream_builder.cpp'
    symbol: !!python/unicode 'mongo::logger::LogstreamBuilder::makeStream()'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::verifyFailed(char const*, char const*, unsigned
        int)'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/mongo/logger/logger.cpp'
    symbol: !!python/unicode 'mongo::logger::globalLogManager()'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::uasserted(int, std::string const&)'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polyline.cc'
    symbol: !!python/unicode 'S2Polyline::~S2Polyline()'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polygon.cc'
    symbol: !!python/unicode 'S2Polygon::S2Polygon()'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2region.cc'
    symbol: !!python/unicode 'S2Region::~S2Region()'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polygon.cc'
    symbol: !!python/unicode 'S2Polygon::Contains(S2Polygon const*) const'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/mongo/logger/logstream_builder.cpp'
    symbol: !!python/unicode 'mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
        std::string const&, mongo::logger::LogSeverity)'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polygon.cc'
    symbol: !!python/unicode 'S2Polygon::Contains(Vector3<double> const&) const'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polygon.cc'
    symbol: !!python/unicode 'S2Polygon::IntersectWithPolyline(S2Polyline const*,
        std::vector<S2Polyline*, std::allocator<S2Polyline*> >*) const'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polyline.cc'
    symbol: !!python/unicode 'S2Polyline::NearlyCoversPolyline(S2Polyline const&,
        S1Angle const&) const'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2regionunion.cc'
    symbol: !!python/unicode 'S2RegionUnion::S2RegionUnion()'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polygon.cc'
    symbol: !!python/unicode 'S2Polygon::MayIntersect(S2Cell const&) const'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/mongo/db/jsobj.cpp'
    symbol: !!python/unicode 'mongo::BSONElement::getGtLtOp(int) const'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/hex.cpp'
    symbol: !!python/unicode 'std::string mongo::integerToHex<int>(int)'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/mongo/logger/logstream_builder.cpp'
    symbol: !!python/unicode 'mongo::logger::LogstreamBuilder::~LogstreamBuilder()'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polygon.cc'
    symbol: !!python/unicode 'S2Polygon::~S2Polygon()'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polyline.cc'
    symbol: !!python/unicode 'S2Polyline::Intersects(S2Polyline const*) const'
-   object: !!python/unicode 'src/mongo/db/geo/geoquery.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2cap.cc'
    symbol: !!python/unicode 'S2Cap::MayIntersect(S2Cell const&) const'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    sources:
    - !!python/unicode 'src/mongo/base/parse_number.cpp'
    symbol: !!python/unicode 'mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
        const&, int, long*)'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    sources:
    - !!python/unicode 'src/mongo/bson/oid.cpp'
    symbol: !!python/unicode 'mongo::BSONObjBuilder::numStrsReady'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::uasserted(int, char const*)'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::msgasserted(int, std::string const&)'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    sources:
    - !!python/unicode 'src/mongo/bson/oid.cpp'
    symbol: !!python/unicode 'mongo::BSONObjBuilder::numStrs'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::verifyFailed(char const*, char const*, unsigned
        int)'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::uasserted(int, std::string const&)'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::msgasserted(int, char const*)'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::causedBy(std::string const&)'
-   object: !!python/unicode 'src/mongo/db/geo/hash.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/hex.cpp'
    symbol: !!python/unicode 'std::string mongo::integerToHex<int>(int)'
-   object: !!python/unicode 'src/mongo/db/geo/hash_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'mongo::unittest::Test::tearDown()'
-   object: !!python/unicode 'src/mongo/db/geo/hash_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'typeinfo for mongo::unittest::Test'
-   object: !!python/unicode 'src/mongo/db/geo/hash_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'typeinfo for mongo::UserException'
-   object: !!python/unicode 'src/mongo/db/geo/hash_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'mongo::unittest::Test::Test()'
-   object: !!python/unicode 'src/mongo/db/geo/hash_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/platform/random.cpp'
    symbol: !!python/unicode 'mongo::PseudoRandom::nextInt32()'
-   object: !!python/unicode 'src/mongo/db/geo/hash_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/platform/random.cpp'
    symbol: !!python/unicode 'mongo::PseudoRandom::PseudoRandom(int)'
-   object: !!python/unicode 'src/mongo/db/geo/hash_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'mongo::unittest::Test::~Test()'
-   object: !!python/unicode 'src/mongo/db/geo/hash_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'mongo::unittest::TestAssertion::TestAssertion(char const*,
        unsigned int)'
-   object: !!python/unicode 'src/mongo/db/geo/hash_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'mongo::unittest::TestAssertion::~TestAssertion()'
-   object: !!python/unicode 'src/mongo/db/geo/hash_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'mongo::unittest::Suite::add(std::string const&, boost::function<void
        ()> const&)'
-   object: !!python/unicode 'src/mongo/db/geo/hash_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'mongo::unittest::TestAssertion::fail(std::string const&)
        const'
-   object: !!python/unicode 'src/mongo/db/geo/hash_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'mongo::unittest::Test::run()'
-   object: !!python/unicode 'src/mongo/db/geo/hash_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'mongo::unittest::Suite::getSuite(std::string const&)'
-   object: !!python/unicode 'src/mongo/db/geo/hash_test.cpp'
    sources:
    - !!python/unicode 'src/mongo/unittest/unittest.cpp'
    symbol: !!python/unicode 'mongo::unittest::Test::setUp()'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp'
    symbol: !!python/unicode 'mongo::ActionType::find'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/db/catalog/index_catalog.cpp'
    symbol: !!python/unicode 'mongo::IndexCatalog::findIndexByType(std::string const&,
        std::vector<mongo::IndexDescriptor*, std::allocator<mongo::IndexDescriptor*>
        >&) const'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/db/commands.cpp'
    symbol: !!python/unicode 'vtable for mongo::Command'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/db/commands.cpp'
    symbol: !!python/unicode 'mongo::Command::parseResourcePattern(std::string const&,
        mongo::BSONObj const&) const'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/db/index/haystack_access_method.cpp'
    symbol: !!python/unicode 'mongo::HaystackAccessMethod::searchCommand(mongo::BSONObj
        const&, double, mongo::BSONObj const&, mongo::BSONObjBuilder*, unsigned int)'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/db/commands.cpp'
    symbol: !!python/unicode 'mongo::Command::checkAuthForCommand(mongo::ClientBasic*,
        std::string const&, mongo::BSONObj const&)'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/db/index_names.cpp'
    symbol: !!python/unicode 'mongo::IndexNames::GEO_HAYSTACK'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/db/catalog/database.cpp'
    symbol: !!python/unicode 'mongo::Database::getCollection(mongo::StringData const&)'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::uasserted(int, char const*)'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/db/auth/action_set.cpp'
    symbol: !!python/unicode 'mongo::ActionSet::addAction(mongo::ActionType const&)'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/db/auth/privilege.cpp'
    symbol: !!python/unicode 'mongo::Privilege::Privilege(mongo::ResourcePattern const&,
        mongo::ActionSet const&)'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/db/commands.cpp'
    symbol: !!python/unicode 'typeinfo for mongo::Command'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/db/commands.cpp'
    symbol: !!python/unicode 'mongo::Command::parseNs(std::string const&, mongo::BSONObj
        const&) const'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::msgasserted(int, std::string const&)'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::uasserted(int, std::string const&)'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::verifyFailed(char const*, char const*, unsigned
        int)'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/db/commands.cpp'
    symbol: !!python/unicode 'mongo::Command::redactForLogging(mongo::mutablebson::Document*)'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/third_party/boost/libs/system/src/error_code.cpp'
    symbol: !!python/unicode 'boost::system::system_category()'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/db/client.cpp'
    - !!python/unicode 'src/mongo/s/s_only.cpp'
    symbol: !!python/unicode 'mongo::currentClient'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/db/commands.cpp'
    symbol: !!python/unicode 'mongo::Command::help(std::basic_stringstream<char, std::char_traits<char>,
        std::allocator<char> >&) const'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/db/commands.cpp'
    symbol: !!python/unicode 'mongo::Command::Command(mongo::StringData, bool, mongo::StringData)'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/third_party/boost/libs/system/src/error_code.cpp'
    symbol: !!python/unicode 'boost::system::generic_category()'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::msgasserted(int, char const*)'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/db/commands.cpp'
    symbol: !!python/unicode 'mongo::Command::stopIndexBuilds(std::string const&,
        mongo::BSONObj const&)'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/hex.cpp'
    symbol: !!python/unicode 'std::string mongo::integerToHex<int>(int)'
-   object: !!python/unicode 'src/mongo/db/geo/haystack.cpp'
    sources:
    - !!python/unicode 'src/mongo/db/catalog/index_catalog.cpp'
    symbol: !!python/unicode 'mongo::IndexCatalog::getIndex(mongo::IndexDescriptor
        const*)'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2regioncoverer.cc'
    symbol: !!python/unicode 'S2RegionCoverer::S2RegionCoverer()'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::uasserted(int, char const*)'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2regioncoverer.cc'
    symbol: !!python/unicode 'S2RegionCoverer::set_max_cells(int)'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::msgasserted(int, std::string const&)'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2cell.cc'
    symbol: !!python/unicode 'vtable for S2Cell'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/base/logging.cc'
    symbol: !!python/unicode 'google_base::DateLogger::DateLogger()'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2.cc'
    symbol: !!python/unicode 'S2::kAvgEdge'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polyline.cc'
    symbol: !!python/unicode 'S2Polyline::S2Polyline()'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::msgasserted(int, char const*)'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2cellid.cc'
    symbol: !!python/unicode 'S2CellId::kNumFaces'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/base/logging.cc'
    symbol: !!python/unicode 'google_base::DateLogger::HumanDate()'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2regioncoverer.cc'
    symbol: !!python/unicode 'S2RegionCoverer::set_max_level(int)'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::verifyFailed(char const*, char const*, unsigned
        int)'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2.cc'
    symbol: !!python/unicode 'S2::kMaxCellLevel'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::uasserted(int, std::string const&)'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polyline.cc'
    symbol: !!python/unicode 'S2Polyline::~S2Polyline()'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polygon.cc'
    symbol: !!python/unicode 'S2Polygon::S2Polygon()'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2cellid.cc'
    symbol: !!python/unicode 'S2CellId::ToString() const'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2cellid.cc'
    symbol: !!python/unicode 'S2CellId::level() const'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2region.cc'
    symbol: !!python/unicode 'S2Region::~S2Region()'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2regioncoverer.cc'
    symbol: !!python/unicode 'S2RegionCoverer::set_min_level(int)'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/hex.cpp'
    symbol: !!python/unicode 'std::string mongo::integerToHex<int>(int)'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2regioncoverer.cc'
    symbol: !!python/unicode 'S2RegionCoverer::~S2RegionCoverer()'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s1angle.cc'
    symbol: !!python/unicode 'S1Angle::S1Angle(Vector3<double> const&, Vector3<double>
        const&)'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2cellid.cc'
    symbol: !!python/unicode 'S2CellId::kMaxLevel'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polygon.cc'
    symbol: !!python/unicode 'S2Polygon::~S2Polygon()'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polyline.cc'
    symbol: !!python/unicode 'S2Polyline::Project(Vector3<double> const&, int*) const'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2cellid.cc'
    symbol: !!python/unicode 'S2CellId::kPosBits'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2polygon.cc'
    symbol: !!python/unicode 'S2Polygon::Project(Vector3<double> const&) const'
-   object: !!python/unicode 'src/mongo/db/geo/s2common.cpp'
    sources:
    - !!python/unicode 'src/third_party/s2/s2regioncoverer.cc'
    symbol: !!python/unicode 'S2RegionCoverer::GetCovering(S2Region const&, std::vector<S2CellId,
        std::allocator<S2CellId> >*)'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    sources:
    - !!python/unicode 'src/mongo/base/parse_number.cpp'
    symbol: !!python/unicode 'mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
        const&, int, long*)'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    sources:
    - !!python/unicode 'src/mongo/bson/oid.cpp'
    symbol: !!python/unicode 'mongo::BSONObjBuilder::numStrsReady'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::uasserted(int, char const*)'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::msgasserted(int, std::string const&)'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    sources:
    - !!python/unicode 'src/mongo/bson/oid.cpp'
    symbol: !!python/unicode 'mongo::BSONObjBuilder::numStrs'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::verifyFailed(char const*, char const*, unsigned
        int)'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::uasserted(int, std::string const&)'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/assert_util.cpp'
    symbol: !!python/unicode 'mongo::msgasserted(int, char const*)'
-   object: !!python/unicode 'src/mongo/db/geo/shapes.cpp'
    sources:
    - !!python/unicode 'src/mongo/util/hex.cpp'
    symbol: !!python/unicode 'std::string mongo::integerToHex<int>(int)'
name: geo_queries
title: geo_queries
