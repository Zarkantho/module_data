[
    {
        "symbol": "mongo::audit::logCommandAuthzCheck(mongo::ClientBasic*, mongo::NamespaceString const&, mongo::mutablebson::Document const&, mongo::ErrorCodes::Error)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logDropAllRolesFromDatabase(mongo::ClientBasic*, mongo::StringData const&)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logKillCursorsAuthzCheck(mongo::ClientBasic*, mongo::NamespaceString const&, long long, mongo::ErrorCodes::Error)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/clientcursor.cpp", 
            "src/mongo/s/cursors.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logCreateUser(mongo::ClientBasic*, mongo::UserName const&, bool, mongo::BSONObj const*, std::vector<mongo::RoleName, std::allocator<mongo::RoleName> > const&)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logInsertAuthzCheck(mongo::ClientBasic*, mongo::NamespaceString const&, mongo::BSONObj const&, mongo::ErrorCodes::Error)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/instance.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logDropUser(mongo::ClientBasic*, mongo::UserName const&)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logRevokePrivilegesFromRole(mongo::ClientBasic*, mongo::RoleName const&, std::vector<mongo::Privilege, std::allocator<mongo::Privilege> > const&)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logKillOpAuthzCheck(mongo::ClientBasic*, mongo::BSONObj const&, mongo::ErrorCodes::Error)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/s/strategy.cpp", 
            "src/mongo/db/instance.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logDropAllUsersFromDatabase(mongo::ClientBasic*, mongo::StringData const&)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logRenameCollection(mongo::ClientBasic*, mongo::StringData const&, mongo::StringData const&)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/catalog/database.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logGrantRolesToRole(mongo::ClientBasic*, mongo::RoleName const&, std::vector<mongo::RoleName, std::allocator<mongo::RoleName> > const&)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logShutdown(mongo::ClientBasic*)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/s/server.cpp", 
            "src/mongo/db/instance.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logRevokeRolesFromUser(mongo::ClientBasic*, mongo::UserName const&, std::vector<mongo::RoleName, std::allocator<mongo::RoleName> > const&)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logCreateCollection(mongo::ClientBasic*, mongo::StringData const&)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/catalog/database.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logDropCollection(mongo::ClientBasic*, mongo::StringData const&)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/catalog/database.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logUpdateUser(mongo::ClientBasic*, mongo::UserName const&, bool, mongo::BSONObj const*, std::vector<mongo::RoleName, std::allocator<mongo::RoleName> > const*)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logDropRole(mongo::ClientBasic*, mongo::RoleName const&)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logDropDatabase(mongo::ClientBasic*, mongo::StringData const&)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/pdfile.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::appendImpersonatedUsers(mongo::BSONObjBuilder*)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/s/shard.cpp", 
            "src/mongo/s/dbclient_multi_command.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logDeleteAuthzCheck(mongo::ClientBasic*, mongo::NamespaceString const&, mongo::BSONObj const&, mongo::ErrorCodes::Error)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/instance.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logCreateRole(mongo::ClientBasic*, mongo::RoleName const&, std::vector<mongo::RoleName, std::allocator<mongo::RoleName> > const&, std::vector<mongo::Privilege, std::allocator<mongo::Privilege> > const&)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logCreateIndex(mongo::ClientBasic*, mongo::BSONObj const*, mongo::StringData const&, mongo::StringData const&)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/catalog/index_create.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logRevokeRolesFromRole(mongo::ClientBasic*, mongo::RoleName const&, std::vector<mongo::RoleName, std::allocator<mongo::RoleName> > const&)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::parseAndRemoveImpersonatedUserField(mongo::BSONObj, mongo::AuthorizationSession*, std::vector<mongo::UserName, std::allocator<mongo::UserName> >*, bool*)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/dbcommands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logGrantRolesToUser(mongo::ClientBasic*, mongo::UserName const&, std::vector<mongo::RoleName, std::allocator<mongo::RoleName> > const&)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logUpdateRole(mongo::ClientBasic*, mongo::RoleName const&, std::vector<mongo::RoleName, std::allocator<mongo::RoleName> > const*, std::vector<mongo::Privilege, std::allocator<mongo::Privilege> > const*)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logCreateDatabase(mongo::ClientBasic*, mongo::StringData const&)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/catalog/database.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logQueryAuthzCheck(mongo::ClientBasic*, mongo::NamespaceString const&, mongo::BSONObj const&, mongo::ErrorCodes::Error)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/s/strategy.cpp", 
            "src/mongo/db/instance.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logDropIndex(mongo::ClientBasic*, mongo::StringData const&, mongo::StringData const&)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/catalog/index_catalog.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logInProgAuthzCheck(mongo::ClientBasic*, mongo::BSONObj const&, mongo::ErrorCodes::Error)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/s/strategy.cpp", 
            "src/mongo/db/instance.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logEnableSharding(mongo::ClientBasic*, mongo::StringData const&)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/s/commands_admin.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logUpdateAuthzCheck(mongo::ClientBasic*, mongo::NamespaceString const&, mongo::BSONObj const&, mongo::BSONObj const&, bool, bool, mongo::ErrorCodes::Error)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/instance.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logShardCollection(mongo::ClientBasic*, mongo::StringData const&, mongo::BSONObj const&, bool)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/s/commands_admin.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logRemoveShard(mongo::ClientBasic*, mongo::StringData const&)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/s/commands_admin.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logAddShard(mongo::ClientBasic*, mongo::StringData const&, std::string const&, long long)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/s/commands_admin.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logReplSetReconfig(mongo::ClientBasic*, mongo::BSONObj const*, mongo::BSONObj const*)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/repl/rs.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logGrantPrivilegesToRole(mongo::ClientBasic*, mongo::RoleName const&, std::vector<mongo::Privilege, std::allocator<mongo::Privilege> > const&)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logGetMoreAuthzCheck(mongo::ClientBasic*, mongo::NamespaceString const&, long long, mongo::ErrorCodes::Error)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/s/strategy.cpp", 
            "src/mongo/db/instance.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logFsyncUnlockAuthzCheck(mongo::ClientBasic*, mongo::ErrorCodes::Error)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/instance.cpp"
        ]
    }, 
    {
        "symbol": "mongo::audit::logAuthentication(mongo::ClientBasic*, mongo::StringData const&, mongo::UserName const&, mongo::ErrorCodes::Error)", 
        "object": "src/mongo/db/audit.cpp", 
        "used_by": [
            "src/mongo/db/commands/authentication_commands.cpp"
        ]
    }
]