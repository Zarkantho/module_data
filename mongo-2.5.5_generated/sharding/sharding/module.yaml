module_title: Sharding
module_name: sharding
module_description: 'TODO: sharding description'
module_groups:
-   group_title: 'TODO: Name this group'
    group_description: Helper classes to delete a range of documents. This is used
        for example in chunk migrations# when we are cleaning up an old chunk.
    group_files:
    - src/mongo/db/range_deleter.cpp
    - src/mongo/db/range_deleter.h
    - src/mongo/db/range_deleter_db_env.cpp
    - src/mongo/db/range_deleter_db_env.h
    - src/mongo/db/range_deleter_mock_env.cpp
    - src/mongo/db/range_deleter_mock_env.h
    - src/mongo/db/range_deleter_service.cpp
    - src/mongo/db/range_deleter_service.h
    - src/mongo/db/range_deleter_stat_test.cpp
    - src/mongo/db/range_deleter_stats.cpp
    - src/mongo/db/range_deleter_stats.h
    - src/mongo/db/range_deleter_test.cpp
    - src/mongo/db/range_preserver.h
    group_generated_data:
    -   file_name: src/mongo/db/range_deleter.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::RangeDeleter::RangeDeleter(mongo::RangeDeleterEnv*)
            symbol_uses:
            - src/mongo/db/range_deleter_service.cpp
        -   symbol_name: mongo::RangeDeleter::deleteNow(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, bool, std::string*)
            symbol_uses:
            - src/mongo/s/d_migrate.cpp
            - src/mongo/db/commands/cleanup_orphaned_cmd.cpp
        -   symbol_name: mongo::RangeDeleter::getStats() const
            symbol_uses:
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::RangeDeleter::queueDelete(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, bool, mongo::Notification*,
                std::string*)
            symbol_uses:
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::RangeDeleter::startWorkers()
            symbol_uses:
            - src/mongo/db/db.cpp
        file_dependencies:
        -   symbol_name: typeinfo for boost::detail::thread_data_base
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::sleepmillis(long long)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::Notification::notifyOne()
            symbol_sources:
            - src/mongo/util/concurrency/synchronization.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: boost::thread::start_thread()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::detail::thread_data_base::~thread_data_base()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::compareRanges(mongo::BSONObj const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/s/range_arithmetic.cpp
        -   symbol_name: mongo::rangeOverlaps(mongo::BSONObj const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/s/range_arithmetic.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: boost::thread::join()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::inShutdown()
            symbol_sources:
            - src/mongo/client/scoped_db_conn_test.cpp
            - src/mongo/unittest/crutch.cpp
            - src/mongo/db/instance.cpp
            - src/mongo/client/clientAndShell.cpp
            - src/mongo/s/server.cpp
        -   symbol_name: boost::thread::~thread()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: boost::this_thread::interruption_point()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: vtable for boost::detail::thread_data_base
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: boost::detail::get_current_thread_data()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
    -   file_name: src/mongo/db/range_deleter.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/range_deleter_db_env.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: vtable for mongo::RangeDeleterDBEnv
            symbol_uses:
            - src/mongo/db/range_deleter_service.cpp
        file_dependencies:
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::curTimeMicros64()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::Helpers::RemoveSaver::RemoveSaver(std::string const&,
                std::string const&, std::string const&)
            symbol_sources:
            - src/mongo/db/dbhelpers.cpp
        -   symbol_name: mongo::Client::ReadContext::ReadContext(std::string const&,
                std::string const&)
            symbol_sources:
            - src/mongo/db/client.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::sleepsecs(int)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::replSet
            symbol_sources:
            - src/mongo/db/repl/rs.cpp
        -   symbol_name: mongo::Helpers::RemoveSaver::~RemoveSaver()
            symbol_sources:
            - src/mongo/db/dbhelpers.cpp
        -   symbol_name: mongo::Client::shutdown()
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Client::initThread(char const*, mongo::AbstractMessagingPort*)
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::causedBy(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Helpers::removeRange(mongo::KeyRange const&, bool,
                bool, mongo::Helpers::RemoveSaver*, bool, bool)
            symbol_sources:
            - src/mongo/db/dbhelpers.cpp
        -   symbol_name: mongo::Client::Context::~Context()
            symbol_sources:
            - src/mongo/db/client.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::StringData const&)
            symbol_sources:
            - src/mongo/base/string_data.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::opReplicatedEnough(mongo::OpTime, mongo::BSONElement)
            symbol_sources:
            - src/mongo/db/repl/write_concern.cpp
        -   symbol_name: mongo::storageGlobalParams
            symbol_sources:
            - src/mongo/db/storage_options.cpp
        -   symbol_name: mongo::Timer::_countsPerSecond
            symbol_sources:
            - src/mongo/util/timer.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::serverGlobalParams
            symbol_sources:
            - src/mongo/db/server_options.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::CollectionCursorCache::getCursorIds(std::set<long
                long, std::less<long long>, std::allocator<long long> >*)
            symbol_sources:
            - src/mongo/db/catalog/collection_cursor_cache.cpp
        -   symbol_name: mongo::ShardedConnectionInfo::get(bool)
            symbol_sources:
            - src/mongo/s/d_state.cpp
    -   file_name: src/mongo/db/range_deleter_db_env.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/range_deleter_mock_env.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies:
        -   symbol_name: boost::this_thread::interruption_point()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::compareRanges(mongo::BSONObj const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/s/range_arithmetic.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::detail::get_current_thread_data()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/range_deleter_mock_env.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/range_deleter_service.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::getDeleter()
            symbol_uses:
            - src/mongo/db/db.cpp
            - src/mongo/s/d_migrate.cpp
            - src/mongo/db/commands/cleanup_orphaned_cmd.cpp
        file_dependencies:
        -   symbol_name: mongo::RangeDeleter::RangeDeleter(mongo::RangeDeleterEnv*)
            symbol_sources:
            - src/mongo/db/range_deleter.cpp
        -   symbol_name: mongo::_makeStringVector(int, ...)
            symbol_sources:
            - src/mongo/base/make_string_vector.cpp
        -   symbol_name: mongo::GlobalInitializerRegisterer::GlobalInitializerRegisterer(std::string
                const&, boost::function<mongo::Status (mongo::InitializerContext*)>
                const&, std::vector<std::string, std::allocator<std::string> > const&,
                std::vector<std::string, std::allocator<std::string> > const&)
            symbol_sources:
            - src/mongo/base/global_initializer_registerer.cpp
        -   symbol_name: vtable for mongo::RangeDeleterDBEnv
            symbol_sources:
            - src/mongo/db/range_deleter_db_env.cpp
    -   file_name: src/mongo/db/range_deleter_service.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/range_deleter_stat_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: typeinfo for boost::detail::thread_data_base
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: boost::thread::start_thread()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::RangeDeleterMockEnv::resumeOneDelete()
            symbol_sources:
            - src/mongo/db/range_deleter_mock_env.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<int>
                const&, int*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::RangeDeleter::startWorkers()
            symbol_sources:
            - src/mongo/db/range_deleter.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::detail::thread_data_base::~thread_data_base()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::RangeDeleterStats::toBSON() const
            symbol_sources:
            - src/mongo/db/range_deleter_stats.cpp
        -   symbol_name: mongo::RangeDeleterMockEnv::waitForNthPausedDelete(unsigned
                long long)
            symbol_sources:
            - src/mongo/db/range_deleter_mock_env.cpp
        -   symbol_name: mongo::RangeDeleterMockEnv::removeCursorId(mongo::StringData
                const&, long long)
            symbol_sources:
            - src/mongo/db/range_deleter_mock_env.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::RangeDeleterMockEnv::RangeDeleterMockEnv()
            symbol_sources:
            - src/mongo/db/range_deleter_mock_env.cpp
        -   symbol_name: mongo::RangeDeleterStats::TotalDeletesField
            symbol_sources:
            - src/mongo/db/range_deleter_stats.cpp
        -   symbol_name: mongo::Notification::waitToBeNotified()
            symbol_sources:
            - src/mongo/util/concurrency/synchronization.cpp
        -   symbol_name: mongo::RangeDeleterMockEnv::waitForNthGetCursor(unsigned
                long long)
            symbol_sources:
            - src/mongo/db/range_deleter_mock_env.cpp
        -   symbol_name: mongo::RangeDeleter::stopWorkers()
            symbol_sources:
            - src/mongo/db/range_deleter.cpp
        -   symbol_name: mongo::RangeDeleterStats::InProgressDeletesField
            symbol_sources:
            - src/mongo/db/range_deleter_stats.cpp
        -   symbol_name: mongo::Notification::Notification()
            symbol_sources:
            - src/mongo/util/concurrency/synchronization.cpp
        -   symbol_name: mongo::RangeDeleter::RangeDeleter(mongo::RangeDeleterEnv*)
            symbol_sources:
            - src/mongo/db/range_deleter.cpp
        -   symbol_name: mongo::RangeDeleterStats::PendingDeletesField
            symbol_sources:
            - src/mongo/db/range_deleter_stats.cpp
        -   symbol_name: mongo::RangeDeleter::getStats() const
            symbol_sources:
            - src/mongo/db/range_deleter.cpp
        -   symbol_name: mongo::RangeDeleterMockEnv::pauseDeletes()
            symbol_sources:
            - src/mongo/db/range_deleter_mock_env.cpp
        -   symbol_name: boost::thread::join()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::RangeDeleterMockEnv::addCursorId(mongo::StringData
                const&, long long)
            symbol_sources:
            - src/mongo/db/range_deleter_mock_env.cpp
        -   symbol_name: boost::thread::~thread()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::RangeDeleter::deleteNow(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, bool, std::string*)
            symbol_sources:
            - src/mongo/db/range_deleter.cpp
        -   symbol_name: mongo::RangeDeleter::~RangeDeleter()
            symbol_sources:
            - src/mongo/db/range_deleter.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: vtable for boost::detail::thread_data_base
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::RangeDeleter::queueDelete(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, bool, mongo::Notification*,
                std::string*)
            symbol_sources:
            - src/mongo/db/range_deleter.cpp
    -   file_name: src/mongo/db/range_deleter_stats.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::RangeDeleterStats::getCurrentDeletes() const
            symbol_uses:
            - src/mongo/s/d_migrate.cpp
        file_dependencies:
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/range_deleter_stats.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/range_deleter_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: typeinfo for boost::detail::thread_data_base
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: boost::thread::start_thread()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::RangeDeleterMockEnv::deleteOccured() const
            symbol_sources:
            - src/mongo/db/range_deleter_mock_env.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::RangeDeleterMockEnv::resumeOneDelete()
            symbol_sources:
            - src/mongo/db/range_deleter_mock_env.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<int>
                const&, int*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::RangeDeleter::startWorkers()
            symbol_sources:
            - src/mongo/db/range_deleter.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::detail::thread_data_base::~thread_data_base()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::RangeDeleterStats::toBSON() const
            symbol_sources:
            - src/mongo/db/range_deleter_stats.cpp
        -   symbol_name: mongo::RangeDeleterMockEnv::waitForNthPausedDelete(unsigned
                long long)
            symbol_sources:
            - src/mongo/db/range_deleter_mock_env.cpp
        -   symbol_name: mongo::RangeDeleterMockEnv::removeCursorId(mongo::StringData
                const&, long long)
            symbol_sources:
            - src/mongo/db/range_deleter_mock_env.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::RangeDeleterMockEnv::RangeDeleterMockEnv()
            symbol_sources:
            - src/mongo/db/range_deleter_mock_env.cpp
        -   symbol_name: mongo::RangeDeleter::removeFromBlackList(mongo::StringData
                const&, mongo::BSONObj const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/range_deleter.cpp
        -   symbol_name: mongo::RangeDeleterStats::TotalDeletesField
            symbol_sources:
            - src/mongo/db/range_deleter_stats.cpp
        -   symbol_name: mongo::Notification::waitToBeNotified()
            symbol_sources:
            - src/mongo/util/concurrency/synchronization.cpp
        -   symbol_name: mongo::RangeDeleterMockEnv::waitForNthGetCursor(unsigned
                long long)
            symbol_sources:
            - src/mongo/db/range_deleter_mock_env.cpp
        -   symbol_name: mongo::RangeDeleter::stopWorkers()
            symbol_sources:
            - src/mongo/db/range_deleter.cpp
        -   symbol_name: mongo::RangeDeleterStats::InProgressDeletesField
            symbol_sources:
            - src/mongo/db/range_deleter_stats.cpp
        -   symbol_name: mongo::Notification::Notification()
            symbol_sources:
            - src/mongo/util/concurrency/synchronization.cpp
        -   symbol_name: mongo::RangeDeleter::RangeDeleter(mongo::RangeDeleterEnv*)
            symbol_sources:
            - src/mongo/db/range_deleter.cpp
        -   symbol_name: mongo::RangeDeleterStats::PendingDeletesField
            symbol_sources:
            - src/mongo/db/range_deleter_stats.cpp
        -   symbol_name: mongo::RangeDeleter::getStats() const
            symbol_sources:
            - src/mongo/db/range_deleter.cpp
        -   symbol_name: mongo::RangeDeleterMockEnv::pauseDeletes()
            symbol_sources:
            - src/mongo/db/range_deleter_mock_env.cpp
        -   symbol_name: boost::thread::join()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::RangeDeleterMockEnv::addCursorId(mongo::StringData
                const&, long long)
            symbol_sources:
            - src/mongo/db/range_deleter_mock_env.cpp
        -   symbol_name: boost::thread::~thread()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::RangeDeleter::deleteNow(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, bool, std::string*)
            symbol_sources:
            - src/mongo/db/range_deleter.cpp
        -   symbol_name: mongo::RangeDeleter::~RangeDeleter()
            symbol_sources:
            - src/mongo/db/range_deleter.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: vtable for boost::detail::thread_data_base
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::RangeDeleter::addToBlackList(mongo::StringData const&,
                mongo::BSONObj const&, mongo::BSONObj const&, std::string*)
            symbol_sources:
            - src/mongo/db/range_deleter.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::RangeDeleterMockEnv::getLastDelete() const
            symbol_sources:
            - src/mongo/db/range_deleter_mock_env.cpp
        -   symbol_name: mongo::RangeDeleter::queueDelete(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, bool, mongo::Notification*,
                std::string*)
            symbol_sources:
            - src/mongo/db/range_deleter.cpp
        -   symbol_name: boost::thread::timed_join(boost::posix_time::ptime const&)
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
    -   file_name: src/mongo/db/range_preserver.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
-   group_title: 'TODO: Name this group'
    group_description: Utilities for comparing ranges. Useful because our sharding
        is range based.## okay, but why in s/ ? only used by sharding? seems weird
        that something## general like range arith is only in s/ but the more specific
        delete-range## isn't.
    group_files:
    - src/mongo/s/range_arithmetic.cpp
    - src/mongo/s/range_arithmetic.h
    - src/mongo/s/range_arithmetic_test.cpp
    group_generated_data:
    -   file_name: src/mongo/s/range_arithmetic.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::rangeContains(mongo::BSONObj const&, mongo::BSONObj
                const&, mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/s/d_merge.cpp
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::rangeToString(mongo::BSONObj const&, mongo::BSONObj
                const&)
            symbol_uses:
            - src/mongo/s/d_merge.cpp
            - src/mongo/s/collection_metadata.cpp
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::getRangeMapOverlap(std::map<mongo::BSONObj, mongo::BSONObj,
                mongo::BSONObjCmp, std::allocator<std::pair<mongo::BSONObj const,
                mongo::BSONObj> > > const&, mongo::BSONObj const&, mongo::BSONObj
                const&, std::vector<std::pair<mongo::BSONObj, mongo::BSONObj>, std::allocator<std::pair<mongo::BSONObj,
                mongo::BSONObj> > >*)
            symbol_uses:
            - src/mongo/s/collection_metadata.cpp
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::compareRanges(mongo::BSONObj const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/range_deleter_mock_env.cpp
            - src/mongo/db/range_deleter.cpp
        -   symbol_name: mongo::rangeMapContains(std::map<mongo::BSONObj, mongo::BSONObj,
                mongo::BSONObjCmp, std::allocator<std::pair<mongo::BSONObj const,
                mongo::BSONObj> > > const&, mongo::BSONObj const&, mongo::BSONObj
                const&)
            symbol_uses:
            - src/mongo/s/collection_metadata.cpp
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::rangeMapOverlaps(std::map<mongo::BSONObj, mongo::BSONObj,
                mongo::BSONObjCmp, std::allocator<std::pair<mongo::BSONObj const,
                mongo::BSONObj> > > const&, mongo::BSONObj const&, mongo::BSONObj
                const&)
            symbol_uses:
            - src/mongo/s/collection_metadata.cpp
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::rangeOverlaps(mongo::BSONObj const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/range_deleter.cpp
        -   symbol_name: mongo::overlapToString(std::vector<std::pair<mongo::BSONObj,
                mongo::BSONObj>, std::allocator<std::pair<mongo::BSONObj, mongo::BSONObj>
                > >)
            symbol_uses:
            - src/mongo/s/collection_metadata.cpp
            - src/mongo/s/metadata_loader.cpp
        file_dependencies:
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/range_arithmetic.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/range_arithmetic_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::getRangeMapOverlap(std::map<mongo::BSONObj, mongo::BSONObj,
                mongo::BSONObjCmp, std::allocator<std::pair<mongo::BSONObj const,
                mongo::BSONObj> > > const&, mongo::BSONObj const&, mongo::BSONObj
                const&, std::vector<std::pair<mongo::BSONObj, mongo::BSONObj>, std::allocator<std::pair<mongo::BSONObj,
                mongo::BSONObj> > >*)
            symbol_sources:
            - src/mongo/s/range_arithmetic.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::rangeMapContains(std::map<mongo::BSONObj, mongo::BSONObj,
                mongo::BSONObjCmp, std::allocator<std::pair<mongo::BSONObj const,
                mongo::BSONObj> > > const&, mongo::BSONObj const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/s/range_arithmetic.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::rangeMapOverlaps(std::map<mongo::BSONObj, mongo::BSONObj,
                mongo::BSONObjCmp, std::allocator<std::pair<mongo::BSONObj const,
                mongo::BSONObj> > > const&, mongo::BSONObj const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/s/range_arithmetic.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::rangeOverlaps(mongo::BSONObj const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/s/range_arithmetic.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
-   group_title: 'TODO: Name this group'
    group_description: Contains metadata about a collection, particularly for sharding.
        The MetadataLoader populates new# CollectionMetadata objects from config server
        data.
    group_files:
    - src/mongo/s/collection_metadata.cpp
    - src/mongo/s/collection_metadata.h
    - src/mongo/s/collection_metadata_test.cpp
    - src/mongo/s/metadata_loader.cpp
    - src/mongo/s/metadata_loader.h
    - src/mongo/s/metadata_loader_test.cpp
    group_generated_data:
    -   file_name: src/mongo/s/collection_metadata.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::CollectionMetadata::~CollectionMetadata()
            symbol_uses:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::CollectionMetadata::getNextChunk(mongo::BSONObj const&,
                mongo::ChunkType*) const
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
            - src/mongo/s/d_merge.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::CollectionMetadata::getMinKey() const
            symbol_uses:
            - src/mongo/s/d_migrate.cpp
            - src/mongo/db/commands/cleanup_orphaned_cmd.cpp
        -   symbol_name: mongo::CollectionMetadata::cloneSplit(mongo::ChunkType const&,
                std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj> > const&,
                mongo::ChunkVersion const&, std::string*) const
            symbol_uses:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::CollectionMetadata::cloneMinusPending(mongo::ChunkType
                const&, std::string*) const
            symbol_uses:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::CollectionMetadata::CollectionMetadata()
            symbol_uses:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::CollectionMetadata::fillKeyPatternFields()
            symbol_uses:
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::CollectionMetadata::getNextOrphanRange(mongo::BSONObj
                const&, mongo::KeyRange*) const
            symbol_uses:
            - src/mongo/db/commands/cleanup_orphaned_cmd.cpp
        -   symbol_name: mongo::CollectionMetadata::toBSON() const
            symbol_uses:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::CollectionMetadata::keyBelongsToMe(mongo::BSONObj
                const&) const
            symbol_uses:
            - src/mongo/db/dbhelpers.cpp
            - src/mongo/db/query/idhack_runner.cpp
            - src/mongo/db/commands/mr.cpp
            - src/mongo/db/exec/shard_filter.cpp
        -   symbol_name: mongo::CollectionMetadata::keyIsPending(mongo::BSONObj const&)
                const
            symbol_uses:
            - src/mongo/db/dbhelpers.cpp
        -   symbol_name: mongo::CollectionMetadata::cloneMigrate(mongo::ChunkType
                const&, mongo::ChunkVersion const&, std::string*) const
            symbol_uses:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::CollectionMetadata::isValidKey(mongo::BSONObj const&)
                const
            symbol_uses:
            - src/mongo/s/d_merge.cpp
            - src/mongo/db/commands/cleanup_orphaned_cmd.cpp
        -   symbol_name: mongo::CollectionMetadata::fillRanges()
            symbol_uses:
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::CollectionMetadata::cloneMerge(mongo::BSONObj const&,
                mongo::BSONObj const&, mongo::ChunkVersion const&, std::string*) const
            symbol_uses:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::CollectionMetadata::clonePlusPending(mongo::ChunkType
                const&, std::string*) const
            symbol_uses:
            - src/mongo/s/d_state.cpp
        file_dependencies:
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::getRangeMapOverlap(std::map<mongo::BSONObj, mongo::BSONObj,
                mongo::BSONObjCmp, std::allocator<std::pair<mongo::BSONObj const,
                mongo::BSONObj> > > const&, mongo::BSONObj const&, mongo::BSONObj
                const&, std::vector<std::pair<mongo::BSONObj, mongo::BSONObj>, std::allocator<std::pair<mongo::BSONObj,
                mongo::BSONObj> > >*)
            symbol_sources:
            - src/mongo/s/range_arithmetic.cpp
        -   symbol_name: mongo::rangeMapContains(std::map<mongo::BSONObj, mongo::BSONObj,
                mongo::BSONObjCmp, std::allocator<std::pair<mongo::BSONObj const,
                mongo::BSONObj> > > const&, mongo::BSONObj const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/s/range_arithmetic.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::rangeContains(mongo::BSONObj const&, mongo::BSONObj
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/s/range_arithmetic.cpp
        -   symbol_name: mongo::rangeMapOverlaps(std::map<mongo::BSONObj, mongo::BSONObj,
                mongo::BSONObjCmp, std::allocator<std::pair<mongo::BSONObj const,
                mongo::BSONObj> > > const&, mongo::BSONObj const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/s/range_arithmetic.cpp
        -   symbol_name: mongo::FieldRef::parse(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::overlapToString(std::vector<std::pair<mongo::BSONObj,
                mongo::BSONObj>, std::allocator<std::pair<mongo::BSONObj, mongo::BSONObj>
                > >)
            symbol_sources:
            - src/mongo/s/range_arithmetic.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::rangeToString(mongo::BSONObj const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/s/range_arithmetic.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/collection_metadata.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/collection_metadata_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MockRemoteDBServer::insert(std::string const&, mongo::BSONObj,
                int)
            symbol_sources:
            - src/mongo/dbtests/mock/mock_remote_db_server.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::CollectionMetadata::CollectionMetadata()
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::ChunkType::max
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::ChunkType::toBSON() const
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::CollectionMetadata::keyBelongsToMe(mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::ChunkType::min
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CollectionType::toBSON() const
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::ChunkType::name
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CollectionMetadata::clonePlusChunk(mongo::ChunkType
                const&, mongo::ChunkVersion const&, std::string*) const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::CollectionMetadata::keyIsPending(mongo::BSONObj const&)
                const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::CollectionType::epoch
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::CollectionType::keyPattern
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::CollectionMetadata::~CollectionMetadata()
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::MockConnRegistry::getConnStrHook()
            symbol_sources:
            - src/mongo/dbtests/mock/mock_conn_registry.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::CollectionType::updatedAt
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::CollectionMetadata::cloneMigrate(mongo::ChunkType
                const&, mongo::ChunkVersion const&, std::string*) const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::CollectionType::unique
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ConnectionString::_connectHook
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::CollectionMetadata::isValidKey(mongo::BSONObj const&)
                const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CollectionMetadata::getNextChunk(mongo::BSONObj const&,
                mongo::ChunkType*) const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::MetadataLoader::~MetadataLoader()
            symbol_sources:
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::MockConnRegistry::get()
            symbol_sources:
            - src/mongo/dbtests/mock/mock_conn_registry.cpp
        -   symbol_name: mongo::CollectionType::~CollectionType()
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::CollectionType::ns
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::ConnectionString::_connectHookMutex
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::ChunkType::~ChunkType()
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::CollectionMetadata::getMinKey() const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::MockConnRegistry::addServer(mongo::MockRemoteDBServer*)
            symbol_sources:
            - src/mongo/dbtests/mock/mock_conn_registry.cpp
        -   symbol_name: mongo::MetadataLoader::MetadataLoader(mongo::ConnectionString
                const&)
            symbol_sources:
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::CollectionMetadata::cloneMerge(mongo::BSONObj const&,
                mongo::BSONObj const&, mongo::ChunkVersion const&, std::string*) const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::ChunkType::ns
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::ChunkType::ChunkType()
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::MockConnRegistry::clear()
            symbol_sources:
            - src/mongo/dbtests/mock/mock_conn_registry.cpp
        -   symbol_name: mongo::CollectionType::dropped
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::MetadataLoader::makeCollectionMetadata(std::string
                const&, std::string const&, mongo::CollectionMetadata const*, mongo::CollectionMetadata*)
                const
            symbol_sources:
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::ChunkType::shard
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ChunkType::DEPRECATED_lastmod
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::ConnectionString::_finishInit()
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::MockRemoteDBServer::MockRemoteDBServer(std::string
                const&)
            symbol_sources:
            - src/mongo/dbtests/mock/mock_remote_db_server.cpp
        -   symbol_name: mongo::CollectionType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::ChunkType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::CollectionType::isValid(std::string*) const
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::ChunkType::DEPRECATED_epoch
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::CollectionMetadata::cloneSplit(mongo::ChunkType const&,
                std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj> > const&,
                mongo::ChunkVersion const&, std::string*) const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::ChunkType::isValid(std::string*) const
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::CollectionMetadata::getMaxKey() const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::OID::init()
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::CollectionMetadata::clonePlusPending(mongo::ChunkType
                const&, std::string*) const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::CollectionMetadata::getNextOrphanRange(mongo::BSONObj
                const&, mongo::KeyRange*) const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::CollectionMetadata::cloneMinusPending(mongo::ChunkType
                const&, std::string*) const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::CollectionType::CollectionType()
            symbol_sources:
            - src/mongo/s/type_collection.cpp
    -   file_name: src/mongo/s/metadata_loader.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::MetadataLoader::~MetadataLoader()
            symbol_uses:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::MetadataLoader::MetadataLoader(mongo::ConnectionString
                const&)
            symbol_uses:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::MetadataLoader::makeCollectionMetadata(std::string
                const&, std::string const&, mongo::CollectionMetadata const*, mongo::CollectionMetadata*)
                const
            symbol_uses:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::MetadataLoader::promotePendingChunks(mongo::CollectionMetadata
                const*, mongo::CollectionMetadata*) const
            symbol_uses:
            - src/mongo/s/d_state.cpp
        file_dependencies:
        -   symbol_name: mongo::DBConnectionPool::get(std::string const&, double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChunkType::max
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::CollectionType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::ChunkType::min
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::Query::toString() const
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::causedBy(std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::rangeToString(mongo::BSONObj const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/s/range_arithmetic.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CollectionMetadata::fillKeyPatternFields()
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::CollectionType::keyPattern
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::getRangeMapOverlap(std::map<mongo::BSONObj, mongo::BSONObj,
                mongo::BSONObjCmp, std::allocator<std::pair<mongo::BSONObj const,
                mongo::BSONObj> > > const&, mongo::BSONObj const&, mongo::BSONObj
                const&, std::vector<std::pair<mongo::BSONObj, mongo::BSONObj>, std::allocator<std::pair<mongo::BSONObj,
                mongo::BSONObj> > >*)
            symbol_sources:
            - src/mongo/s/range_arithmetic.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CollectionType::~CollectionType()
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::CollectionType::ns
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::rangeMapContains(std::map<mongo::BSONObj, mongo::BSONObj,
                mongo::BSONObjCmp, std::allocator<std::pair<mongo::BSONObj const,
                mongo::BSONObj> > > const&, mongo::BSONObj const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/s/range_arithmetic.cpp
        -   symbol_name: mongo::rangeMapOverlaps(std::map<mongo::BSONObj, mongo::BSONObj,
                mongo::BSONObjCmp, std::allocator<std::pair<mongo::BSONObj const,
                mongo::BSONObj> > > const&, mongo::BSONObj const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/s/range_arithmetic.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::CollectionMetadata::fillRanges()
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::causedBy(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::overlapToString(std::vector<std::pair<mongo::BSONObj,
                mongo::BSONObj>, std::allocator<std::pair<mongo::BSONObj, mongo::BSONObj>
                > >)
            symbol_sources:
            - src/mongo/s/range_arithmetic.cpp
        -   symbol_name: mongo::CollectionType::dropped
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::ChunkType::ns
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ChunkType::shard
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ChunkType::DEPRECATED_lastmod
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::CollectionType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::ChunkType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::CollectionType::isValid(std::string*) const
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::CollectionType::primary
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::Query::sort(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::ScopedDbConnection::~ScopedDbConnection()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::CollectionType::CollectionType()
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/s/metadata_loader.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/metadata_loader_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MockRemoteDBServer::insert(std::string const&, mongo::BSONObj,
                int)
            symbol_sources:
            - src/mongo/dbtests/mock/mock_remote_db_server.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::ErrorCodes::Error)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::CollectionMetadata::CollectionMetadata()
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::ChunkType::max
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::ChunkType::toBSON() const
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::ChunkType::min
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CollectionType::toBSON() const
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::ChunkType::name
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CollectionMetadata::keyIsPending(mongo::BSONObj const&)
                const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::CollectionType::epoch
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::CollectionType::keyPattern
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::CollectionMetadata::~CollectionMetadata()
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::MockConnRegistry::getConnStrHook()
            symbol_sources:
            - src/mongo/dbtests/mock/mock_conn_registry.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::CollectionType::updatedAt
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::CollectionType::unique
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ConnectionString::_connectHook
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MockRemoteDBServer::remove(std::string const&, mongo::Query,
                int)
            symbol_sources:
            - src/mongo/dbtests/mock/mock_remote_db_server.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CollectionMetadata::getNextChunk(mongo::BSONObj const&,
                mongo::ChunkType*) const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MetadataLoader::~MetadataLoader()
            symbol_sources:
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::MockConnRegistry::get()
            symbol_sources:
            - src/mongo/dbtests/mock/mock_conn_registry.cpp
        -   symbol_name: mongo::CollectionType::~CollectionType()
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::CollectionType::ns
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::ConnectionString::_connectHookMutex
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::ChunkType::~ChunkType()
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::CollectionMetadata::getMinKey() const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::MockConnRegistry::addServer(mongo::MockRemoteDBServer*)
            symbol_sources:
            - src/mongo/dbtests/mock/mock_conn_registry.cpp
        -   symbol_name: mongo::MetadataLoader::MetadataLoader(mongo::ConnectionString
                const&)
            symbol_sources:
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::ChunkType::ns
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::ChunkType::ChunkType()
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::MockRemoteDBServer::~MockRemoteDBServer()
            symbol_sources:
            - src/mongo/dbtests/mock/mock_remote_db_server.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::MockConnRegistry::clear()
            symbol_sources:
            - src/mongo/dbtests/mock/mock_conn_registry.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::MetadataLoader::makeCollectionMetadata(std::string
                const&, std::string const&, mongo::CollectionMetadata const*, mongo::CollectionMetadata*)
                const
            symbol_sources:
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::ChunkType::shard
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ChunkType::DEPRECATED_lastmod
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::ConnectionString::_finishInit()
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::MockRemoteDBServer::MockRemoteDBServer(std::string
                const&)
            symbol_sources:
            - src/mongo/dbtests/mock/mock_remote_db_server.cpp
        -   symbol_name: mongo::CollectionType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::ChunkType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::MetadataLoader::promotePendingChunks(mongo::CollectionMetadata
                const*, mongo::CollectionMetadata*) const
            symbol_sources:
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::CollectionType::isValid(std::string*) const
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::ChunkType::DEPRECATED_epoch
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ChunkType::cloneTo(mongo::ChunkType*) const
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::ChunkType::isValid(std::string*) const
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::OID::init()
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ScopedDbConnection::clearPool()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::CollectionMetadata::clonePlusPending(mongo::ChunkType
                const&, std::string*) const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::CollectionType::CollectionType()
            symbol_sources:
            - src/mongo/s/type_collection.cpp
-   group_title: 'TODO: Name this group'
    group_description: Code to upgrade config server metadata
    group_files:
    - src/mongo/s/config_upgrade.cpp
    - src/mongo/s/config_upgrade.h
    - src/mongo/s/config_upgrade_helpers.cpp
    - src/mongo/s/config_upgrade_helpers.h
    - src/mongo/s/config_upgrade_v0_to_v5.cpp
    - src/mongo/s/config_upgrade_v4_to_v5.cpp
    group_generated_data:
    -   file_name: src/mongo/s/config_upgrade.cpp
        file_executables:
        - test
        - mongos
        file_interface:
        -   symbol_name: mongo::checkAndUpgradeConfigVersion(mongo::ConnectionString
                const&, bool, mongo::VersionType*, mongo::VersionType*, std::string*)
            symbol_uses:
            - src/mongo/dbtests/config_upgrade_tests.cpp
            - src/mongo/s/server.cpp
        -   symbol_name: mongo::getConfigVersion(mongo::ConnectionString const&, mongo::VersionType*)
            symbol_uses:
            - src/mongo/dbtests/config_upgrade_tests.cpp
        file_dependencies:
        -   symbol_name: mongo::SettingsType::balancerStopped
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::causedBy(mongo::Status const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::SettingsType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: mongo::SyncClusterConnection::prepare(std::string&)
            symbol_sources:
            - src/mongo/client/syncclusterconnection.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::DatabaseType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_database.cpp
        -   symbol_name: mongo::_safeCursor(std::auto_ptr<mongo::DBClientCursor>)
            symbol_sources:
            - src/mongo/s/cluster_client_internal.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::doUpgradeV0ToV5(mongo::ConnectionString const&, mongo::VersionType
                const&, std::string*)
            symbol_sources:
            - src/mongo/s/config_upgrade_v0_to_v5.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::causedBy(std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBException::convertExceptionCode(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::ShardType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::VersionType::clear()
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::MongoVersionRange::parseBSONArray(mongo::BSONArray
                const&, std::vector<mongo::MongoVersionRange, std::allocator<mongo::MongoVersionRange>
                >*, std::string*)
            symbol_sources:
            - src/mongo/s/mongo_version_range.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBConnectionPool::get(mongo::ConnectionString const&,
                double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::fassertFailed(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ScopedDistributedLock::~ScopedDistributedLock()
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::logConfigChange(mongo::ConnectionString const&, std::string
                const&, std::string const&, std::string const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/s/cluster_client_internal.cpp
        -   symbol_name: mongo::ScopedDistributedLock::acquire(long long, std::string*)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::doUpgradeV4ToV5(mongo::ConnectionString const&, mongo::VersionType
                const&, std::string*)
            symbol_sources:
            - src/mongo/s/config_upgrade_v4_to_v5.cpp
        -   symbol_name: mongo::ScopedDistributedLock::ScopedDistributedLock(mongo::ConnectionString
                const&, std::string const&)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::isInMongoVersionRanges(mongo::StringData const&, std::vector<mongo::MongoVersionRange,
                std::allocator<mongo::MongoVersionRange> > const&)
            symbol_sources:
            - src/mongo/s/mongo_version_range.cpp
        -   symbol_name: mongo::versionString
            symbol_sources:
            - src/mongo/util/version.cpp
        -   symbol_name: mongo::VersionType::excludingMongoVersions
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: typeinfo for mongo::DBClientBase
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::VersionType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::SettingsType::key
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: mongo::VersionType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::VersionType::isValid(std::string*) const
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::causedBy(std::string const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::VersionType::cloneTo(mongo::VersionType*) const
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::CollectionType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBClientWithCommands::getLastErrorString(mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: typeinfo for mongo::SyncClusterConnection
            symbol_sources:
            - src/mongo/client/syncclusterconnection.cpp
        -   symbol_name: mongo::ScopedDbConnection::~ScopedDbConnection()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/s/config_upgrade.h
        file_executables:
        - test
        - mongos
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/config_upgrade_helpers.cpp
        file_executables:
        - test
        - mongos
        file_interface:
        -   symbol_name: mongo::preUpgradeCheck(mongo::ConnectionString const&, mongo::VersionType
                const&, std::string)
            symbol_uses:
            - src/mongo/s/config_upgrade_v4_to_v5.cpp
        -   symbol_name: mongo::commitConfigUpgrade(std::string const&, int, int,
                int)
            symbol_uses:
            - src/mongo/s/config_upgrade_v4_to_v5.cpp
        file_dependencies:
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::_safeCursor(std::auto_ptr<mongo::DBClientCursor>)
            symbol_sources:
            - src/mongo/s/cluster_client_internal.cpp
        -   symbol_name: mongo::VersionType::version_DEPRECATED
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::causedBy(std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBException::convertExceptionCode(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::VersionType::upgradeId
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::WriteConcernOptions::AllConfigs
            symbol_sources:
            - src/mongo/db/write_concern_options.cpp
        -   symbol_name: mongo::VersionType::minCompatibleVersion
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBConnectionPool::get(mongo::ConnectionString const&,
                double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::checkClusterMongoVersions(mongo::ConnectionString
                const&, std::string const&)
            symbol_sources:
            - src/mongo/s/cluster_client_internal.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::VersionType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::VersionType::currentVersion
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<bool>
                const&, bool*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::DBClientWithCommands::getLastErrorString(mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::Query::sort(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::ScopedDbConnection::~ScopedDbConnection()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::clusterUpdate(std::string const&, mongo::BSONObj const&,
                mongo::BSONObj const&, bool, bool, mongo::BSONObj const&, mongo::BatchedCommandResponse*)
            symbol_sources:
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::VersionType::upgradeState
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/s/config_upgrade_helpers.h
        file_executables:
        - test
        - mongos
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/config_upgrade_v0_to_v5.cpp
        file_executables:
        - test
        - mongos
        file_interface:
        -   symbol_name: mongo::doUpgradeV0ToV5(mongo::ConnectionString const&, mongo::VersionType
                const&, std::string*)
            symbol_uses:
            - src/mongo/s/config_upgrade.cpp
        file_dependencies:
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::VersionType::isValid(std::string*) const
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::OID::init()
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::VersionType::VersionType()
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::VersionType::toBSON() const
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::VersionType::~VersionType()
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::clusterUpdate(std::string const&, mongo::BSONObj const&,
                mongo::BSONObj const&, bool, bool, mongo::BSONObj const&, mongo::BatchedCommandResponse*)
            symbol_sources:
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::VersionType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WriteConcernOptions::AllConfigs
            symbol_sources:
            - src/mongo/db/write_concern_options.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/config_upgrade_v4_to_v5.cpp
        file_executables:
        - test
        - mongos
        file_interface:
        -   symbol_name: mongo::doUpgradeV4ToV5(mongo::ConnectionString const&, mongo::VersionType
                const&, std::string*)
            symbol_uses:
            - src/mongo/s/config_upgrade.cpp
        file_dependencies:
        -   symbol_name: mongo::preUpgradeCheck(mongo::ConnectionString const&, mongo::VersionType
                const&, std::string)
            symbol_sources:
            - src/mongo/s/config_upgrade_helpers.cpp
        -   symbol_name: mongo::Status::toString() const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::commitConfigUpgrade(std::string const&, int, int,
                int)
            symbol_sources:
            - src/mongo/s/config_upgrade_helpers.cpp
-   group_title: 'TODO: Name this group'
    group_description: Distributed lock (lock on the config servers from mongos, i.e.
        "balancer lock")
    group_files:
    - src/mongo/s/distlock.cpp
    - src/mongo/s/distlock.h
    - src/mongo/s/distlock_test.cpp
    group_generated_data:
    -   file_name: src/mongo/s/distlock.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::DistributedLock::isLockHeld(double, std::string*)
            symbol_uses:
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::ScopedDistributedLock::ScopedDistributedLock(mongo::ConnectionString
                const&, std::string const&)
            symbol_uses:
            - src/mongo/db/auth/authz_manager_external_state_s.cpp
            - src/mongo/s/d_merge.cpp
            - src/mongo/s/config_upgrade.cpp
        -   symbol_name: mongo::DistributedLock::DistributedLock(mongo::ConnectionString
                const&, std::string const&, unsigned long long, bool)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::DistributedLock::unlock(mongo::BSONObj*)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::ScopedDistributedLock::tryAcquire(std::string*)
            symbol_uses:
            - src/mongo/s/d_merge.cpp
        -   symbol_name: mongo::ScopedDistributedLock::~ScopedDistributedLock()
            symbol_uses:
            - src/mongo/s/d_merge.cpp
            - src/mongo/s/config_upgrade.cpp
        -   symbol_name: mongo::DistributedLock::lock_try(std::string const&, bool,
                mongo::BSONObj*, double)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::setLockPingerEnabled(bool)
            symbol_uses:
            - src/mongo/dbtests/config_server_fixture.cpp
        -   symbol_name: mongo::ScopedDistributedLock::acquire(long long, std::string*)
            symbol_uses:
            - src/mongo/db/auth/authz_manager_external_state_s.cpp
            - src/mongo/s/config_upgrade.cpp
        file_dependencies:
        -   symbol_name: typeinfo for boost::detail::thread_data_base
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Date_t::toString() const
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::LocksType::state
            symbol_sources:
            - src/mongo/s/type_locks.cpp
        -   symbol_name: mongo::jsTimeVirtualThreadSkew(long long)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::LockpingsType::ping
            symbol_sources:
            - src/mongo/s/type_lockpings.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LabeledLevel)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONObj::jsonString(mongo::JsonStringFormat, int)
                const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::setThreadName(mongo::StringData)
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::LocksType::process
            symbol_sources:
            - src/mongo/s/type_locks.cpp
        -   symbol_name: boost::detail::set_tss_data(void const*, boost::shared_ptr<boost::detail::tss_cleanup_function>,
                void*, bool)
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::causedBy(std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Timer::_countsPerSecond
            symbol_sources:
            - src/mongo/util/timer.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBClientWithCommands::getLastError(bool, bool, int,
                int)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::jsTime()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::sleepmillis(long long)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::LocksType::name
            symbol_sources:
            - src/mongo/s/type_locks.cpp
        -   symbol_name: mongo::LT
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::DBConnectionPool::get(std::string const&, double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: boost::thread::start_thread()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::detail::thread_data_base::~thread_data_base()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: boost::detail::get_tss_data(void const*)
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::LocksType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_locks.cpp
        -   symbol_name: mongo::ScopedDbConnection::~ScopedDbConnection()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: vtable for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LocksType::who
            symbol_sources:
            - src/mongo/s/type_locks.cpp
        -   symbol_name: typeinfo for mongo::UserException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LocksType::why
            symbol_sources:
            - src/mongo/s/type_locks.cpp
        -   symbol_name: mongo::curTimeMicros64()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::causedBy(std::exception const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::causedBy(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBException::toString() const
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::NIN
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::causedBy(char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::LockpingsType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_lockpings.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::inShutdown()
            symbol_sources:
            - src/mongo/client/scoped_db_conn_test.cpp
            - src/mongo/unittest/crutch.cpp
            - src/mongo/db/instance.cpp
            - src/mongo/client/clientAndShell.cpp
            - src/mongo/s/server.cpp
        -   symbol_name: mongo::ConnectionString::_finishInit()
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: boost::thread::~thread()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::causedBy(std::string const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBException::traceIfNeeded(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::sleepsecs(int)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::getHostName()
            symbol_sources:
            - src/mongo/util/net/sock.cpp
        -   symbol_name: mongo::DBClientWithCommands::getLastErrorString(mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::LocksType::lockID
            symbol_sources:
            - src/mongo/s/type_locks.cpp
        -   symbol_name: mongo::LockpingsType::process
            symbol_sources:
            - src/mongo/s/type_lockpings.cpp
        -   symbol_name: vtable for boost::detail::thread_data_base
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::StringData const&)
            symbol_sources:
            - src/mongo/base/string_data.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::OID::init()
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::serverGlobalParams
            symbol_sources:
            - src/mongo/db/server_options.cpp
        -   symbol_name: mongo::getJSTimeVirtualThreadSkew()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
    -   file_name: src/mongo/s/distlock.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/distlock_test.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies:
        -   symbol_name: typeinfo for boost::detail::thread_data_base
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::DBConnectionPool::get(std::string const&, double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Date_t::toString() const
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::DistributedLock::lock_try(std::string const&, bool,
                mongo::BSONObj*, double)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::jsTimeVirtualThreadSkew(long long)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: mongo::setThreadName(mongo::StringData)
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: vtable for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: boost::detail::set_tss_data(void const*, boost::shared_ptr<boost::detail::tss_cleanup_function>,
                void*, bool)
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::Timer::_countsPerSecond
            symbol_sources:
            - src/mongo/util/timer.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::GlobalInitializerRegisterer::GlobalInitializerRegisterer(std::string
                const&, boost::function<mongo::Status (mongo::InitializerContext*)>
                const&, std::vector<std::string, std::allocator<std::string> > const&,
                std::vector<std::string, std::allocator<std::string> > const&)
            symbol_sources:
            - src/mongo/base/global_initializer_registerer.cpp
        -   symbol_name: mongo::jsTime()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::sleepmillis(long long)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: typeinfo for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: boost::thread::start_thread()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::BSONElement::Array() const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::detail::thread_data_base::~thread_data_base()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: boost::detail::get_tss_data(void const*)
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::Command::Command(mongo::StringData, bool, mongo::StringData)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: vtable for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Command::checkAuthForCommand(mongo::ClientBasic*,
                std::string const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::DistributedLock::killPinger(mongo::DistributedLock&)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::causedBy(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Command::testCommandsEnabled
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: boost::thread::join()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::jsTimeVirtualSkew(long long)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::DistributedLock::DistributedLock(mongo::ConnectionString
                const&, std::string const&, unsigned long long, bool)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::curTimeMicros64()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::ConnectionString::_finishInit()
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: boost::thread::~thread()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::DistributedLock::unlock(mongo::BSONObj*)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::sleepsecs(int)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::ConnectionString::_fillServers(std::string)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::Command::parseNs(std::string const&, mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: vtable for boost::detail::thread_data_base
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::ScopedDbConnection::~ScopedDbConnection()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::_makeStringVector(int, ...)
            symbol_sources:
            - src/mongo/base/make_string_vector.cpp
        -   symbol_name: mongo::Command::redactForLogging(mongo::mutablebson::Document*)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Command::stopIndexBuilds(std::string const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
-   group_title: 'TODO: Name this group'
    group_description: Parser for fields in a BSON object. Meant to help enforce a
        schema on a BSON object.
    group_files:
    - src/mongo/db/field_parser-inl.h
    - src/mongo/db/field_parser.cpp
    - src/mongo/db/field_parser.h
    - src/mongo/db/field_parser_test.cpp
    group_generated_data:
    -   file_name: src/mongo/db/field_parser-inl.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/field_parser.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::Date_t>
                const&, mongo::Date_t*, std::string*)
            symbol_uses:
            - src/mongo/s/type_collection.cpp
            - src/mongo/s/type_lockpings.cpp
            - src/mongo/s/type_changelog.cpp
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::FieldParser::extractID(mongo::BSONObj, mongo::BSONField<mongo::BSONObj>
                const&, mongo::BSONObj*, std::string*)
            symbol_uses:
            - src/mongo/s/write_ops/batched_upsert_detail.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<int>
                const&, int*, std::string*)
            symbol_uses:
            - src/mongo/s/write_ops/batched_command_response.cpp
            - src/mongo/s/write_ops/write_error_detail.cpp
            - src/mongo/s/write_ops/batched_upsert_detail.cpp
            - src/mongo/s/type_settings.cpp
            - src/mongo/s/type_mongos.cpp
            - src/mongo/s/write_ops/config_coordinator.cpp
            - src/mongo/s/type_locks.cpp
            - src/mongo/s/write_ops/wc_error_detail.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::OpTime>
                const&, mongo::OpTime*, std::string*)
            symbol_uses:
            - src/mongo/db/commands/get_last_error.cpp
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONElement, mongo::BSONField<std::string>
                const&, std::string*, std::string*)
            symbol_uses:
            - src/mongo/db/auth/privilege_parser.cpp
            - src/mongo/s/write_ops/batched_insert_request.cpp
        -   symbol_name: mongo::FieldParser::extractNumber(mongo::BSONObj, mongo::BSONField<long
                long> const&, long long*, std::string*)
            symbol_uses:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::BSONArray>
                const&, mongo::BSONArray*, std::string*)
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/type_config_version.cpp
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<std::string>
                const&, std::string*, std::string*)
            symbol_uses:
            - src/mongo/s/write_ops/write_error_detail.cpp
            - src/mongo/s/type_lockpings.cpp
            - src/mongo/s/write_ops/config_coordinator.cpp
            - src/mongo/db/commands/merge_chunks_cmd.cpp
            - src/mongo/db/auth/privilege_parser.cpp
            - src/mongo/s/type_mongos.cpp
            - src/mongo/s/write_ops/batched_request_metadata.cpp
            - src/mongo/s/type_shard.cpp
            - src/mongo/s/write_ops/wc_error_detail.cpp
            - src/mongo/s/type_database.cpp
            - src/mongo/s/type_tags.cpp
            - src/mongo/s/type_collection.cpp
            - src/mongo/db/query/type_explain.cpp
            - src/mongo/s/write_ops/batched_update_request.cpp
            - src/mongo/db/commands/cleanup_orphaned_cmd.cpp
            - src/mongo/s/write_ops/batched_command_response.cpp
            - src/mongo/s/type_changelog.cpp
            - src/mongo/s/type_settings.cpp
            - src/mongo/s/write_ops/batched_delete_request.cpp
            - src/mongo/s/type_locks.cpp
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::BSONObj>
                const&, mongo::BSONObj*, std::string*)
            symbol_uses:
            - src/mongo/s/write_ops/batched_update_request.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/type_changelog.cpp
            - src/mongo/s/type_tags.cpp
            - src/mongo/s/write_ops/write_error_detail.cpp
            - src/mongo/s/type_collection.cpp
            - src/mongo/s/type_settings.cpp
            - src/mongo/s/write_ops/wc_error_detail.cpp
            - src/mongo/s/type_config_version.cpp
            - src/mongo/s/write_ops/batched_update_document.cpp
            - src/mongo/s/write_ops/batched_delete_document.cpp
            - src/mongo/db/query/type_explain.cpp
            - src/mongo/s/write_ops/batched_delete_request.cpp
            - src/mongo/s/type_chunk.cpp
            - src/mongo/db/commands/cleanup_orphaned_cmd.cpp
        -   symbol_name: mongo::FieldParser::extractNumber(mongo::BSONObj, mongo::BSONField<int>
                const&, int*, std::string*)
            symbol_uses:
            - src/mongo/s/write_ops/batched_delete_document.cpp
            - src/mongo/s/write_ops/batched_command_response.cpp
            - src/mongo/s/type_config_version.cpp
            - src/mongo/s/write_ops/config_coordinator.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<bool>
                const&, bool*, std::string*)
            symbol_uses:
            - src/mongo/s/type_database.cpp
            - src/mongo/db/query/type_explain.cpp
            - src/mongo/s/write_ops/batched_update_request.cpp
            - src/mongo/s/type_collection.cpp
            - src/mongo/db/auth/privilege_parser.cpp
            - src/mongo/s/type_mongos.cpp
            - src/mongo/s/write_ops/batched_update_document.cpp
            - src/mongo/s/write_ops/batched_delete_request.cpp
            - src/mongo/s/type_shard.cpp
            - src/mongo/s/type_chunk.cpp
            - src/mongo/db/commands/cleanup_orphaned_cmd.cpp
            - src/mongo/s/type_settings.cpp
            - src/mongo/s/config_upgrade_helpers.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONElement, mongo::BSONField<bool>
                const&, bool*, std::string*)
            symbol_uses:
            - src/mongo/s/write_ops/batched_insert_request.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<long
                long> const&, long long*, std::string*)
            symbol_uses:
            - src/mongo/s/write_ops/batched_request_metadata.cpp
            - src/mongo/s/write_ops/batched_command_response.cpp
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONElement, mongo::BSONField<mongo::BSONObj>
                const&, mongo::BSONObj*, std::string*)
            symbol_uses:
            - src/mongo/s/write_ops/batched_insert_request.cpp
            - src/mongo/db/commands/merge_chunks_cmd.cpp
            - src/mongo/s/commands/cluster_merge_chunks_cmd.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::OID>
                const&, mongo::OID*, std::string*)
            symbol_uses:
            - src/mongo/s/write_ops/batched_command_response.cpp
            - src/mongo/db/commands/merge_chunks_cmd.cpp
            - src/mongo/s/type_collection.cpp
            - src/mongo/s/type_config_version.cpp
            - src/mongo/db/commands/get_last_error.cpp
            - src/mongo/s/type_locks.cpp
        file_dependencies:
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/field_parser.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/field_parser_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::Date_t>
                const&, mongo::Date_t*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::causedBy(std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONElement, mongo::BSONField<std::string>
                const&, std::string*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::BSONArray>
                const&, mongo::BSONArray*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<std::string>
                const&, std::string*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::BSONObj>
                const&, mongo::BSONObj*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<bool>
                const&, bool*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<long
                long> const&, long long*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONElement, mongo::BSONField<mongo::BSONObj>
                const&, mongo::BSONObj*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::OID::init()
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::OID>
                const&, mongo::OID*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
-   group_title: 'TODO: Name this group'
    group_description: '"Schema" for config server metadata. These classes contain
        structural class definitions for what# we expect to find on the config server.
        They use the field parser above to convert BSON fields# into C++ members.'
    group_files:
    - src/mongo/s/type_changelog.cpp
    - src/mongo/s/type_changelog.h
    - src/mongo/s/type_changelog_test.cpp
    - src/mongo/s/type_chunk.cpp
    - src/mongo/s/type_chunk.h
    - src/mongo/s/type_chunk_test.cpp
    - src/mongo/s/type_collection.cpp
    - src/mongo/s/type_collection.h
    - src/mongo/s/type_collection_test.cpp
    - src/mongo/s/type_config_version.cpp
    - src/mongo/s/type_config_version.h
    - src/mongo/s/type_config_version_test.cpp
    - src/mongo/s/type_database.cpp
    - src/mongo/s/type_database.h
    - src/mongo/s/type_database_test.cpp
    - src/mongo/s/type_lockpings.cpp
    - src/mongo/s/type_lockpings.h
    - src/mongo/s/type_lockpings_test.cpp
    - src/mongo/s/type_locks.cpp
    - src/mongo/s/type_locks.h
    - src/mongo/s/type_locks_test.cpp
    - src/mongo/s/type_mongos.cpp
    - src/mongo/s/type_mongos.h
    - src/mongo/s/type_mongos_test.cpp
    - src/mongo/s/type_settings.cpp
    - src/mongo/s/type_settings.h
    - src/mongo/s/type_settings_test.cpp
    - src/mongo/s/type_shard.cpp
    - src/mongo/s/type_shard.h
    - src/mongo/s/type_shard_test.cpp
    - src/mongo/s/type_tags.cpp
    - src/mongo/s/type_tags.h
    - src/mongo/s/type_tags_test.cpp
    group_generated_data:
    -   file_name: src/mongo/s/type_changelog.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ChangelogType::server
            symbol_uses:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::ChangelogType::time
            symbol_uses:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::ChangelogType::changeID
            symbol_uses:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::ChangelogType::~ChangelogType()
            symbol_uses:
            - src/mongo/s/cluster_client_internal.cpp
        -   symbol_name: mongo::ChangelogType::ConfigNS
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/s/cluster_client_internal.cpp
            - src/mongo/dbtests/config_server_fixture.cpp
        -   symbol_name: mongo::ChangelogType::ChangelogType()
            symbol_uses:
            - src/mongo/s/cluster_client_internal.cpp
        -   symbol_name: mongo::ChangelogType::toBSON() const
            symbol_uses:
            - src/mongo/s/cluster_client_internal.cpp
        -   symbol_name: mongo::ChangelogType::details
            symbol_uses:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::ChangelogType::clientAddr
            symbol_uses:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::ChangelogType::ns
            symbol_uses:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::ChangelogType::what
            symbol_uses:
            - src/mongo/s/config.cpp
        file_dependencies:
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<std::string>
                const&, std::string*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::Date_t>
                const&, mongo::Date_t*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::BSONObj>
                const&, mongo::BSONObj*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/type_changelog.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/type_changelog_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ChangelogType::ChangelogType()
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ChangelogType::server
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: mongo::ChangelogType::ns
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: mongo::ChangelogType::isValid(std::string*) const
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChangelogType::what
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChangelogType::time
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: mongo::ChangelogType::details
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChangelogType::clientAddr
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChangelogType::changeID
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChangelogType::~ChangelogType()
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::ChangelogType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
    -   file_name: src/mongo/s/type_chunk.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ChunkType::jumbo
            symbol_uses:
            - src/mongo/s/balancer_policy_tests.cpp
            - src/mongo/s/balancer_policy.cpp
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::ChunkType::name
            symbol_uses:
            - src/mongo/s/chunk.cpp
            - src/mongo/s/d_merge.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::ChunkType::min
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
            - src/mongo/s/config.cpp
            - src/mongo/dbtests/sharding.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/balancer_policy.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/s/balancer_policy_tests.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/s/metadata_loader.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::ChunkType::ConfigNS
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
            - src/mongo/s/config.cpp
            - src/mongo/dbtests/config_server_fixture.cpp
            - src/mongo/dbtests/sharding.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/s/d_merge.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/s/cluster_client_internal.cpp
            - src/mongo/s/metadata_loader.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::ChunkType::max
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
            - src/mongo/dbtests/sharding.cpp
            - src/mongo/s/balancer_policy.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/s/balancer_policy_tests.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/s/metadata_loader.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::ChunkType::toBSON() const
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
            - src/mongo/s/d_merge.cpp
        -   symbol_name: mongo::ChunkType::DEPRECATED_lastmod
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/dbtests/sharding.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/s/d_merge.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/dbtests/config_server_fixture.cpp
            - src/mongo/s/metadata_loader.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::ChunkType::isValid(std::string*) const
            symbol_uses:
            - src/mongo/s/cluster_client_internal.cpp
        -   symbol_name: mongo::ChunkType::~ChunkType()
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
            - src/mongo/s/d_state.cpp
            - src/mongo/s/d_merge.cpp
            - src/mongo/s/cluster_client_internal.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::ChunkType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_uses:
            - src/mongo/s/cluster_client_internal.cpp
        -   symbol_name: mongo::ChunkType::ns
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/dbtests/config_server_fixture.cpp
            - src/mongo/dbtests/sharding.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/s/d_merge.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/s/cluster_client_internal.cpp
            - src/mongo/s/metadata_loader.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::ChunkType::ChunkType()
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
            - src/mongo/s/d_state.cpp
            - src/mongo/s/d_merge.cpp
            - src/mongo/s/cluster_client_internal.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::ChunkType::shard
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/dbtests/sharding.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/config.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/s/metadata_loader.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::ChunkType::cloneTo(mongo::ChunkType*) const
            symbol_uses:
            - src/mongo/s/d_merge.cpp
        file_dependencies:
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<std::string>
                const&, std::string*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<bool>
                const&, bool*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::BSONObj>
                const&, mongo::BSONObj*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/type_chunk.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/type_chunk_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::ChunkType::shard
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ChunkType::DEPRECATED_lastmod
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ChunkType::name
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ChunkType::~ChunkType()
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ChunkType::DEPRECATED_epoch
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ChunkType::max
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ChunkType::min
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChunkType::isValid(std::string*) const
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChunkType::version
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChunkType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::OID::init()
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ChunkType::ns
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::ChunkType::ChunkType()
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/type_collection.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::CollectionType::DEPRECATED_lastmodEpoch
            symbol_uses:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::CollectionType::toBSON() const
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
        -   symbol_name: mongo::CollectionType::noBalance
            symbol_uses:
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::CollectionType::CollectionType()
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
            - src/mongo/s/cluster_client_internal.cpp
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::CollectionType::keyPattern
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::CollectionType::unique
            symbol_uses:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::CollectionType::DEPRECATED_lastmod
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::CollectionType::~CollectionType()
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
            - src/mongo/s/cluster_client_internal.cpp
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::CollectionType::ns
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
            - src/mongo/s/config.cpp
            - src/mongo/s/grid.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::CollectionType::primary
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::CollectionType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_uses:
            - src/mongo/s/cluster_client_internal.cpp
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::CollectionType::dropped
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/s/cluster_client_internal.cpp
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::CollectionType::ConfigNS
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
            - src/mongo/s/config.cpp
            - src/mongo/s/grid.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/config_upgrade.cpp
            - src/mongo/s/cluster_client_internal.cpp
            - src/mongo/s/metadata_loader.cpp
            - src/mongo/dbtests/config_server_fixture.cpp
        -   symbol_name: mongo::CollectionType::isValid(std::string*) const
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
            - src/mongo/s/cluster_client_internal.cpp
            - src/mongo/s/metadata_loader.cpp
        file_dependencies:
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<std::string>
                const&, std::string*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::Date_t>
                const&, mongo::Date_t*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<bool>
                const&, bool*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::BSONObj>
                const&, mongo::BSONObj*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::OID>
                const&, mongo::OID*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/type_collection.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/type_collection_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::CollectionType::DEPRECATED_lastmod
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::CollectionType::epoch
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::CollectionType::keyPattern
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::CollectionType::updatedAt
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::CollectionType::ns
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CollectionType::isValid(std::string*) const
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::CollectionType::DEPRECATED_lastmodEpoch
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::CollectionType::unique
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::CollectionType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CollectionType::primary
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CollectionType::~CollectionType()
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::OID::init()
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CollectionType::CollectionType()
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::CollectionType::dropped
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/type_config_version.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::VersionType::VersionType()
            symbol_uses:
            - src/mongo/dbtests/config_upgrade_tests.cpp
            - src/mongo/s/server.cpp
            - src/mongo/s/config_upgrade_v0_to_v5.cpp
        -   symbol_name: mongo::VersionType::version_DEPRECATED
            symbol_uses:
            - src/mongo/s/config_upgrade_helpers.cpp
        -   symbol_name: mongo::VersionType::upgradeId
            symbol_uses:
            - src/mongo/s/config_upgrade_helpers.cpp
        -   symbol_name: mongo::VersionType::clear()
            symbol_uses:
            - src/mongo/s/config_upgrade.cpp
            - src/mongo/dbtests/config_upgrade_tests.cpp
        -   symbol_name: mongo::VersionType::~VersionType()
            symbol_uses:
            - src/mongo/dbtests/config_upgrade_tests.cpp
            - src/mongo/s/server.cpp
            - src/mongo/s/config_upgrade_v0_to_v5.cpp
        -   symbol_name: mongo::VersionType::minCompatibleVersion
            symbol_uses:
            - src/mongo/s/config_upgrade_helpers.cpp
        -   symbol_name: mongo::VersionType::currentVersion
            symbol_uses:
            - src/mongo/s/config_upgrade_helpers.cpp
        -   symbol_name: mongo::VersionType::isValid(std::string*) const
            symbol_uses:
            - src/mongo/s/config_upgrade.cpp
            - src/mongo/s/config_upgrade_v0_to_v5.cpp
        -   symbol_name: mongo::VersionType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_uses:
            - src/mongo/s/config_upgrade.cpp
        -   symbol_name: mongo::VersionType::excludingMongoVersions
            symbol_uses:
            - src/mongo/s/config_upgrade.cpp
        -   symbol_name: mongo::VersionType::ConfigNS
            symbol_uses:
            - src/mongo/dbtests/config_server_fixture.cpp
            - src/mongo/s/config_upgrade.cpp
            - src/mongo/dbtests/config_upgrade_tests.cpp
            - src/mongo/s/config_upgrade_helpers.cpp
            - src/mongo/s/config_upgrade_v0_to_v5.cpp
        -   symbol_name: mongo::VersionType::toBSON() const
            symbol_uses:
            - src/mongo/dbtests/config_upgrade_tests.cpp
            - src/mongo/s/config_upgrade_v0_to_v5.cpp
        -   symbol_name: mongo::VersionType::cloneTo(mongo::VersionType*) const
            symbol_uses:
            - src/mongo/s/config_upgrade.cpp
        -   symbol_name: mongo::VersionType::upgradeState
            symbol_uses:
            - src/mongo/s/config_upgrade_helpers.cpp
        file_dependencies:
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::BSONObj>
                const&, mongo::BSONObj*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::BSONArray>
                const&, mongo::BSONArray*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::OID>
                const&, mongo::OID*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::FieldParser::extractNumber(mongo::BSONObj, mongo::BSONField<int>
                const&, int*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/type_config_version.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/type_config_version_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::VersionType::isValid(std::string*) const
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::VersionType::clusterId
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::VersionType::VersionType()
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::VersionType::upgradeId
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::VersionType::~VersionType()
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::VersionType::minCompatibleVersion
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::VersionType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::OID::init()
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::VersionType::upgradeState
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::VersionType::version_DEPRECATED
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::VersionType::toBSON() const
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::VersionType::currentVersion
            symbol_sources:
            - src/mongo/s/type_config_version.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/type_database.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::DatabaseType::~DatabaseType()
            symbol_uses:
            - src/mongo/db/auth/authz_manager_external_state_s.cpp
        -   symbol_name: mongo::DatabaseType::DatabaseType()
            symbol_uses:
            - src/mongo/db/auth/authz_manager_external_state_s.cpp
        -   symbol_name: mongo::DatabaseType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_uses:
            - src/mongo/db/auth/authz_manager_external_state_s.cpp
        -   symbol_name: mongo::DatabaseType::DEPRECATED_partitioned
            symbol_uses:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::DatabaseType::ConfigNS
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/s/grid.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/db/auth/authz_manager_external_state_s.cpp
            - src/mongo/s/config_upgrade.cpp
            - src/mongo/dbtests/config_server_fixture.cpp
        -   symbol_name: mongo::DatabaseType::DEPRECATED_sharded
            symbol_uses:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::DatabaseType::isValid(std::string*) const
            symbol_uses:
            - src/mongo/db/auth/authz_manager_external_state_s.cpp
        -   symbol_name: mongo::DatabaseType::primary
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/s/commands_admin.cpp
        -   symbol_name: mongo::DatabaseType::name
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/grid.cpp
        file_dependencies:
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<std::string>
                const&, std::string*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<bool>
                const&, bool*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/type_database.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/type_database_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::DatabaseType::isValid(std::string*) const
            symbol_sources:
            - src/mongo/s/type_database.cpp
        -   symbol_name: mongo::DatabaseType::draining
            symbol_sources:
            - src/mongo/s/type_database.cpp
        -   symbol_name: mongo::DatabaseType::~DatabaseType()
            symbol_sources:
            - src/mongo/s/type_database.cpp
        -   symbol_name: mongo::DatabaseType::DatabaseType()
            symbol_sources:
            - src/mongo/s/type_database.cpp
        -   symbol_name: mongo::DatabaseType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_sources:
            - src/mongo/s/type_database.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::DatabaseType::DEPRECATED_partitioned
            symbol_sources:
            - src/mongo/s/type_database.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<bool>
                const&, bool*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::DatabaseType::name
            symbol_sources:
            - src/mongo/s/type_database.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::DatabaseType::primary
            symbol_sources:
            - src/mongo/s/type_database.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::DatabaseType::toBSON() const
            symbol_sources:
            - src/mongo/s/type_database.cpp
    -   file_name: src/mongo/s/type_lockpings.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::LockpingsType::ping
            symbol_uses:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::LockpingsType::ConfigNS
            symbol_uses:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::LockpingsType::process
            symbol_uses:
            - src/mongo/s/distlock.cpp
        file_dependencies:
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<std::string>
                const&, std::string*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::Date_t>
                const&, mongo::Date_t*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/type_lockpings.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/type_lockpings_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::LockpingsType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_sources:
            - src/mongo/s/type_lockpings.cpp
        -   symbol_name: mongo::LockpingsType::ping
            symbol_sources:
            - src/mongo/s/type_lockpings.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::LockpingsType::isValid(std::string*) const
            symbol_sources:
            - src/mongo/s/type_lockpings.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::LockpingsType::process
            symbol_sources:
            - src/mongo/s/type_lockpings.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LockpingsType::~LockpingsType()
            symbol_sources:
            - src/mongo/s/type_lockpings.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LockpingsType::LockpingsType()
            symbol_sources:
            - src/mongo/s/type_lockpings.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/type_locks.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::LocksType::process
            symbol_uses:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::LocksType::state
            symbol_uses:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::LocksType::name
            symbol_uses:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::LocksType::lockID
            symbol_uses:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::LocksType::ConfigNS
            symbol_uses:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::LocksType::who
            symbol_uses:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::LocksType::why
            symbol_uses:
            - src/mongo/s/distlock.cpp
        file_dependencies:
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<std::string>
                const&, std::string*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<int>
                const&, int*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::OID>
                const&, mongo::OID*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/type_locks.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/type_locks_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::LocksType::isValid(std::string*) const
            symbol_sources:
            - src/mongo/s/type_locks.cpp
        -   symbol_name: mongo::LocksType::name
            symbol_sources:
            - src/mongo/s/type_locks.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::LocksType::who
            symbol_sources:
            - src/mongo/s/type_locks.cpp
        -   symbol_name: mongo::LocksType::state
            symbol_sources:
            - src/mongo/s/type_locks.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::LocksType::why
            symbol_sources:
            - src/mongo/s/type_locks.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::LocksType::LocksType()
            symbol_sources:
            - src/mongo/s/type_locks.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::LocksType::lockID
            symbol_sources:
            - src/mongo/s/type_locks.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::LocksType::~LocksType()
            symbol_sources:
            - src/mongo/s/type_locks.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LocksType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_sources:
            - src/mongo/s/type_locks.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LocksType::process
            symbol_sources:
            - src/mongo/s/type_locks.cpp
        -   symbol_name: mongo::OID::init()
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/type_mongos.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::MongosType::name
            symbol_uses:
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::MongosType::mongoVersion
            symbol_uses:
            - src/mongo/s/cluster_client_internal.cpp
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::MongosType::toBSON() const
            symbol_uses:
            - src/mongo/dbtests/config_upgrade_tests.cpp
        -   symbol_name: mongo::MongosType::ConfigNS
            symbol_uses:
            - src/mongo/s/cluster_client_internal.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/dbtests/config_upgrade_tests.cpp
            - src/mongo/dbtests/config_server_fixture.cpp
        -   symbol_name: mongo::MongosType::up
            symbol_uses:
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::MongosType::~MongosType()
            symbol_uses:
            - src/mongo/s/cluster_client_internal.cpp
            - src/mongo/dbtests/config_upgrade_tests.cpp
        -   symbol_name: mongo::MongosType::ping
            symbol_uses:
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::MongosType::MongosType()
            symbol_uses:
            - src/mongo/s/cluster_client_internal.cpp
            - src/mongo/dbtests/config_upgrade_tests.cpp
        -   symbol_name: mongo::MongosType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_uses:
            - src/mongo/s/cluster_client_internal.cpp
        -   symbol_name: mongo::MongosType::waiting
            symbol_uses:
            - src/mongo/s/balance.cpp
        file_dependencies:
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<std::string>
                const&, std::string*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::Date_t>
                const&, mongo::Date_t*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<bool>
                const&, bool*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<int>
                const&, int*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/type_mongos.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/type_mongos_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::MongosType::name
            symbol_sources:
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MongosType::waiting
            symbol_sources:
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::MongosType::ping
            symbol_sources:
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MongosType::configVersion
            symbol_sources:
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MongosType::MongosType()
            symbol_sources:
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::MongosType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_sources:
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MongosType::mongoVersion
            symbol_sources:
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MongosType::up
            symbol_sources:
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::MongosType::~MongosType()
            symbol_sources:
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::MongosType::isValid(std::string*) const
            symbol_sources:
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/type_settings.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::SettingsType::ConfigNS
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/s/config_upgrade.cpp
            - src/mongo/dbtests/config_upgrade_tests.cpp
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::SettingsType::shortBalancerSleep
            symbol_uses:
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::SettingsType::key
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/s/config_upgrade.cpp
            - src/mongo/dbtests/config_upgrade_tests.cpp
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::SettingsType::secondaryThrottle
            symbol_uses:
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::SettingsType::balancerActiveWindow
            symbol_uses:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::SettingsType::balancerStopped
            symbol_uses:
            - src/mongo/s/grid.cpp
            - src/mongo/s/config_upgrade.cpp
            - src/mongo/dbtests/config_upgrade_tests.cpp
        -   symbol_name: mongo::SettingsType::chunksize
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/s/chunk.cpp
        file_dependencies:
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<std::string>
                const&, std::string*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::toPointInTime(std::string const&, boost::posix_time::ptime*)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<bool>
                const&, bool*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<int>
                const&, int*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::BSONObj>
                const&, mongo::BSONObj*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/type_settings.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/type_settings_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::SettingsType::balancerStopped
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::SettingsType::isValid(std::string*) const
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::SettingsType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::SettingsType::key
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::SettingsType::shortBalancerSleep
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::SettingsType::chunksize
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::SettingsType::balancerActiveWindow
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::SettingsType::secondaryThrottle
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::SettingsType::~SettingsType()
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: mongo::SettingsType::SettingsType()
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/type_shard.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ShardType::host
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/s/grid.cpp
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::ShardType::name
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/grid.cpp
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::ShardType::~ShardType()
            symbol_uses:
            - src/mongo/s/cluster_client_internal.cpp
            - src/mongo/dbtests/config_upgrade_tests.cpp
        -   symbol_name: mongo::ShardType::ConfigNS
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/dbtests/config_upgrade_tests.cpp
            - src/mongo/s/shard.cpp
            - src/mongo/s/grid.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/tools/stat.cpp
            - src/mongo/s/config_upgrade.cpp
            - src/mongo/s/cluster_client_internal.cpp
            - src/mongo/dbtests/config_server_fixture.cpp
        -   symbol_name: mongo::ShardType::ShardType()
            symbol_uses:
            - src/mongo/s/cluster_client_internal.cpp
            - src/mongo/dbtests/config_upgrade_tests.cpp
        -   symbol_name: mongo::ShardType::tags
            symbol_uses:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::ShardType::draining
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::ShardType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_uses:
            - src/mongo/s/cluster_client_internal.cpp
        -   symbol_name: mongo::ShardType::maxSize
            symbol_uses:
            - src/mongo/s/grid.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::ShardType::toBSON() const
            symbol_uses:
            - src/mongo/dbtests/config_upgrade_tests.cpp
        -   symbol_name: mongo::ShardType::isValid(std::string*) const
            symbol_uses:
            - src/mongo/s/cluster_client_internal.cpp
        file_dependencies:
        -   symbol_name: mongo::FieldParser::extractNumber(mongo::BSONObj, mongo::BSONField<long
                long> const&, long long*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<std::string>
                const&, std::string*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<bool>
                const&, bool*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::BSONArray>
                const&, mongo::BSONArray*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/type_shard.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/type_shard_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ShardType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::ShardType::ShardType()
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::ShardType::host
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ShardType::name
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ShardType::~ShardType()
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ShardType::isValid(std::string*) const
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ShardType::maxSize
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::ShardType::draining
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/type_tags.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::TagsType::min
            symbol_uses:
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::TagsType::ConfigNS
            symbol_uses:
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::TagsType::tag
            symbol_uses:
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::TagsType::ns
            symbol_uses:
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::TagsType::max
            symbol_uses:
            - src/mongo/s/balance.cpp
        file_dependencies:
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<std::string>
                const&, std::string*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::BSONObj>
                const&, mongo::BSONObj*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/type_tags.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/type_tags_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::TagsType::tag
            symbol_sources:
            - src/mongo/s/type_tags.cpp
        -   symbol_name: mongo::TagsType::max
            symbol_sources:
            - src/mongo/s/type_tags.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::TagsType::TagsType()
            symbol_sources:
            - src/mongo/s/type_tags.cpp
        -   symbol_name: mongo::TagsType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_sources:
            - src/mongo/s/type_tags.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::TagsType::~TagsType()
            symbol_sources:
            - src/mongo/s/type_tags.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::TagsType::ns
            symbol_sources:
            - src/mongo/s/type_tags.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::TagsType::isValid(std::string*) const
            symbol_sources:
            - src/mongo/s/type_tags.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::TagsType::min
            symbol_sources:
            - src/mongo/s/type_tags.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
-   group_title: 'TODO: Name this group'
    group_description: Bizarre legacy sharding code.## From writeback_listener.h#
        "The writeback listener takes back write attempts that were made against a
        wrong shard.# (Wrong here in the sense that the target chunk moved before
        this mongos had a chance to# learn so.) It is responsible for reapplying these
        writes to the correct shard."## So basically, the mongos sends an operation
        to the mongod, and the writeback listener (running on# the mongos) says to
        the mongod every now and again, "yo, have I screwed up recently?". The mongod#
        is then like "yeah bro, you screwed up, you wrote all these things to the
        wrong place and the# writeback listener is like "thanks man" and tries to
        write them to the correct shard. Meanwhile# the user is like "I'm so glad
        my data was written". This should go away because of the new write# commands.##
        rofl
    group_files:
    - src/mongo/s/writeback_listener.cpp
    - src/mongo/s/writeback_listener.h
    group_generated_data:
    -   file_name: src/mongo/s/writeback_listener.cpp
        file_executables:
        - mongos
        file_interface:
        -   symbol_name: mongo::WriteBackListener::init(mongo::DBClientBase&)
            symbol_uses:
            - src/mongo/s/version_manager.cpp
        file_dependencies:
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ConnectionString::parse(std::string const&, std::string&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BackgroundJob::go()
            symbol_sources:
            - src/mongo/util/background.cpp
        -   symbol_name: mongo::serverID
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::DBConnectionPool::get(std::string const&, double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::BackgroundJob::~BackgroundJob()
            symbol_sources:
            - src/mongo/util/background.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::Shard::isAShardNode(std::string const&)
            symbol_sources:
            - src/mongo/s/shard.cpp
            - src/mongo/client/clientAndShell.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::inShutdown()
            symbol_sources:
            - src/mongo/client/scoped_db_conn_test.cpp
            - src/mongo/unittest/crutch.cpp
            - src/mongo/db/instance.cpp
            - src/mongo/client/clientAndShell.cpp
            - src/mongo/s/server.cpp
        -   symbol_name: mongo::BackgroundJob::BackgroundJob(bool)
            symbol_sources:
            - src/mongo/util/background.cpp
        -   symbol_name: mongo::sleepsecs(int)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: typeinfo for mongo::BackgroundJob
            symbol_sources:
            - src/mongo/util/background.cpp
        -   symbol_name: mongo::ScopedDbConnection::~ScopedDbConnection()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::OID::init()
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
    -   file_name: src/mongo/s/writeback_listener.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
-   group_title: 'TODO: Name this group'
    group_description: mongod component of writeback listener
    group_files:
    - src/mongo/s/d_writeback.cpp
    - src/mongo/s/d_writeback.h
    group_generated_data:
    -   file_name: src/mongo/s/d_writeback.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::WriteBackManager::queueWriteBack(std::string const&,
                mongo::BSONObjBuilder&)
            symbol_uses:
            - src/mongo/s/d_logic.cpp
        -   symbol_name: mongo::writeBackManager
            symbol_uses:
            - src/mongo/s/d_logic.cpp
        file_dependencies:
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Privilege::Privilege(mongo::ResourcePattern const&,
                mongo::ActionSet const&)
            symbol_sources:
            - src/mongo/db/auth/privilege.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: vtable for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::PeriodicTask::~PeriodicTask()
            symbol_sources:
            - src/mongo/util/background.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::PeriodicTask::PeriodicTask()
            symbol_sources:
            - src/mongo/util/background.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ActionSet::addAction(mongo::ActionType const&)
            symbol_sources:
            - src/mongo/db/auth/action_set.cpp
        -   symbol_name: typeinfo for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Command::Command(mongo::StringData, bool, mongo::StringData)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ActionType::internal
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::Command::checkAuthForCommand(mongo::ClientBasic*,
                std::string const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::Listener::_timeTracker
            symbol_sources:
            - src/mongo/util/net/listen.cpp
        -   symbol_name: typeinfo for mongo::PeriodicTask
            symbol_sources:
            - src/mongo/util/background.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::OID::initSequential()
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::curTimeMicros64()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: boost::this_thread::interruption_point()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::Command::parseNs(std::string const&, mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Command::redactForLogging(mongo::mutablebson::Document*)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ServerStatusMetric::ServerStatusMetric(std::string
                const&)
            symbol_sources:
            - src/mongo/db/commands/server_status.cpp
        -   symbol_name: mongo::Command::stopIndexBuilds(std::string const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: boost::detail::get_current_thread_data()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
    -   file_name: src/mongo/s/d_writeback.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
-   group_title: 'TODO: Name this group'
    group_description: 'Sharding code? TODO: verify that this is all sharding related
        and document the architecture.'
    group_files:
    - src/mongo/s/balance.cpp
    - src/mongo/s/balance.h
    - src/mongo/s/balancer_policy.cpp
    - src/mongo/s/balancer_policy.h
    - src/mongo/s/balancer_policy_tests.cpp
    - src/mongo/s/bson_serializable.h
    - src/mongo/s/chunk.cpp
    - src/mongo/s/chunk.h
    - src/mongo/s/chunk_diff-inl.cpp
    - src/mongo/s/chunk_diff.h
    - src/mongo/s/chunk_diff_test.cpp
    - src/mongo/s/chunk_manager_targeter.cpp
    - src/mongo/s/chunk_manager_targeter.h
    - src/mongo/s/chunk_version.h
    - src/mongo/s/chunk_version_test.cpp
    - src/mongo/s/cluster_client_internal.cpp
    - src/mongo/s/cluster_client_internal.h
    - src/mongo/s/cluster_write.cpp
    - src/mongo/s/cluster_write.h
    - src/mongo/s/commands/auth_schema_upgrade_s.cpp
    - src/mongo/s/commands/cluster_index_filter_cmd.cpp
    - src/mongo/s/commands/cluster_merge_chunks_cmd.cpp
    - src/mongo/s/commands/cluster_plan_cache_cmd.cpp
    - src/mongo/s/commands_admin.cpp
    - src/mongo/s/commands_public.cpp
    - src/mongo/s/config.cpp
    - src/mongo/s/config.h
    - src/mongo/s/config_server_checker_service.cpp
    - src/mongo/s/config_server_checker_service.h
    - src/mongo/s/config_server_tests.cpp
    - src/mongo/s/cursors.cpp
    - src/mongo/s/cursors.h
    - src/mongo/s/d_logic.cpp
    - src/mongo/s/d_logic.h
    - src/mongo/s/d_merge.cpp
    - src/mongo/s/d_merge.h
    - src/mongo/s/d_migrate.cpp
    - src/mongo/s/d_split.cpp
    - src/mongo/s/d_state.cpp
    - src/mongo/s/dbclient_multi_command.cpp
    - src/mongo/s/dbclient_multi_command.h
    - src/mongo/s/dbclient_shard_resolver.cpp
    - src/mongo/s/dbclient_shard_resolver.h
    - src/mongo/s/default_version.cpp
    - src/mongo/s/grid.cpp
    - src/mongo/s/grid.h
    - src/mongo/s/mock_multi_write_command.h
    - src/mongo/s/mock_ns_targeter.h
    - src/mongo/s/mock_shard_resolver.h
    - src/mongo/s/mongo_version_range.cpp
    - src/mongo/s/mongo_version_range.h
    - src/mongo/s/mongo_version_range_test.cpp
    - src/mongo/s/mongos_persistence_stubs.cpp
    - src/mongo/s/multi_command_dispatch.h
    - src/mongo/s/ns_targeter.h
    - src/mongo/s/request.cpp
    - src/mongo/s/request.h
    - src/mongo/s/shard.cpp
    - src/mongo/s/shard.h
    - src/mongo/s/shard_conn_test.cpp
    - src/mongo/s/shard_key_pattern.cpp
    - src/mongo/s/shard_key_pattern.h
    - src/mongo/s/shard_resolver.h
    - src/mongo/s/shard_test.cpp
    - src/mongo/s/shardconnection.cpp
    - src/mongo/s/shardkey.cpp
    - src/mongo/s/shardkey.h
    - src/mongo/s/stale_exception.h
    - src/mongo/s/strategy.cpp
    - src/mongo/s/strategy.h
    - src/mongo/s/version_manager.cpp
    - src/mongo/s/version_manager.h
    - src/mongo/s/version_mongos.cpp
    - src/mongo/s/version_mongos.h
    group_generated_data:
    -   file_name: src/mongo/s/balance.cpp
        file_executables:
        - mongos
        file_interface:
        -   symbol_name: mongo::balancer
            symbol_uses:
            - src/mongo/s/server.cpp
        file_dependencies:
        -   symbol_name: mongo::Grid::getDBConfig(mongo::StringData const&, bool,
                std::string const&)
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DistributedLock::lock_try(std::string const&, bool,
                mongo::BSONObj*, double)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::isSameMajorVersion(char const*)
            symbol_sources:
            - src/mongo/util/version.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: mongo::ChunkType::min
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::DistributionStatus::addTagRange(mongo::TagRange const&)
            symbol_sources:
            - src/mongo/s/balancer_policy.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBConfig::getChunkManager(std::string const&, bool,
                bool)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::Shard::getStatus() const
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::DBConfig::getChunkManagerIfExists(std::string const&,
                bool, bool)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::Shard::runCommand(std::string const&, mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::clusterCreateIndex(std::string const&, mongo::BSONObj,
                bool, mongo::BSONObj const&, mongo::BatchedCommandResponse*)
            symbol_sources:
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::CollectionType::noBalance
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::SettingsType::secondaryThrottle
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::jsTime()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::MongosType::name
            symbol_sources:
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::CollectionType::keyPattern
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::BackgroundJob::~BackgroundJob()
            symbol_sources:
            - src/mongo/util/background.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::TagsType::min
            symbol_sources:
            - src/mongo/s/type_tags.cpp
        -   symbol_name: mongo::DBConnectionPool::get(std::string const&, double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::grid
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::KeyPattern::extendRangeBound(mongo::BSONObj const&,
                bool) const
            symbol_sources:
            - src/mongo/db/keypattern.cpp
        -   symbol_name: mongo::Grid::shouldBalance(std::string const&, mongo::BSONObj*)
                const
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::WriteConcernOptions::AllConfigs
            symbol_sources:
            - src/mongo/db/write_concern_options.cpp
        -   symbol_name: mongo::SettingsType::shortBalancerSleep
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: mongo::Chunk::MaxChunkSize
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MongosType::mongoVersion
            symbol_sources:
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::BalancerPolicy::balance(std::string const&, mongo::DistributionStatus
                const&, int)
            symbol_sources:
            - src/mongo/s/balancer_policy.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Shard::reloadShardInfo()
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::Shard::reset(std::string const&)
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::DistributedLock::DistributedLock(mongo::ConnectionString
                const&, std::string const&, unsigned long long, bool)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::DistributionStatus::DistributionStatus(std::map<std::string,
                mongo::ShardInfo, std::less<std::string>, std::allocator<std::pair<std::string
                const, mongo::ShardInfo> > > const&, std::map<std::string, std::vector<mongo::BSONObj,
                std::allocator<mongo::BSONObj> >, std::less<std::string>, std::allocator<std::pair<std::string
                const, std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj>
                > > > > const&)
            symbol_sources:
            - src/mongo/s/balancer_policy.cpp
        -   symbol_name: mongo::Chunk::multiSplit(std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj>
                > const&, mongo::BSONObj&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::Chunk::refreshChunkSize()
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::clusterUpdate(std::string const&, mongo::BSONObj const&,
                mongo::BSONObj const&, bool, bool, mongo::BSONObj const&, mongo::BatchedCommandResponse*)
            symbol_sources:
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::CollectionType::ns
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::configServer
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::versionString
            symbol_sources:
            - src/mongo/util/version.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ShardInfo::ShardInfo()
            symbol_sources:
            - src/mongo/s/balancer_policy.cpp
        -   symbol_name: mongo::causedBy(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::isConfigServerConsistent()
            symbol_sources:
            - src/mongo/s/config_server_checker_service.cpp
        -   symbol_name: mongo::ChunkType::ns
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::MongosType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::MongosType::up
            symbol_sources:
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::time_t_to_String_short(long)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::getHostNameCached()
            symbol_sources:
            - src/mongo/util/net/sock.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::Chunk::toString() const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ChunkType::shard
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::Shard::getAllShards(std::vector<mongo::Shard, std::allocator<mongo::Shard>
                >&)
            symbol_sources:
            - src/mongo/s/shard.cpp
            - src/mongo/client/clientAndShell.cpp
        -   symbol_name: mongo::inShutdown()
            symbol_sources:
            - src/mongo/client/scoped_db_conn_test.cpp
            - src/mongo/unittest/crutch.cpp
            - src/mongo/db/instance.cpp
            - src/mongo/client/clientAndShell.cpp
            - src/mongo/s/server.cpp
        -   symbol_name: mongo::ConnectionString::_finishInit()
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::DistributedLock::unlock(mongo::BSONObj*)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::ChunkInfo::toString() const
            symbol_sources:
            - src/mongo/s/d_split.cpp
            - src/mongo/s/balancer_policy.cpp
        -   symbol_name: mongo::BackgroundJob::BackgroundJob(bool)
            symbol_sources:
            - src/mongo/util/background.cpp
        -   symbol_name: mongo::CollectionType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::ShardInfo::ShardInfo(long long, long long, bool, bool,
                std::set<std::string, std::less<std::string>, std::allocator<std::string>
                > const&, std::string const&)
            symbol_sources:
            - src/mongo/s/balancer_policy.cpp
        -   symbol_name: mongo::sleepsecs(int)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::MongosType::waiting
            symbol_sources:
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::MongosType::ping
            symbol_sources:
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::ConnectionString::_fillServers(std::string)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::TagsType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_tags.cpp
        -   symbol_name: mongo::Chunk::moveAndCommit(mongo::Shard const&, long long,
                bool, bool, int, mongo::BSONObj&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::TagsType::tag
            symbol_sources:
            - src/mongo/s/type_tags.cpp
        -   symbol_name: mongo::TagsType::max
            symbol_sources:
            - src/mongo/s/type_tags.cpp
        -   symbol_name: typeinfo for mongo::BackgroundJob
            symbol_sources:
            - src/mongo/util/background.cpp
        -   symbol_name: mongo::WriteConcernOptions::Unacknowledged
            symbol_sources:
            - src/mongo/db/write_concern_options.cpp
        -   symbol_name: mongo::Chunk::singleSplit(bool, mongo::BSONObj&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::Query::sort(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::ScopedDbConnection::~ScopedDbConnection()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ChunkManager::findIntersectingChunk(mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::TagsType::ns
            symbol_sources:
            - src/mongo/s/type_tags.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::ChunkType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::serverGlobalParams
            symbol_sources:
            - src/mongo/db/server_options.cpp
        -   symbol_name: mongo::Chunk::markAsJumbo() const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
    -   file_name: src/mongo/s/balance.h
        file_executables:
        - mongos
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/balancer_policy.cpp
        file_executables:
        - mongos
        file_interface:
        -   symbol_name: mongo::DistributionStatus::addTagRange(mongo::TagRange const&)
            symbol_uses:
            - src/mongo/s/balancer_policy_tests.cpp
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::ShardInfo::isSizeMaxed() const
            symbol_uses:
            - src/mongo/s/balancer_policy_tests.cpp
        -   symbol_name: mongo::ChunkInfo::toString() const
            symbol_uses:
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::ShardInfo::toString() const
            symbol_uses:
            - src/mongo/s/balancer_policy_tests.cpp
        -   symbol_name: mongo::DistributionStatus::getTagForChunk(mongo::BSONObj
                const&) const
            symbol_uses:
            - src/mongo/s/balancer_policy_tests.cpp
        -   symbol_name: mongo::ShardInfo::addTag(std::string const&)
            symbol_uses:
            - src/mongo/s/balancer_policy_tests.cpp
        -   symbol_name: mongo::ShardInfo::ShardInfo()
            symbol_uses:
            - src/mongo/s/balancer_policy_tests.cpp
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::ShardInfo::ShardInfo(long long, long long, bool, bool,
                std::set<std::string, std::less<std::string>, std::allocator<std::string>
                > const&, std::string const&)
            symbol_uses:
            - src/mongo/s/balancer_policy_tests.cpp
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::BalancerPolicy::balance(std::string const&, mongo::DistributionStatus
                const&, int)
            symbol_uses:
            - src/mongo/s/balancer_policy_tests.cpp
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::DistributionStatus::DistributionStatus(std::map<std::string,
                mongo::ShardInfo, std::less<std::string>, std::allocator<std::pair<std::string
                const, mongo::ShardInfo> > > const&, std::map<std::string, std::vector<mongo::BSONObj,
                std::allocator<mongo::BSONObj> >, std::less<std::string>, std::allocator<std::pair<std::string
                const, std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj>
                > > > > const&)
            symbol_uses:
            - src/mongo/s/balancer_policy_tests.cpp
            - src/mongo/s/balance.cpp
        file_dependencies:
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChunkType::max
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ChunkType::min
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChunkType::jumbo
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/balancer_policy.h
        file_executables:
        - mongos
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/balancer_policy_tests.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::PseudoRandom::PseudoRandom(long long)
            symbol_sources:
            - src/mongo/platform/random.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ChunkType::max
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::ChunkType::min
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::DistributionStatus::addTagRange(mongo::TagRange const&)
            symbol_sources:
            - src/mongo/s/balancer_policy.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ShardInfo::isSizeMaxed() const
            symbol_sources:
            - src/mongo/s/balancer_policy.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::BalancerPolicy::balance(std::string const&, mongo::DistributionStatus
                const&, int)
            symbol_sources:
            - src/mongo/s/balancer_policy.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ShardInfo::addTag(std::string const&)
            symbol_sources:
            - src/mongo/s/balancer_policy.cpp
        -   symbol_name: mongo::DistributionStatus::DistributionStatus(std::map<std::string,
                mongo::ShardInfo, std::less<std::string>, std::allocator<std::pair<std::string
                const, mongo::ShardInfo> > > const&, std::map<std::string, std::vector<mongo::BSONObj,
                std::allocator<mongo::BSONObj> >, std::less<std::string>, std::allocator<std::pair<std::string
                const, std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj>
                > > > > const&)
            symbol_sources:
            - src/mongo/s/balancer_policy.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::DistributionStatus::getTagForChunk(mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/s/balancer_policy.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ShardInfo::ShardInfo()
            symbol_sources:
            - src/mongo/s/balancer_policy.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ShardInfo::ShardInfo(long long, long long, bool, bool,
                std::set<std::string, std::less<std::string>, std::allocator<std::string>
                > const&, std::string const&)
            symbol_sources:
            - src/mongo/s/balancer_policy.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::PseudoRandom::nextInt32()
            symbol_sources:
            - src/mongo/platform/random.cpp
        -   symbol_name: mongo::ShardInfo::toString() const
            symbol_sources:
            - src/mongo/s/balancer_policy.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::ChunkType::jumbo
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
    -   file_name: src/mongo/s/bson_serializable.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongorestore
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongosniff
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/chunk.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ChunkManager::loadExistingRanges(std::string const&)
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/dbtests/sharding.cpp
        -   symbol_name: mongo::Chunk::MaxChunkSize
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/config.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/commands_admin.cpp
        -   symbol_name: mongo::Chunk::multiSplit(std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj>
                > const&, mongo::BSONObj&) const
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::Chunk::markAsJumbo() const
            symbol_uses:
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::ChunkManager::hasShardKey(mongo::BSONObj const&) const
            symbol_uses:
            - src/mongo/s/chunk_manager_targeter.cpp
            - src/mongo/s/commands_public.cpp
        -   symbol_name: mongo::ChunkManager::createFirstChunks(std::string const&,
                mongo::Shard const&, std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj>
                > const*, std::vector<mongo::Shard, std::allocator<mongo::Shard> >
                const*)
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/dbtests/sharding.cpp
        -   symbol_name: mongo::Chunk::toString() const
            symbol_uses:
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::Chunk::moveAndCommit(mongo::Shard const&, long long,
                bool, bool, int, mongo::BSONObj&) const
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::ChunkManager::getVersion(mongo::Shard const&) const
            symbol_uses:
            - src/mongo/s/chunk_manager_targeter.cpp
            - src/mongo/s/version_manager.cpp
        -   symbol_name: mongo::ChunkManager::ChunkManager(std::string const&, mongo::ShardKeyPattern
                const&, bool)
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/dbtests/sharding.cpp
        -   symbol_name: mongo::ChunkManager::compatibleWith(mongo::ChunkManager const&,
                mongo::Shard const&) const
            symbol_uses:
            - src/mongo/client/parallel.cpp
            - src/mongo/s/version_manager.cpp
        -   symbol_name: mongo::Chunk::ShouldAutoSplit
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/mongos_options.cpp
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::ChunkManager::ChunkManager(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::setShardVersion(mongo::DBClientBase&, std::string
                const&, mongo::ChunkVersion, boost::shared_ptr<mongo::ChunkManager
                const>, bool, mongo::BSONObj&)
            symbol_uses:
            - src/mongo/s/version_manager.cpp
        -   symbol_name: mongo::ChunkManager::getVersion(mongo::StringData const&)
                const
            symbol_uses:
            - src/mongo/s/chunk_manager_targeter.cpp
        -   symbol_name: mongo::ChunkManager::getShardsForQuery(std::set<mongo::Shard,
                std::less<mongo::Shard>, std::allocator<mongo::Shard> >&, mongo::BSONObj
                const&) const
            symbol_uses:
            - src/mongo/s/chunk_manager_targeter.cpp
            - src/mongo/s/commands_public.cpp
            - src/mongo/dbtests/chunktests.cpp
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::Chunk::MaxObjectPerChunk
            symbol_uses:
            - src/mongo/s/d_split.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::ChunkManager::drop(boost::shared_ptr<mongo::ChunkManager
                const>) const
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::ChunkManager::findChunkForDoc(mongo::BSONObj const&)
                const
            symbol_uses:
            - src/mongo/s/chunk_manager_targeter.cpp
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/commands/cluster_merge_chunks_cmd.cpp
        -   symbol_name: mongo::ChunkManager::findIntersectingChunk(mongo::BSONObj
                const&) const
            symbol_uses:
            - src/mongo/s/request.cpp
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::ChunkManager::getAllShards(std::set<mongo::Shard,
                std::less<mongo::Shard>, std::allocator<mongo::Shard> >&) const
            symbol_uses:
            - src/mongo/s/chunk_manager_targeter.cpp
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/config.cpp
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::Chunk::splitIfShould(long) const
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::ChunkRangeManager::reloadAll(std::map<mongo::BSONObj,
                boost::shared_ptr<mongo::Chunk const>, mongo::BSONObjCmp, std::allocator<std::pair<mongo::BSONObj
                const, boost::shared_ptr<mongo::Chunk const> > > > const&)
            symbol_uses:
            - src/mongo/dbtests/chunktests.cpp
        -   symbol_name: mongo::ChunkManager::_printChunks() const
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
        -   symbol_name: mongo::ChunkManager::ChunkManager(boost::shared_ptr<mongo::ChunkManager
                const>)
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/dbtests/sharding.cpp
        -   symbol_name: mongo::ChunkManager::ChunkManager()
            symbol_uses:
            - src/mongo/dbtests/chunktests.cpp
        -   symbol_name: mongo::Chunk::Chunk(mongo::ChunkManager const*, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::Shard const&, mongo::ChunkVersion)
            symbol_uses:
            - src/mongo/dbtests/chunktests.cpp
        -   symbol_name: mongo::ChunkManager::getInfo(mongo::BSONObjBuilder&) const
            symbol_uses:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::Chunk::singleSplit(bool, mongo::BSONObj&) const
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::ChunkManager::getShardsForRange(std::set<mongo::Shard,
                std::less<mongo::Shard>, std::allocator<mongo::Shard> >&, mongo::BSONObj
                const&, mongo::BSONObj const&) const
            symbol_uses:
            - src/mongo/s/commands_public.cpp
        -   symbol_name: mongo::Chunk::refreshChunkSize()
            symbol_uses:
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::Chunk::setMaxChunkSizeSizeMB(int)
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/s/mongos_options.cpp
        -   symbol_name: mongo::Chunk::genID(std::string const&, mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/s/d_merge.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::Chunk::containsPoint(mongo::BSONObj const&) const
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
        -   symbol_name: mongo::ChunkManager::getVersion() const
            symbol_uses:
            - src/mongo/s/chunk_manager_targeter.cpp
            - src/mongo/s/config.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/client/parallel.cpp
            - src/mongo/dbtests/sharding.cpp
        file_dependencies:
        -   symbol_name: mongo::PseudoRandom::PseudoRandom(long long)
            symbol_sources:
            - src/mongo/platform/random.cpp
        -   symbol_name: mongo::Grid::getDBConfig(mongo::StringData const&, bool,
                std::string const&)
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::clusterDelete(std::string const&, mongo::BSONObj const&,
                int, mongo::BSONObj const&, mongo::BatchedCommandResponse*)
            symbol_sources:
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::DBClientWithCommands::simpleCommand(std::string const&,
                mongo::BSONObj*, std::string const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DistributedLock::lock_try(std::string const&, bool,
                mongo::BSONObj*, double)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::FieldRangeSet::universalRange() const
            symbol_sources:
            - src/mongo/db/queryutil.cpp
        -   symbol_name: mongo::StartupTest::StartupTest()
            symbol_sources:
            - src/mongo/util/startup_test.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::getGtLtOp(mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: mongo::ChunkType::max
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::ConnectionString::sameLogicalEndpoint(mongo::ConnectionString
                const&) const
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::ChunkType::min
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBConfig::getChunkManager(std::string const&, bool,
                bool)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::ChunkType::jumbo
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: typeinfo for mongo::StartupTest
            symbol_sources:
            - src/mongo/util/startup_test.cpp
        -   symbol_name: mongo::LastErrorHolder::get(bool)
            symbol_sources:
            - src/mongo/db/lasterror.cpp
        -   symbol_name: mongo::OrRangeGenerator::popOrClauseSingleKey()
            symbol_sources:
            - src/mongo/db/queryutil.cpp
        -   symbol_name: mongo::DBConfig::getChunkManagerIfExists(std::string const&,
                bool, bool)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::Shard::pick(mongo::Shard const&)
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::Query::toString() const
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::KeyPattern::keyBounds(mongo::FieldRangeSet const&)
                const
            symbol_sources:
            - src/mongo/db/keypattern.cpp
        -   symbol_name: mongo::causedBy(std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Timer::_countsPerSecond
            symbol_sources:
            - src/mongo/util/timer.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ChunkType::name
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::sleepmillis(long long)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::CollectionType::DEPRECATED_lastmod
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::CollectionType::keyPattern
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::ShardConnection::sync()
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::serverID
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::PseudoRandom::nextInt32()
            symbol_sources:
            - src/mongo/platform/random.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::DBConnectionPool::get(std::string const&, double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::grid
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::CollectionType::unique
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::Grid::shouldBalance(std::string const&, mongo::BSONObj*)
                const
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::WriteConcernOptions::AllConfigs
            symbol_sources:
            - src/mongo/db/write_concern_options.cpp
        -   symbol_name: mongo::ConfigServer::logChange(std::string const&, std::string
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::LiteParsedQuery::cmdOptionMaxTimeMS
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ShardKeyPattern::toString() const
            symbol_sources:
            - src/mongo/s/shardkey.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::configServer
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Shard::reloadShardInfo()
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::Shard::reset(std::string const&)
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::DistributedLock::DistributedLock(mongo::ConnectionString
                const&, std::string const&, unsigned long long, bool)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::DBException::traceIfNeeded(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ShardKeyPattern::ShardKeyPattern(mongo::BSONObj)
            symbol_sources:
            - src/mongo/s/shardkey.cpp
        -   symbol_name: mongo::Shard::_setAddr(std::string const&)
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::lastError
            symbol_sources:
            - src/mongo/db/lasterror.cpp
        -   symbol_name: typeinfo for mongo::UserException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::KeyPattern::isSpecial() const
            symbol_sources:
            - src/mongo/db/keypattern.cpp
        -   symbol_name: mongo::CollectionType::ns
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::FieldRange::universal() const
            symbol_sources:
            - src/mongo/db/queryutil.cpp
        -   symbol_name: mongo::ConfigServer::allUp()
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::ChunkType::DEPRECATED_lastmod
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::causedBy(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::isConfigServerConsistent()
            symbol_sources:
            - src/mongo/s/config_server_checker_service.cpp
        -   symbol_name: mongo::DBException::toString() const
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::ChunkType::ns
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: vtable for mongo::UserException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::StartupTest::~StartupTest()
            symbol_sources:
            - src/mongo/util/startup_test.cpp
        -   symbol_name: mongo::ChunkType::shard
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::curTimeMicros64()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::ConnectionString::_finishInit()
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::DistributedLock::unlock(mongo::BSONObj*)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::FieldRangeSetPair::operator&=(mongo::FieldRangeSetPair
                const&)
            symbol_sources:
            - src/mongo/db/queryutil.cpp
        -   symbol_name: mongo::ConnectionString::_fillServers(std::string)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::OrRangeGenerator::OrRangeGenerator(char const*, mongo::BSONObj
                const&, bool)
            symbol_sources:
            - src/mongo/db/queryutil.cpp
        -   symbol_name: mongo::SettingsType::chunksize
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: mongo::Query::sort(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::ScopedDbConnection::~ScopedDbConnection()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ShardKeyPattern::hasShardKey(mongo::BSONObj const&)
                const
            symbol_sources:
            - src/mongo/s/shardkey.cpp
        -   symbol_name: mongo::clusterUpdate(std::string const&, mongo::BSONObj const&,
                mongo::BSONObj const&, bool, bool, mongo::BSONObj const&, mongo::BatchedCommandResponse*)
            symbol_sources:
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::Grid::getConfigSetting(std::string const&) const
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::OID::init()
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ChunkType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::FieldRangeSet::getSpecial() const
            symbol_sources:
            - src/mongo/db/queryutil.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::KeyPattern::extractSingleKey(mongo::BSONObj const&)
                const
            symbol_sources:
            - src/mongo/db/keypattern.cpp
    -   file_name: src/mongo/s/chunk.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/chunk_diff-inl.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/chunk_diff.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/chunk_diff_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
    -   file_name: src/mongo/s/chunk_manager_targeter.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ChunkManagerTargeter::init(mongo::NamespaceString
                const&)
            symbol_uses:
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: vtable for mongo::ChunkManagerTargeter
            symbol_uses:
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::ChunkManagerTargeter::getStats() const
            symbol_uses:
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::ChunkManagerTargeter::ChunkManagerTargeter()
            symbol_uses:
            - src/mongo/s/cluster_write.cpp
        file_dependencies:
        -   symbol_name: mongo::Grid::getDBConfig(mongo::StringData const&, bool,
                std::string const&)
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::BatchedUpdateDocument::getUpdateExpr() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_update_document.cpp
        -   symbol_name: mongo::DBConfig::getChunkManagerIfExists(std::string const&,
                bool, bool)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::getGtLtOp(mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::ChunkManager::getAllShards(std::set<mongo::Shard,
                std::less<mongo::Shard>, std::allocator<mongo::Shard> >&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: boost::detail::set_tss_data(void const*, boost::shared_ptr<boost::detail::tss_cleanup_function>,
                void*, bool)
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::ChunkManager::getVersion(mongo::Shard const&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::BatchedDeleteDocument::getQuery() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_delete_document.cpp
        -   symbol_name: mongo::BatchedUpdateDocument::getUpsert() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_update_document.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::grid
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::BatchedUpdateDocument::getMulti() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_update_document.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ChunkManager::getVersion(mongo::StringData const&)
                const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::detail::get_tss_data(void const*)
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::BatchedDeleteDocument::getLimit() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_delete_document.cpp
        -   symbol_name: mongo::DBConfig::reload()
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::causedBy(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Backoff::nextSleepMillis()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::ChunkManager::getShardsForQuery(std::set<mongo::Shard,
                std::less<mongo::Shard>, std::allocator<mongo::Shard> >&, mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::BatchedUpdateDocument::getQuery() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_update_document.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ChunkManager::getVersion() const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::ChunkManager::findChunkForDoc(mongo::BSONObj const&)
                const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::DBConfig::getChunkManagerOrPrimary(std::string const&,
                boost::shared_ptr<mongo::ChunkManager const>&, boost::shared_ptr<mongo::Shard>&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::ChunkManager::hasShardKey(mongo::BSONObj const&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/s/chunk_manager_targeter.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/chunk_version.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/chunk_version_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::OID::init()
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/cluster_client_internal.cpp
        file_executables:
        - test
        - mongos
        file_interface:
        -   symbol_name: mongo::_safeCursor(std::auto_ptr<mongo::DBClientCursor>)
            symbol_uses:
            - src/mongo/s/config_upgrade.cpp
            - src/mongo/s/config_upgrade_helpers.cpp
        -   symbol_name: mongo::logConfigChange(mongo::ConnectionString const&, std::string
                const&, std::string const&, std::string const&, mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/s/config_upgrade.cpp
        -   symbol_name: mongo::checkClusterMongoVersions(mongo::ConnectionString
                const&, std::string const&)
            symbol_uses:
            - src/mongo/s/commands/auth_schema_upgrade_s.cpp
            - src/mongo/dbtests/config_upgrade_tests.cpp
            - src/mongo/s/config_upgrade_helpers.cpp
        file_dependencies:
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::clusterInsert(std::string const&, mongo::BSONObj const&,
                mongo::BSONObj const&, mongo::BatchedCommandResponse*)
            symbol_sources:
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBClientWithCommands::createCollection(std::string
                const&, long long, bool, int, mongo::BSONObj*)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::CollectionType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ShardType::~ShardType()
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::ConnectionString::parse(std::string const&, std::string&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::causedBy(std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBClientWithCommands::getLastError(bool, bool, int,
                int)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChangelogType::~ChangelogType()
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: mongo::DBException::convertExceptionCode(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::jsTime()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::versionCmp(mongo::StringData, mongo::StringData)
            symbol_sources:
            - src/mongo/util/stringutils.cpp
        -   symbol_name: mongo::ChangelogType::ChangelogType()
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::ShardType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::ShardType::ShardType()
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WriteConcernOptions::AllConfigs
            symbol_sources:
            - src/mongo/db/write_concern_options.cpp
        -   symbol_name: mongo::ChangelogType::toBSON() const
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBConnectionPool::get(mongo::ConnectionString const&,
                double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::MongosType::mongoVersion
            symbol_sources:
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChangelogType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: mongo::terseCurrentTime(bool)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::ShardType::isValid(std::string*) const
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::ShardType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::ChunkType::~ChunkType()
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::causedBy(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChunkType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::ChunkType::ns
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::MongosType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::ChunkType::ChunkType()
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::MongosType::~MongosType()
            symbol_sources:
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::getHostNameCached()
            symbol_sources:
            - src/mongo/util/net/sock.cpp
        -   symbol_name: mongo::CollectionType::dropped
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ConnectionString::_finishInit()
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::CollectionType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::ChunkType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::CollectionType::isValid(std::string*) const
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::DBClientWithCommands::getLastErrorString(mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::MongosType::MongosType()
            symbol_sources:
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::MongosType::parseBSON(mongo::BSONObj const&, std::string*)
            symbol_sources:
            - src/mongo/s/type_mongos.cpp
        -   symbol_name: mongo::ChunkType::isValid(std::string*) const
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::CollectionType::~CollectionType()
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::OID::init()
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::CollectionType::CollectionType()
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/s/cluster_client_internal.h
        file_executables:
        - test
        - mongos
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/cluster_write.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::clusterDelete(std::string const&, mongo::BSONObj const&,
                int, mongo::BSONObj const&, mongo::BatchedCommandResponse*)
            symbol_uses:
            - src/mongo/db/auth/authz_manager_external_state_s.cpp
            - src/mongo/s/config.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::ClusterWriterStats::hasShardStats() const
            symbol_uses:
            - src/mongo/s/commands/cluster_write_cmd.cpp
        -   symbol_name: mongo::ClusterWriterStats::getShardStats() const
            symbol_uses:
            - src/mongo/s/commands/cluster_write_cmd.cpp
        -   symbol_name: mongo::ClusterWriter::write(mongo::BatchedCommandRequest
                const&, mongo::BatchedCommandResponse*)
            symbol_uses:
            - src/mongo/s/commands/cluster_write_cmd.cpp
        -   symbol_name: mongo::clusterCreateIndex(std::string const&, mongo::BSONObj,
                bool, mongo::BSONObj const&, mongo::BatchedCommandResponse*)
            symbol_uses:
            - src/mongo/db/auth/authz_manager_external_state_s.cpp
            - src/mongo/s/config.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/commands_admin.cpp
        -   symbol_name: mongo::ClusterWriter::ClusterWriter(bool, int)
            symbol_uses:
            - src/mongo/s/commands/cluster_write_cmd.cpp
        -   symbol_name: mongo::ClusterWriter::getStats()
            symbol_uses:
            - src/mongo/s/commands/cluster_write_cmd.cpp
        -   symbol_name: mongo::clusterInsert(std::string const&, mongo::BSONObj const&,
                mongo::BSONObj const&, mongo::BatchedCommandResponse*)
            symbol_uses:
            - src/mongo/db/auth/authz_manager_external_state_s.cpp
            - src/mongo/s/config.cpp
            - src/mongo/s/cluster_client_internal.cpp
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::clusterUpdate(std::string const&, mongo::BSONObj const&,
                mongo::BSONObj const&, bool, bool, mongo::BSONObj const&, mongo::BatchedCommandResponse*)
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/s/config_upgrade_v0_to_v5.cpp
            - src/mongo/db/auth/authz_manager_external_state_s.cpp
            - src/mongo/s/config_upgrade_helpers.cpp
        file_dependencies:
        -   symbol_name: mongo::Grid::getDBConfig(mongo::StringData const&, bool,
                std::string const&)
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::WriteErrorDetail::getErrMessage() const
            symbol_sources:
            - src/mongo/s/write_ops/write_error_detail.cpp
        -   symbol_name: mongo::BatchWriteExec::BatchWriteExec(mongo::NSTargeter*,
                mongo::ShardResolver*, mongo::MultiCommandDispatch*)
            symbol_sources:
            - src/mongo/s/write_ops/batch_write_exec.cpp
        -   symbol_name: mongo::BatchedDeleteDocument::setLimit(int)
            symbol_sources:
            - src/mongo/s/write_ops/batched_delete_document.cpp
        -   symbol_name: mongo::ChunkManagerTargeter::ChunkManagerTargeter()
            symbol_sources:
            - src/mongo/s/chunk_manager_targeter.cpp
        -   symbol_name: mongo::BatchedCommandRequest::isVerboseWC() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_request.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BatchedCommandResponse::getOk() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: mongo::BatchedCommandRequest::setWriteConcern(mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_request.cpp
        -   symbol_name: mongo::BatchedCommandRequest::getWriteConcern() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_request.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::BatchedCommandRequest::getTargetingNS() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_request.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WriteErrorDetail::getErrCode() const
            symbol_sources:
            - src/mongo/s/write_ops/write_error_detail.cpp
        -   symbol_name: mongo::BatchedUpdateRequest::addToUpdates(mongo::BatchedUpdateDocument*)
            symbol_sources:
            - src/mongo/s/write_ops/batched_update_request.cpp
        -   symbol_name: mongo::BatchedCommandResponse::setOk(int)
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: vtable for mongo::DBClientMultiCommand
            symbol_sources:
            - src/mongo/s/dbclient_multi_command.cpp
        -   symbol_name: mongo::BatchedCommandRequest::isWriteConcernSet() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_request.cpp
        -   symbol_name: mongo::BatchedCommandResponse::setErrMessage(mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: mongo::BatchedDeleteRequest::setWriteConcern(mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/s/write_ops/batched_delete_request.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BatchedDeleteRequest::BatchedDeleteRequest()
            symbol_sources:
            - src/mongo/s/write_ops/batched_delete_request.cpp
        -   symbol_name: mongo::BatchedInsertRequest::BatchedInsertRequest()
            symbol_sources:
            - src/mongo/s/write_ops/batched_insert_request.cpp
        -   symbol_name: mongo::DBClientMultiCommand::~DBClientMultiCommand()
            symbol_sources:
            - src/mongo/s/dbclient_multi_command.cpp
        -   symbol_name: mongo::BatchedCommandResponse::BatchedCommandResponse()
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: mongo::grid
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::ConfigCoordinator::executeBatch(mongo::BatchedCommandRequest
                const&, mongo::BatchedCommandResponse*, bool)
            symbol_sources:
            - src/mongo/s/write_ops/config_coordinator.cpp
        -   symbol_name: mongo::WCErrorDetail::getErrMessage() const
            symbol_sources:
            - src/mongo/s/write_ops/wc_error_detail.cpp
        -   symbol_name: mongo::BatchedCommandResponse::setErrCode(int)
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: mongo::BatchedDeleteDocument::BatchedDeleteDocument()
            symbol_sources:
            - src/mongo/s/write_ops/batched_delete_document.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::BatchedCommandResponse::getErrDetails() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: mongo::ChunkManagerTargeter::getStats() const
            symbol_sources:
            - src/mongo/s/chunk_manager_targeter.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ConfigCoordinator::ConfigCoordinator(mongo::MultiCommandDispatch*,
                std::vector<mongo::ConnectionString, std::allocator<mongo::ConnectionString>
                > const&)
            symbol_sources:
            - src/mongo/s/write_ops/config_coordinator.cpp
        -   symbol_name: mongo::WCErrorDetail::getErrCode() const
            symbol_sources:
            - src/mongo/s/write_ops/wc_error_detail.cpp
        -   symbol_name: mongo::configServer
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BatchWriteExec::executeBatch(mongo::BatchedCommandRequest
                const&, mongo::BatchedCommandResponse*)
            symbol_sources:
            - src/mongo/s/write_ops/batch_write_exec.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::BatchedDeleteRequest::addToDeletes(mongo::BatchedDeleteDocument*)
            symbol_sources:
            - src/mongo/s/write_ops/batched_delete_request.cpp
        -   symbol_name: mongo::BatchWriteExec::releaseStats()
            symbol_sources:
            - src/mongo/s/write_ops/batch_write_exec.cpp
        -   symbol_name: mongo::BatchedCommandResponse::getErrMessage() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: mongo::BatchedDeleteDocument::setQuery(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/s/write_ops/batched_delete_document.cpp
        -   symbol_name: mongo::Chunk::ShouldAutoSplit
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::BatchedCommandRequest::isInsertIndexRequest() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_request.cpp
        -   symbol_name: mongo::BatchedUpdateDocument::setUpdateExpr(mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/s/write_ops/batched_update_document.cpp
        -   symbol_name: mongo::BatchedCommandResponse::isErrDetailsSet() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: mongo::Chunk::splitIfShould(long) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::BatchedUpdateDocument::setUpsert(bool)
            symbol_sources:
            - src/mongo/s/write_ops/batched_update_document.cpp
        -   symbol_name: vtable for mongo::DBClientShardResolver
            symbol_sources:
            - src/mongo/s/dbclient_shard_resolver.cpp
        -   symbol_name: mongo::BatchedUpdateDocument::setQuery(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/s/write_ops/batched_update_document.cpp
        -   symbol_name: mongo::BatchedUpdateRequest::BatchedUpdateRequest()
            symbol_sources:
            - src/mongo/s/write_ops/batched_update_request.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::causedBy(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::BatchedCommandRequest
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_request.cpp
        -   symbol_name: mongo::BatchedUpdateRequest::setWriteConcern(mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/s/write_ops/batched_update_request.cpp
        -   symbol_name: mongo::BatchedCommandRequest::sizeWriteOps() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_request.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: vtable for mongo::ChunkManagerTargeter
            symbol_sources:
            - src/mongo/s/chunk_manager_targeter.cpp
        -   symbol_name: mongo::BatchedCommandResponse::~BatchedCommandResponse()
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ConnectionString::_finishInit()
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::BatchedCommandResponse::getErrCode() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: mongo::BatchedUpdateDocument::setMulti(bool)
            symbol_sources:
            - src/mongo/s/write_ops/batched_update_document.cpp
        -   symbol_name: mongo::BatchedCommandResponse::isWriteConcernErrorSet() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: mongo::ConnectionString::_fillServers(std::string)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::BatchedCommandRequest::getNS() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_request.cpp
        -   symbol_name: mongo::BatchedUpdateDocument::BatchedUpdateDocument()
            symbol_sources:
            - src/mongo/s/write_ops/batched_update_document.cpp
        -   symbol_name: mongo::BatchedInsertRequest::addToDocuments(mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/s/write_ops/batched_insert_request.cpp
        -   symbol_name: mongo::DBConfig::getChunkManagerOrPrimary(std::string const&,
                boost::shared_ptr<mongo::ChunkManager const>&, boost::shared_ptr<mongo::Shard>&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::BatchedCommandResponse::setN(long long)
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: mongo::BatchedCommandResponse::getWriteConcernError() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: mongo::BatchedCommandRequest::setNS(mongo::StringData const&)
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_request.cpp
        -   symbol_name: mongo::ChunkManager::findIntersectingChunk(mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::ChunkManagerTargeter::init(mongo::NamespaceString
                const&)
            symbol_sources:
            - src/mongo/s/chunk_manager_targeter.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/s/cluster_write.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/commands/auth_schema_upgrade_s.cpp
        file_executables:
        - mongos
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::CmdAuthSchemaUpgrade::CmdAuthSchemaUpgrade()
            symbol_sources:
            - src/mongo/db/commands/user_management_commands.cpp
        -   symbol_name: mongo::Shard::getAllShards(std::vector<mongo::Shard, std::allocator<mongo::Shard>
                >&)
            symbol_sources:
            - src/mongo/s/shard.cpp
            - src/mongo/client/clientAndShell.cpp
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ConnectionString::_finishInit()
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Command::getStatusFromCommandResult(mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::CmdAuthSchemaUpgrade::slaveOk() const
            symbol_sources:
            - src/mongo/db/commands/user_management_commands.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Command::redactForLogging(mongo::mutablebson::Document*)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ConnectionString::_fillServers(std::string)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::configServer
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::AuthzDocumentsUpdateGuard::tryLock(mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/db/auth/authz_documents_update_guard.cpp
        -   symbol_name: mongo::AuthzDocumentsUpdateGuard::AuthzDocumentsUpdateGuard(mongo::AuthorizationManager*)
            symbol_sources:
            - src/mongo/db/auth/authz_documents_update_guard.cpp
        -   symbol_name: mongo::Command::parseNs(std::string const&, mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::CmdAuthSchemaUpgrade::checkAuthForCommand(mongo::ClientBasic*,
                std::string const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/commands/user_management_commands.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::getGlobalAuthorizationManager()
            symbol_sources:
            - src/mongo/db/auth/authorization_manager_global.cpp
        -   symbol_name: mongo::CmdAuthSchemaUpgrade::adminOnly() const
            symbol_sources:
            - src/mongo/db/commands/user_management_commands.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Command::appendCommandStatus(mongo::BSONObjBuilder&,
                mongo::Status const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::AuthzDocumentsUpdateGuard::~AuthzDocumentsUpdateGuard()
            symbol_sources:
            - src/mongo/db/auth/authz_documents_update_guard.cpp
        -   symbol_name: mongo::ScopedDbConnection::~ScopedDbConnection()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBConnectionPool::get(mongo::ConnectionString const&,
                double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::checkClusterMongoVersions(mongo::ConnectionString
                const&, std::string const&)
            symbol_sources:
            - src/mongo/s/cluster_client_internal.cpp
        -   symbol_name: mongo::fassertFailed(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::AuthorizationManager::upgradeSchema(int, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/auth/authorization_manager.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CmdAuthSchemaUpgrade::help(std::basic_stringstream<char,
                std::char_traits<char>, std::allocator<char> >&) const
            symbol_sources:
            - src/mongo/db/commands/user_management_commands.cpp
        -   symbol_name: mongo::CmdAuthSchemaUpgrade::locktype() const
            symbol_sources:
            - src/mongo/db/commands/user_management_commands.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::auth::parseAuthSchemaUpgradeStepCommand(mongo::BSONObj
                const&, std::string const&, int*, bool*, mongo::BSONObj*)
            symbol_sources:
            - src/mongo/db/auth/user_management_commands_parser.cpp
        -   symbol_name: mongo::CmdAuthSchemaUpgrade::~CmdAuthSchemaUpgrade()
            symbol_sources:
            - src/mongo/db/commands/user_management_commands.cpp
        -   symbol_name: mongo::Command::stopIndexBuilds(std::string const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: typeinfo for mongo::CmdAuthSchemaUpgrade
            symbol_sources:
            - src/mongo/db/commands/user_management_commands.cpp
        -   symbol_name: mongo::DBException::convertExceptionCode(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/s/commands/cluster_index_filter_cmd.cpp
        file_executables:
        - mongos
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::ActionType::planCacheIndexFilter
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::Strategy::commandOp(std::string const&, mongo::BSONObj
                const&, int, std::string const&, mongo::BSONObj const&, std::vector<mongo::Strategy::CommandResult,
                std::allocator<mongo::Strategy::CommandResult> >*)
            symbol_sources:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::STRATEGY
            symbol_sources:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::Command::parseResourcePattern(std::string const&,
                mongo::BSONObj const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: vtable for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: typeinfo for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Command::parseNs(std::string const&, mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::_makeStringVector(int, ...)
            symbol_sources:
            - src/mongo/base/make_string_vector.cpp
        -   symbol_name: mongo::Command::redactForLogging(mongo::mutablebson::Document*)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::fassertFailed(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::AuthorizationSession::isAuthorizedForActionsOnResource(mongo::ResourcePattern
                const&, mongo::ActionType)
            symbol_sources:
            - src/mongo/db/auth/authorization_session.cpp
        -   symbol_name: mongo::ClientBasic::getAuthorizationSession() const
            symbol_sources:
            - src/mongo/db/client_basic.cpp
        -   symbol_name: mongo::Command::Command(mongo::StringData, bool, mongo::StringData)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Command::stopIndexBuilds(std::string const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::GlobalInitializerRegisterer::GlobalInitializerRegisterer(std::string
                const&, boost::function<mongo::Status (mongo::InitializerContext*)>
                const&, std::vector<std::string, std::allocator<std::string> > const&,
                std::vector<std::string, std::allocator<std::string> > const&)
            symbol_sources:
            - src/mongo/base/global_initializer_registerer.cpp
    -   file_name: src/mongo/s/commands/cluster_merge_chunks_cmd.cpp
        file_executables:
        - mongos
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::Grid::getDBConfig(mongo::StringData const&, bool,
                std::string const&)
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Command::parseNsFullyQualified(std::string const&,
                mongo::BSONObj const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBConfig::getChunkManager(std::string const&, bool,
                bool)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::DBConfig::getChunkManagerIfExists(std::string const&,
                bool, bool)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::causedBy(std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::GlobalInitializerRegisterer::GlobalInitializerRegisterer(std::string
                const&, boost::function<mongo::Status (mongo::InitializerContext*)>
                const&, std::vector<std::string, std::allocator<std::string> > const&,
                std::vector<std::string, std::allocator<std::string> > const&)
            symbol_sources:
            - src/mongo/base/global_initializer_registerer.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::ActionType::splitChunk
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::grid
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: typeinfo for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBConnectionPool::get(mongo::ConnectionString const&,
                double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::configServer
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Command::Command(mongo::StringData, bool, mongo::StringData)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::fassertFailed(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBConfig::reload()
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::AuthorizationSession::isAuthorizedForActionsOnResource(mongo::ResourcePattern
                const&, mongo::ActionType)
            symbol_sources:
            - src/mongo/db/auth/authorization_session.cpp
        -   symbol_name: mongo::ClientBasic::getAuthorizationSession() const
            symbol_sources:
            - src/mongo/db/client_basic.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: vtable for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ChunkManager::findChunkForDoc(mongo::BSONObj const&)
                const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONElement, mongo::BSONField<mongo::BSONObj>
                const&, mongo::BSONObj*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::ScopedDbConnection::~ScopedDbConnection()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::_makeStringVector(int, ...)
            symbol_sources:
            - src/mongo/base/make_string_vector.cpp
        -   symbol_name: mongo::Command::redactForLogging(mongo::mutablebson::Document*)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Command::stopIndexBuilds(std::string const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::DBConfig::isSharded(std::string const&)
            symbol_sources:
            - src/mongo/s/config.cpp
    -   file_name: src/mongo/s/commands/cluster_plan_cache_cmd.cpp
        file_executables:
        - mongos
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::Command::parseResourcePattern(std::string const&,
                mongo::BSONObj const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::Strategy::commandOp(std::string const&, mongo::BSONObj
                const&, int, std::string const&, mongo::BSONObj const&, std::vector<mongo::Strategy::CommandResult,
                std::allocator<mongo::Strategy::CommandResult> >*)
            symbol_sources:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::ActionType::planCacheWrite
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::STRATEGY
            symbol_sources:
            - src/mongo/s/strategy.cpp
        -   symbol_name: vtable for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ActionType::planCacheRead
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::Command::parseNs(std::string const&, mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::_makeStringVector(int, ...)
            symbol_sources:
            - src/mongo/base/make_string_vector.cpp
        -   symbol_name: mongo::Command::redactForLogging(mongo::mutablebson::Document*)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::fassertFailed(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::AuthorizationSession::isAuthorizedForActionsOnResource(mongo::ResourcePattern
                const&, mongo::ActionType)
            symbol_sources:
            - src/mongo/db/auth/authorization_session.cpp
        -   symbol_name: typeinfo for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ClientBasic::getAuthorizationSession() const
            symbol_sources:
            - src/mongo/db/client_basic.cpp
        -   symbol_name: mongo::Command::Command(mongo::StringData, bool, mongo::StringData)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Command::stopIndexBuilds(std::string const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::GlobalInitializerRegisterer::GlobalInitializerRegisterer(std::string
                const&, boost::function<mongo::Status (mongo::InitializerContext*)>
                const&, std::vector<std::string, std::allocator<std::string> > const&,
                std::vector<std::string, std::allocator<std::string> > const&)
            symbol_sources:
            - src/mongo/base/global_initializer_registerer.cpp
    -   file_name: src/mongo/s/commands_admin.cpp
        file_executables:
        - mongos
        file_interface:
        -   symbol_name: mongo::CmdShutdown::help(std::basic_stringstream<char, std::char_traits<char>,
                std::allocator<char> >&) const
            symbol_uses:
            - src/mongo/db/commands/shutdown.cpp
        -   symbol_name: mongo::CmdShutdown::run(std::string const&, mongo::BSONObj&,
                int, std::string&, mongo::BSONObjBuilder&, bool)
            symbol_uses:
            - src/mongo/db/commands/shutdown.cpp
        file_dependencies:
        -   symbol_name: mongo::Grid::getDBConfig(mongo::StringData const&, bool,
                std::string const&)
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::clusterDelete(std::string const&, mongo::BSONObj const&,
                int, mongo::BSONObj const&, mongo::BatchedCommandResponse*)
            symbol_sources:
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::DBClientWithCommands::simpleCommand(std::string const&,
                mongo::BSONObj*, std::string const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::enforceLegacyWriteConcern(mongo::MultiCommandDispatch*,
                mongo::StringData const&, mongo::BSONObj const&, std::map<mongo::ConnectionString,
                mongo::HostOpTime, mongo::ConnectionStringComp, std::allocator<std::pair<mongo::ConnectionString
                const, mongo::HostOpTime> > > const&, std::vector<mongo::LegacyWCResponse,
                std::allocator<mongo::LegacyWCResponse> >*)
            symbol_sources:
            - src/mongo/s/write_ops/batch_downconvert.cpp
        -   symbol_name: mongo::IndexNames::findPluginName(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/index_names.cpp
        -   symbol_name: mongo::ActionSet::addAction(mongo::ActionType const&)
            symbol_sources:
            - src/mongo/db/auth/action_set.cpp
        -   symbol_name: mongo::ActionType::addShard
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::tlogLevel
            symbol_sources:
            - src/mongo/util/log.cpp
        -   symbol_name: mongo::DistributedLock::lock_try(std::string const&, bool,
                mongo::BSONObj*, double)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: vtable for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ShardType::name
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::ActionType::getShardVersion
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::Privilege::Privilege(mongo::ResourcePattern const&,
                mongo::ActionSet const&)
            symbol_sources:
            - src/mongo/db/auth/privilege.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::KeyPattern::KeyPattern(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/keypattern.cpp
        -   symbol_name: mongo::Command::parseNsFullyQualified(std::string const&,
                mongo::BSONObj const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Shard::runCommand(std::string const&, mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::ConnectionString::sameLogicalEndpoint(mongo::ConnectionString
                const&) const
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBConfig::getChunkManager(std::string const&, bool,
                bool)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::ConnectionString::parse(std::string const&, std::string&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::Command::parseNs(std::string const&, mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::LastErrorHolder::get(bool)
            symbol_sources:
            - src/mongo/db/lasterror.cpp
        -   symbol_name: mongo::DBConfig::getChunkManagerIfExists(std::string const&,
                bool, bool)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::ActionType::removeShard
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::DatabaseType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_database.cpp
        -   symbol_name: mongo::ShardConnection::~ShardConnection()
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::CmdShutdown::shutdownHelper()
            symbol_sources:
            - src/mongo/db/dbcommands_generic.cpp
        -   symbol_name: mongo::clusterCreateIndex(std::string const&, mongo::BSONObj,
                bool, mongo::BSONObj const&, mongo::BatchedCommandResponse*)
            symbol_sources:
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::Timer::_countsPerSecond
            symbol_sources:
            - src/mongo/util/timer.cpp
        -   symbol_name: mongo::ShardConnection::sync()
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LastErrorHolder::disableForCommand()
            symbol_sources:
            - src/mongo/db/lasterror.cpp
        -   symbol_name: mongo::ReplicaSetMonitor::remove(std::string const&, bool)
            symbol_sources:
            - src/mongo/client/replica_set_monitor.cpp
        -   symbol_name: mongo::WriteConcernOptions::AllConfigs
            symbol_sources:
            - src/mongo/db/write_concern_options.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::WriteConcernOptions::Default
            symbol_sources:
            - src/mongo/db/write_concern_options.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::ClientBasic::getAuthorizationSession() const
            symbol_sources:
            - src/mongo/db/client_basic.cpp
        -   symbol_name: mongo::ShardType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::ConfigServer::logChange(std::string const&, std::string
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: vtable for mongo::CmdShutdown
            symbol_sources:
            - src/mongo/db/commands/shutdown.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::ActionType::splitChunk
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::Grid::flushConfig()
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::DBClientMultiCommand::~DBClientMultiCommand()
            symbol_sources:
            - src/mongo/s/dbclient_multi_command.cpp
        -   symbol_name: mongo::DBConfig::getAllShardedCollections(std::set<std::string,
                std::less<std::string>, std::allocator<std::string> >&) const
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::DBConnectionPool::get(std::string const&, double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Grid::addShard(std::string*, mongo::ConnectionString
                const&, long long, std::string&)
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::grid
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: typeinfo for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Shard::removeShard(std::string const&)
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::ShardConnection::done()
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::ClientInfo::disableForCommand()
            symbol_sources:
            - src/mongo/s/client_info.cpp
        -   symbol_name: mongo::DatabaseType::primary
            symbol_sources:
            - src/mongo/s/type_database.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ActionType::listDatabases
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::Chunk::MaxChunkSize
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::BSONArray>
                const&, mongo::BSONArray*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ActionType::netstat
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::Command::help(std::basic_stringstream<char, std::char_traits<char>,
                std::allocator<char> >&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::fassertFailed(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::ConfigServer::allUp(std::string&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Shard::reloadShardInfo()
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::ShardType::maxSize
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::Shard::reset(std::string const&)
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::DistributedLock::DistributedLock(mongo::ConnectionString
                const&, std::string const&, unsigned long long, bool)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::IndexNames::HASHED
            symbol_sources:
            - src/mongo/db/index_names.cpp
        -   symbol_name: mongo::ActionType::listShards
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::LiteParsedQuery::parseMaxTimeMSCommand(mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::ChunkManager::findIntersectingChunk(mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::DBConnectionPool::removeHost(std::string const&)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ShardKeyPattern::ShardKeyPattern(mongo::BSONObj)
            symbol_sources:
            - src/mongo/s/shardkey.cpp
        -   symbol_name: mongo::jsTime()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::ChunkManager::_printChunks() const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::Chunk::multiSplit(std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj>
                > const&, mongo::BSONObj&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::ActionType::fsync
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::lastError
            symbol_sources:
            - src/mongo/db/lasterror.cpp
        -   symbol_name: mongo::NE
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::Command::checkAuthForCommand(mongo::ClientBasic*,
                std::string const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ActionType::moveChunk
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::DBConfig::shardCollection(std::string const&, mongo::ShardKeyPattern,
                bool, std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj> >*,
                std::vector<mongo::Shard, std::allocator<mongo::Shard> >*)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::configServer
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::DBConfig::reload()
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::Chunk::containsPoint(mongo::BSONObj const&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::DatabaseType::name
            symbol_sources:
            - src/mongo/s/type_database.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::BSONObj>
                const&, mongo::BSONObj*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::causedBy(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ShardKeyPattern::isUniqueIndexCompatible(mongo::KeyPattern
                const&) const
            symbol_sources:
            - src/mongo/s/shardkey.cpp
        -   symbol_name: mongo::shardConnectionPool
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::AuthorizationSession::isAuthorizedForActionsOnResource(mongo::ResourcePattern
                const&, mongo::ActionType)
            symbol_sources:
            - src/mongo/db/auth/authorization_session.cpp
        -   symbol_name: mongo::audit::logEnableSharding(mongo::ClientBasic*, mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/db/audit.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ShardType::draining
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::fieldsMatch(mongo::BSONObj const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::audit::logShardCollection(mongo::ClientBasic*, mongo::StringData
                const&, mongo::BSONObj const&, bool)
            symbol_sources:
            - src/mongo/db/audit.cpp
        -   symbol_name: mongo::getHostNameCached()
            symbol_sources:
            - src/mongo/util/net/sock.cpp
        -   symbol_name: mongo::ShardConnection::ShardConnection(std::string const&,
                std::string const&, boost::shared_ptr<mongo::ChunkManager const>)
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::DBConfig::setPrimary(std::string const&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ChunkType::shard
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::LastError::appendSelf(mongo::BSONObjBuilder&, bool)
            symbol_sources:
            - src/mongo/db/lasterror.cpp
        -   symbol_name: mongo::Shard::getAllShards(std::vector<mongo::Shard, std::allocator<mongo::Shard>
                >&)
            symbol_sources:
            - src/mongo/s/shard.cpp
            - src/mongo/client/clientAndShell.cpp
        -   symbol_name: mongo::curTimeMicros64()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::ConnectionString::_finishInit()
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::DistributedLock::unlock(mongo::BSONObj*)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::audit::logRemoveShard(mongo::ClientBasic*, mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/db/audit.cpp
        -   symbol_name: mongo::Command::Command(mongo::StringData, bool, mongo::StringData)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::audit::logAddShard(mongo::ClientBasic*, mongo::StringData
                const&, std::string const&, long long)
            symbol_sources:
            - src/mongo/db/audit.cpp
        -   symbol_name: mongo::Grid::knowAboutShard(std::string const&) const
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::Grid::allowLocalHost() const
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::Chunk::singleSplit(bool, mongo::BSONObj&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::ActionType::flushRouterConfig
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::ConnectionString::_fillServers(std::string)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::ActionType::closeAllDatabases
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::Chunk::moveAndCommit(mongo::Shard const&, long long,
                bool, bool, int, mongo::BSONObj&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::ChunkManager::getVersion() const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::ShardConnection::_finishInit()
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::ChunkManager::findChunkForDoc(mongo::BSONObj const&)
                const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::DBConfig::enableSharding(bool)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::ClientBasic::getCurrent()
            symbol_sources:
            - src/mongo/s/client_info.cpp
            - src/mongo/db/client.cpp
            - src/mongo/client/clientAndShell.cpp
        -   symbol_name: vtable for mongo::DBClientMultiCommand
            symbol_sources:
            - src/mongo/s/dbclient_multi_command.cpp
        -   symbol_name: mongo::Command::appendCommandStatus(mongo::BSONObjBuilder&,
                mongo::Status const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ScopedDbConnection::~ScopedDbConnection()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ClientInfo::get(mongo::AbstractMessagingPort*)
            symbol_sources:
            - src/mongo/s/client_info.cpp
        -   symbol_name: mongo::clusterUpdate(std::string const&, mongo::BSONObj const&,
                mongo::BSONObj const&, bool, bool, mongo::BSONObj const&, mongo::BatchedCommandResponse*)
            symbol_sources:
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::ActionType::enableSharding
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::Command::redactForLogging(mongo::mutablebson::Document*)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ChunkType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBClientShardResolver::findMaster(std::string, mongo::ConnectionString*)
            symbol_sources:
            - src/mongo/s/dbclient_shard_resolver.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Command::stopIndexBuilds(std::string const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::DBConfig::isSharded(std::string const&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::BSONObj::isPrefixOf(mongo::BSONObj const&) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
    -   file_name: src/mongo/s/commands_public.cpp
        file_executables:
        - mongos
        file_interface:
        -   symbol_name: mongo::Command::runAgainstRegistered(char const*, mongo::BSONObj&,
                mongo::BSONObjBuilder&, int)
            symbol_uses:
            - src/mongo/s/strategy.cpp
        file_dependencies:
        -   symbol_name: mongo::ActionType::collStats
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::Grid::getDBConfig(mongo::StringData const&, bool,
                std::string const&)
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: typeinfo for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::VersionManager::forceRemoteCheckShardVersionCB(std::string
                const&)
            symbol_sources:
            - src/mongo/s/version_manager.cpp
            - src/mongo/s/default_version.cpp
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Future::spawnCommand(std::string const&, std::string
                const&, mongo::BSONObj const&, int, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::DistributedLock::lock_try(std::string const&, bool,
                mongo::BSONObj*, double)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: vtable for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::ActionType::dropDatabase
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: vtable for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::CursorCache::storeRef(std::string const&, long long,
                std::string const&)
            symbol_sources:
            - src/mongo/s/cursors.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ActionType::insert
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::Privilege::Privilege(mongo::ResourcePattern const&,
                mongo::ActionSet const&)
            symbol_sources:
            - src/mongo/db/auth/privilege.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: mongo::cursorCache
            symbol_sources:
            - src/mongo/s/cursors.cpp
        -   symbol_name: mongo::ValueStorage::putDocument(mongo::Document const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::ActionType::reIndex
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::Future::CommandResult::join(int)
            symbol_sources:
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::Command::parseNsFullyQualified(std::string const&,
                mongo::BSONObj const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Pipeline::parseCommand(std::string&, mongo::BSONObj
                const&, boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_sources:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::ConnectionString::sameLogicalEndpoint(mongo::ConnectionString
                const&) const
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::ChunkManager::findIntersectingChunk(mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::Command::appendCommandStatus(mongo::BSONObjBuilder&,
                bool, std::string const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Pipeline::run(mongo::BSONObjBuilder&)
            symbol_sources:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBConfig::getChunkManager(std::string const&, bool,
                bool)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::DocumentSourceCommandShards::create(std::vector<mongo::Strategy::CommandResult,
                std::allocator<mongo::Strategy::CommandResult> > const&, boost::intrusive_ptr<mongo::ExpressionContext>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source_command_shards.cpp
        -   symbol_name: mongo::ChunkManager::findChunkForDoc(mongo::BSONObj const&)
                const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::invariantFailed(char const*, char const*, unsigned
                int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::ChunkManager::getAllShards(std::set<mongo::Shard,
                std::less<mongo::Shard>, std::allocator<mongo::Shard> >&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::DBConfig::getChunkManagerIfExists(std::string const&,
                bool, bool)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::Pipeline::addRequiredPrivileges(mongo::Command*, std::string
                const&, mongo::BSONObj, std::vector<mongo::Privilege, std::allocator<mongo::Privilege>
                >*)
            symbol_sources:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::versionManager
            symbol_sources:
            - src/mongo/s/version_manager.cpp
            - src/mongo/s/default_version.cpp
        -   symbol_name: mongo::ShardConnection::~ShardConnection()
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::DocumentStorage::clone() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::causedBy(std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Pipeline::addInitialSource(boost::intrusive_ptr<mongo::DocumentSource>)
            symbol_sources:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::Timer::_countsPerSecond
            symbol_sources:
            - src/mongo/util/timer.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::Pipeline::canRunInMongos() const
            symbol_sources:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::find_and_modify::addPrivilegesRequiredForFindAndModify(mongo::Command*,
                std::string const&, mongo::BSONObj const&, std::vector<mongo::Privilege,
                std::allocator<mongo::Privilege> >*)
            symbol_sources:
            - src/mongo/db/commands/find_and_modify_common.cpp
        -   symbol_name: mongo::GlobalInitializerRegisterer::GlobalInitializerRegisterer(std::string
                const&, boost::function<mongo::Status (mongo::InitializerContext*)>
                const&, std::vector<std::string, std::allocator<std::string> > const&,
                std::vector<std::string, std::allocator<std::string> > const&)
            symbol_sources:
            - src/mongo/base/global_initializer_registerer.cpp
        -   symbol_name: mongo::ShardConnection::done()
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::Privilege::Privilege(mongo::ResourcePattern const&,
                mongo::ActionType const&)
            symbol_sources:
            - src/mongo/db/auth/privilege.cpp
        -   symbol_name: mongo::Value::Value(mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::sleepmillis(long long)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::addRef() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::DBConfig::getShard(std::string const&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::Command::parseResourcePattern(std::string const&,
                mongo::BSONObj const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::STRATEGY
            symbol_sources:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::ActionType::repairDatabase
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::Command::execCommandClientBasic(mongo::Command*, mongo::ClientBasic&,
                int, char const*, mongo::BSONObj&, mongo::BSONObjBuilder&, bool)
            symbol_sources:
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::release() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::DBConnectionPool::get(std::string const&, double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ActionSet::addAction(mongo::ActionType const&)
            symbol_sources:
            - src/mongo/db/auth/action_set.cpp
        -   symbol_name: mongo::DBConfig::load()
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::grid
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::DocumentStorage::findField(mongo::StringData) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: typeinfo for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ActionType::validate
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::ClientBasic::getAuthorizationSession() const
            symbol_sources:
            - src/mongo/db/client_basic.cpp
        -   symbol_name: mongo::BSONElement::Array() const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::LiteParsedQuery::cmdOptionMaxTimeMS
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::Document::toBson() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Chunk::MaxChunkSize
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBConnectionPool::get(mongo::ConnectionString const&,
                double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Command::help(std::basic_stringstream<char, std::char_traits<char>,
                std::allocator<char> >&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Grid::removeDBIfExists(mongo::DBConfig const&)
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::mr::addPrivilegesRequiredForMapReduce(mongo::Command*,
                std::string const&, mongo::BSONObj const&, std::vector<mongo::Privilege,
                std::allocator<mongo::Privilege> >*)
            symbol_sources:
            - src/mongo/db/commands/mr_common.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DistributedLock::DistributedLock(mongo::ConnectionString
                const&, std::string const&, unsigned long long, bool)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::DBException::traceIfNeeded(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Command::Command(mongo::StringData, bool, mongo::StringData)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::DBConfig::removeSharding(std::string const&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::ActionType::createCollection
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::ActionType::dropCollection
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::Pipeline::getInitialQuery() const
            symbol_sources:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::ShardKeyPattern::ShardKeyPattern(mongo::BSONObj)
            symbol_sources:
            - src/mongo/s/shardkey.cpp
        -   symbol_name: mongo::ActionType::createIndex
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::Shard::_setAddr(std::string const&)
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::Pipeline::writeExplainOps() const
            symbol_sources:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::copydb::checkAuthForCopydbCommand(mongo::ClientBasic*,
                std::string const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/commands/copydb_common.cpp
        -   symbol_name: mongo::Command::checkAuthForCommand(mongo::ClientBasic*,
                std::string const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::DBConfig::shardCollection(std::string const&, mongo::ShardKeyPattern,
                bool, std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj> >*,
                std::vector<mongo::Shard, std::allocator<mongo::Shard> >*)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::fassertFailed(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ActionType::enableProfiler
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::Command::parseNs(std::string const&, mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Pipeline::commandName
            symbol_sources:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::ActionType::collMod
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: vtable for mongo::DocumentStorage
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::causedBy(std::exception const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::Pipeline::serialize() const
            symbol_sources:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::ActionType::splitVector
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::Pipeline::splitForSharded()
            symbol_sources:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::ChunkManager::getShardsForQuery(std::set<mongo::Shard,
                std::less<mongo::Shard>, std::allocator<mongo::Shard> >&, mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::ValueStorage::putVector(mongo::RCVector const*)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::ActionType::convertToCapped
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::AuthorizationSession::isAuthorizedForActionsOnResource(mongo::ResourcePattern
                const&, mongo::ActionType)
            symbol_sources:
            - src/mongo/db/auth/authorization_session.cpp
        -   symbol_name: mongo::DBException::toString() const
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ChunkManager::drop(boost::shared_ptr<mongo::ChunkManager
                const>) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::ShardConnection::ShardConnection(std::string const&,
                std::string const&, boost::shared_ptr<mongo::ChunkManager const>)
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::DBConfig::getAllShards(std::set<mongo::Shard, std::less<mongo::Shard>,
                std::allocator<mongo::Shard> >&) const
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::ActionType::find
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::curTimeMicros64()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::ConnectionString::_finishInit()
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::Strategy::commandOp(std::string const&, mongo::BSONObj
                const&, int, std::string const&, mongo::BSONObj const&, std::vector<mongo::Strategy::CommandResult,
                std::allocator<mongo::Strategy::CommandResult> >*)
            symbol_sources:
            - src/mongo/s/strategy.cpp
        -   symbol_name: typeinfo for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::DistributedLock::unlock(mongo::BSONObj*)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::DBConfig::dropDatabase(std::string&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::ActionType::dropIndex
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::configServer
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::ShardConnection::ShardConnection(mongo::Shard const&,
                std::string const&, boost::shared_ptr<mongo::ChunkManager const>)
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::Chunk::splitIfShould(long) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::Command::findCommand(std::string const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ConnectionString::_fillServers(std::string)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::ShardConnection::_finishInit()
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::DocumentSourceMergeCursors::create(std::vector<std::pair<mongo::ConnectionString,
                long long>, std::allocator<std::pair<mongo::ConnectionString, long
                long> > > const&, boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source_merge_cursors.cpp
        -   symbol_name: mongo::ActionType::dbStats
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::DBConfig::enableSharding(bool)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::InterruptStatusMongos::status
            symbol_sources:
            - src/mongo/s/interrupt_status_mongos.cpp
        -   symbol_name: vtable for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::RoleGraph::generateUniversalPrivileges(std::vector<mongo::Privilege,
                std::allocator<mongo::Privilege> >*)
            symbol_sources:
            - src/mongo/db/auth/role_graph_builtin_roles.cpp
        -   symbol_name: mongo::DBConfig::getChunkManagerOrPrimary(std::string const&,
                boost::shared_ptr<mongo::ChunkManager const>&, boost::shared_ptr<mongo::Shard>&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::DBConfig::isSharded(std::string const&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::applySkipLimit(long long, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/queryutil.cpp
            - src/mongo/db/ops/count.cpp
        -   symbol_name: mongo::causedBy(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentStorage::appendField(mongo::StringData)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::rename_collection::checkAuthForRenameCollectionCommand(mongo::ClientBasic*,
                std::string const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/commands/rename_collection_common.cpp
        -   symbol_name: mongo::ScopedDbConnection::~ScopedDbConnection()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ClientInfo::get(mongo::AbstractMessagingPort*)
            symbol_sources:
            - src/mongo/s/client_info.cpp
        -   symbol_name: mongo::operator<<(mongo::BSONObjBuilderValueStream&, mongo::Document
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Chunk::ShouldAutoSplit
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::_makeStringVector(int, ...)
            symbol_sources:
            - src/mongo/base/make_string_vector.cpp
        -   symbol_name: mongo::Command::redactForLogging(mongo::mutablebson::Document*)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: typeinfo for mongo::DocumentSourceOut
            symbol_sources:
            - src/mongo/db/pipeline/document_source_out.cpp
        -   symbol_name: mongo::ChunkManager::getShardsForRange(std::set<mongo::Shard,
                std::less<mongo::Shard>, std::allocator<mongo::Shard> >&, mongo::BSONObj
                const&, mongo::BSONObj const&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Command::stopIndexBuilds(std::string const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ActionType::compact
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::ChunkManager::hasShardKey(mongo::BSONObj const&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::Pipeline::stitch()
            symbol_sources:
            - src/mongo/db/pipeline/pipeline.cpp
    -   file_name: src/mongo/s/config.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ConfigServer::init(std::vector<std::string, std::allocator<std::string>
                >)
            symbol_uses:
            - src/mongo/s/server.cpp
        -   symbol_name: mongo::Shard::EMPTY
            symbol_uses:
            - src/mongo/s/grid.cpp
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::configServer
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/commands/auth_schema_upgrade_s.cpp
            - src/mongo/s/shard.cpp
            - src/mongo/s/server.cpp
            - src/mongo/s/grid.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/commands/cluster_merge_chunks_cmd.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/s/cluster_write.cpp
            - src/mongo/db/auth/authz_manager_external_state_s.cpp
            - src/mongo/s/d_state.cpp
            - src/mongo/s/d_merge.cpp
            - src/mongo/s/config_server_checker_service.cpp
            - src/mongo/s/version_manager.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/dbtests/config_server_fixture.cpp
            - src/mongo/s/dbclient_shard_resolver.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::DBConfig::getChunkManager(std::string const&, bool,
                bool)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/commands/cluster_merge_chunks_cmd.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/s/version_manager.cpp
            - src/mongo/db/commands/mr.cpp
        -   symbol_name: mongo::serverID
            symbol_uses:
            - src/mongo/s/writeback_listener.cpp
            - src/mongo/s/server.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/s/version_manager.cpp
        -   symbol_name: mongo::ConfigServer::reloadSettings()
            symbol_uses:
            - src/mongo/s/server.cpp
        -   symbol_name: mongo::DBConfig::getShard(std::string const&)
            symbol_uses:
            - src/mongo/db/auth/authz_manager_external_state_s.cpp
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/request.cpp
        -   symbol_name: mongo::DBConfig::dropDatabase(std::string&)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
        -   symbol_name: mongo::ConfigServer::checkHostsAreUnique(std::vector<std::string,
                std::allocator<std::string> > const&, std::string*)
            symbol_uses:
            - src/mongo/s/config_server_tests.cpp
        -   symbol_name: mongo::DBConfig::getChunkManagerIfExists(std::string const&,
                bool, bool)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/commands/cluster_merge_chunks_cmd.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/s/chunk_manager_targeter.cpp
            - src/mongo/s/version_manager.cpp
            - src/mongo/s/request.cpp
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::DBConfig::getChunkManagerOrPrimary(std::string const&,
                boost::shared_ptr<mongo::ChunkManager const>&, boost::shared_ptr<mongo::Shard>&)
            symbol_uses:
            - src/mongo/s/chunk_manager_targeter.cpp
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/strategy.cpp
            - src/mongo/client/parallel.cpp
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::configServerPtr
            symbol_uses:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::ConfigServer::logChange(std::string const&, std::string
                const&, mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/grid.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/s/d_merge.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::DBConfig::getAllShards(std::set<mongo::Shard, std::less<mongo::Shard>,
                std::allocator<mongo::Shard> >&) const
            symbol_uses:
            - src/mongo/s/commands_public.cpp
        -   symbol_name: mongo::ConfigServer::~ConfigServer()
            symbol_uses:
            - src/mongo/s/config_server_tests.cpp
        -   symbol_name: mongo::DBConfig::getAllShardedCollections(std::set<std::string,
                std::less<std::string>, std::allocator<std::string> >&) const
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
        -   symbol_name: mongo::DBConfig::setPrimary(std::string const&)
            symbol_uses:
            - src/mongo/s/grid.cpp
            - src/mongo/s/commands_admin.cpp
        -   symbol_name: mongo::ConfigServer::init(std::string const&)
            symbol_uses:
            - src/mongo/s/d_state.cpp
            - src/mongo/dbtests/config_server_fixture.cpp
        -   symbol_name: mongo::DBConfig::enableSharding(bool)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/commands_admin.cpp
        -   symbol_name: mongo::DBConfig::removeSharding(std::string const&)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
        -   symbol_name: mongo::DBConfig::shardCollection(std::string const&, mongo::ShardKeyPattern,
                bool, std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj> >*,
                std::vector<mongo::Shard, std::allocator<mongo::Shard> >*)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/commands_admin.cpp
        -   symbol_name: mongo::DBConfig::isSharded(std::string const&)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/strategy.cpp
            - src/mongo/s/commands/cluster_merge_chunks_cmd.cpp
            - src/mongo/s/version_manager.cpp
            - src/mongo/s/request.cpp
            - src/mongo/db/commands/mr.cpp
        -   symbol_name: mongo::ConfigServer::ok(bool)
            symbol_uses:
            - src/mongo/s/server.cpp
            - src/mongo/s/config_server_checker_service.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::DBConfig::load()
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::ConfigServer::allUp()
            symbol_uses:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::ConfigServer::allUp(std::string&)
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
        -   symbol_name: mongo::DBConfig::reload()
            symbol_uses:
            - src/mongo/s/chunk_manager_targeter.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/commands/cluster_merge_chunks_cmd.cpp
            - src/mongo/client/parallel.cpp
            - src/mongo/s/version_manager.cpp
        -   symbol_name: mongo::ConfigServer::replicaSetChange(std::string const&,
                std::string const&)
            symbol_uses:
            - src/mongo/s/server.cpp
        -   symbol_name: mongo::ConfigServer::ConfigServer()
            symbol_uses:
            - src/mongo/s/config_server_tests.cpp
        file_dependencies:
        -   symbol_name: mongo::clusterDelete(std::string const&, mongo::BSONObj const&,
                int, mongo::BSONObj const&, mongo::BatchedCommandResponse*)
            symbol_sources:
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::SettingsType::key
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::clusterInsert(std::string const&, mongo::BSONObj const&,
                mongo::BSONObj const&, mongo::BatchedCommandResponse*)
            symbol_sources:
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::ShardType::host
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::DatabaseType::DEPRECATED_partitioned
            symbol_sources:
            - src/mongo/s/type_database.cpp
        -   symbol_name: mongo::hostbyname(char const*)
            symbol_sources:
            - src/mongo/util/net/sock.cpp
        -   symbol_name: mongo::Client::clientAddress(bool) const
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChunkManager::loadExistingRanges(std::string const&)
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::ShardType::name
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::SettingsType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: mongo::CollectionType::DEPRECATED_lastmodEpoch
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: pcrecpp::RE::QuoteMeta(pcrecpp::StringPiece const&)
            symbol_sources:
            - src/third_party/pcre-8.30/pcrecpp.cc
        -   symbol_name: mongo::DBClientWithCommands::createCollection(std::string
                const&, long long, bool, int, mongo::BSONObj*)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: mongo::ConnectionString::sameLogicalEndpoint(mongo::ConnectionString
                const&) const
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::ChunkType::min
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Client::initThread(char const*, mongo::AbstractMessagingPort*)
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::ChangelogType::time
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ConnectionString::parse(std::string const&, std::string&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::ChunkManager::getAllShards(std::set<mongo::Shard,
                std::less<mongo::Shard>, std::allocator<mongo::Shard> >&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::DatabaseType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_database.cpp
        -   symbol_name: mongo::ShardConnection::~ShardConnection()
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::ChangelogType::changeID
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: mongo::causedBy(std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::clusterCreateIndex(std::string const&, mongo::BSONObj,
                bool, mongo::BSONObj const&, mongo::BatchedCommandResponse*)
            symbol_sources:
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBClientWithCommands::getLastError(bool, bool, int,
                int)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DatabaseType::DEPRECATED_sharded
            symbol_sources:
            - src/mongo/s/type_database.cpp
        -   symbol_name: mongo::ShardConnection::done()
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::CollectionType::DEPRECATED_lastmod
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::Shard::setAddress(mongo::ConnectionString const&)
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::CollectionType::keyPattern
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::ShardType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::joinStringDelim(std::vector<std::string, std::allocator<std::string>
                > const&, std::string*, char)
            symbol_sources:
            - src/mongo/util/stringutils.cpp
        -   symbol_name: mongo::ChunkManager::ChunkManager(std::string const&, mongo::ShardKeyPattern
                const&, bool)
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ChangelogType::server
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: mongo::DBConnectionPool::get(std::string const&, double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::splitStringDelim(std::string const&, std::vector<std::string,
                std::allocator<std::string> >*, char)
            symbol_sources:
            - src/mongo/util/stringutils.cpp
        -   symbol_name: mongo::BatchedCommandResponse::BatchedCommandResponse()
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: mongo::grid
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::operator<<(mongo::logger::Tee*)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::Grid::removeDB(std::string const&)
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::WriteConcernOptions::AllConfigs
            symbol_sources:
            - src/mongo/db/write_concern_options.cpp
        -   symbol_name: mongo::DatabaseType::primary
            symbol_sources:
            - src/mongo/s/type_database.cpp
        -   symbol_name: mongo::BatchedCommandResponse::toBSON() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ChangelogType::details
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: mongo::ChunkManager::drop(boost::shared_ptr<mongo::ChunkManager
                const>) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::Chunk::MaxChunkSize
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::ShardKeyPattern::toString() const
            symbol_sources:
            - src/mongo/s/shardkey.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChangelogType::clientAddr
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: mongo::Grid::removeDBIfExists(mongo::DBConfig const&)
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChangelogType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: mongo::Shard::reset(std::string const&)
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::Shard::lookupRSName(std::string const&)
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::Chunk::setMaxChunkSizeSizeMB(int)
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::terseCurrentTime(bool)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::jsTime()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::Shard::_setAddr(std::string const&)
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: typeinfo for mongo::UserException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::warnings
            symbol_sources:
            - src/mongo/util/log.cpp
        -   symbol_name: mongo::CollectionType::ns
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::ChunkManager::ChunkManager(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::DatabaseType::name
            symbol_sources:
            - src/mongo/s/type_database.cpp
        -   symbol_name: mongo::ChunkManager::getInfo(mongo::BSONObjBuilder&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::CollectionType::primary
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::causedBy(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::ChunkManager::createFirstChunks(std::string const&,
                mongo::Shard const&, std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj>
                > const*, std::vector<mongo::Shard, std::allocator<mongo::Shard> >
                const*)
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::BatchedCommandResponse::~BatchedCommandResponse()
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: mongo::getHostNameCached()
            symbol_sources:
            - src/mongo/util/net/sock.cpp
        -   symbol_name: mongo::CollectionType::dropped
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::ChunkType::ns
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ChunkType::shard
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ChunkType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::ChunkType::DEPRECATED_lastmod
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::ConnectionString::_finishInit()
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::causedBy(std::string const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChunkManager::ChunkManager(boost::shared_ptr<mongo::ChunkManager
                const>)
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::CollectionType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::ShardConnection::ShardConnection(mongo::Shard const&,
                std::string const&, boost::shared_ptr<mongo::ChunkManager const>)
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::ChangelogType::ns
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: mongo::sleepsecs(int)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::getHostName()
            symbol_sources:
            - src/mongo/util/net/sock.cpp
        -   symbol_name: mongo::ChunkManager::getVersion() const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::ShardConnection::_finishInit()
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::SettingsType::chunksize
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: mongo::Query::sort(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::ScopedDbConnection::~ScopedDbConnection()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::clusterUpdate(std::string const&, mongo::BSONObj const&,
                mongo::BSONObj const&, bool, bool, mongo::BSONObj const&, mongo::BatchedCommandResponse*)
            symbol_sources:
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::OID::init()
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ConnectionString::_fillServers(std::string)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::dbexit(mongo::ExitCode, char const*)
            symbol_sources:
            - src/mongo/client/scoped_db_conn_test.cpp
            - src/mongo/unittest/crutch.cpp
            - src/mongo/db/instance.cpp
            - src/mongo/client/clientAndShell.cpp
            - src/mongo/s/server.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ChangelogType::what
            symbol_sources:
            - src/mongo/s/type_changelog.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
    -   file_name: src/mongo/s/config.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/config_server_checker_service.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::startConfigServerChecker()
            symbol_uses:
            - src/mongo/s/server.cpp
        -   symbol_name: mongo::isConfigServerConsistent()
            symbol_uses:
            - src/mongo/s/balance.cpp
            - src/mongo/s/chunk.cpp
        file_dependencies:
        -   symbol_name: mongo::ConfigServer::ok(bool)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: typeinfo for boost::detail::thread_data_base
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::inShutdown()
            symbol_sources:
            - src/mongo/client/scoped_db_conn_test.cpp
            - src/mongo/unittest/crutch.cpp
            - src/mongo/db/instance.cpp
            - src/mongo/client/clientAndShell.cpp
            - src/mongo/s/server.cpp
        -   symbol_name: boost::thread::~thread()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::sleepsecs(int)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: boost::thread::start_thread()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: vtable for boost::detail::thread_data_base
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::configServer
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: boost::detail::thread_data_base::~thread_data_base()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
    -   file_name: src/mongo/s/config_server_checker_service.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/config_server_tests.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ConfigServer::~ConfigServer()
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ConfigServer::ConfigServer()
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::ConfigServer::checkHostsAreUnique(std::vector<std::string,
                std::allocator<std::string> > const&, std::string*)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
    -   file_name: src/mongo/s/cursors.cpp
        file_executables:
        - mongos
        file_interface:
        -   symbol_name: mongo::ShardedClientCursor::accessed()
            symbol_uses:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::cursorCache
            symbol_uses:
            - src/mongo/s/request.cpp
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/server.cpp
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::CursorCache::removeRef(long long)
            symbol_uses:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::CursorCache::store(boost::shared_ptr<mongo::ShardedClientCursor>,
                int)
            symbol_uses:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::CursorCache::updateMaxTimeMS(long long, int)
            symbol_uses:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::CursorCache::storeRef(std::string const&, long long,
                std::string const&)
            symbol_uses:
            - src/mongo/s/request.cpp
            - src/mongo/s/commands_public.cpp
        -   symbol_name: mongo::CursorCache::getMaxTimeMS(long long) const
            symbol_uses:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::ShardedClientCursor::sendNextBatch(mongo::Request&,
                int, mongo::_BufBuilder<mongo::TrivialAllocator>&, int&)
            symbol_uses:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::CursorCache::startTimeoutThread()
            symbol_uses:
            - src/mongo/s/server.cpp
        -   symbol_name: mongo::ShardedClientCursor::INIT_REPLY_BUFFER_SIZE
            symbol_uses:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::ShardedClientCursor::getId()
            symbol_uses:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::CursorCache::remove(long long)
            symbol_uses:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::CursorCache::get(long long) const
            symbol_uses:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::CursorCache::gotKillCursors(mongo::Message&)
            symbol_uses:
            - src/mongo/s/request.cpp
        -   symbol_name: mongo::ShardedClientCursor::getTotalSent() const
            symbol_uses:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::ShardedClientCursor::ShardedClientCursor(mongo::QueryMessage&,
                mongo::ParallelSortClusteredCursor*)
            symbol_uses:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::CursorCache::getRef(long long) const
            symbol_uses:
            - src/mongo/s/request.cpp
            - src/mongo/s/strategy.cpp
        file_dependencies:
        -   symbol_name: mongo::PseudoRandom::PseudoRandom(unsigned int)
            symbol_sources:
            - src/mongo/platform/random.cpp
        -   symbol_name: mongo::DBConnectionPool::get(std::string const&, double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::task::Task::Task()
            symbol_sources:
            - src/mongo/util/concurrency/task.cpp
        -   symbol_name: mongo::ParallelSortClusteredCursor::getNS()
            symbol_sources:
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::replyToQuery(int, mongo::AbstractMessagingPort*, mongo::Message&,
                void*, int, int, int, long long)
            symbol_sources:
            - src/mongo/db/dbmessage.cpp
        -   symbol_name: mongo::audit::logKillCursorsAuthzCheck(mongo::ClientBasic*,
                mongo::NamespaceString const&, long long, mongo::ErrorCodes::Error)
            symbol_sources:
            - src/mongo/db/audit.cpp
        -   symbol_name: mongo::Privilege::Privilege(mongo::ResourcePattern const&,
                mongo::ActionSet const&)
            symbol_sources:
            - src/mongo/db/auth/privilege.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: vtable for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::task::Task::setUp()
            symbol_sources:
            - src/mongo/util/concurrency/task.cpp
        -   symbol_name: mongo::BackgroundJob::~BackgroundJob()
            symbol_sources:
            - src/mongo/util/background.cpp
        -   symbol_name: mongo::PseudoRandom::nextInt32()
            symbol_sources:
            - src/mongo/platform/random.cpp
        -   symbol_name: mongo::ActionType::killCursors
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::ActionSet::addAction(mongo::ActionType const&)
            symbol_sources:
            - src/mongo/db/auth/action_set.cpp
        -   symbol_name: typeinfo for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: vtable for mongo::task::Task
            symbol_sources:
            - src/mongo/util/concurrency/task.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ParallelSortClusteredCursor::more()
            symbol_sources:
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::Command::Command(mongo::StringData, bool, mongo::StringData)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::task::Task::run()
            symbol_sources:
            - src/mongo/util/concurrency/task.cpp
        -   symbol_name: mongo::Command::checkAuthForCommand(mongo::ClientBasic*,
                std::string const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: typeinfo for mongo::task::Task
            symbol_sources:
            - src/mongo/util/concurrency/task.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ParallelSortClusteredCursor::~ParallelSortClusteredCursor()
            symbol_sources:
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::task::repeat(mongo::task::Task*, unsigned int)
            symbol_sources:
            - src/mongo/util/concurrency/task.cpp
        -   symbol_name: mongo::Listener::_timeTracker
            symbol_sources:
            - src/mongo/util/net/listen.cpp
        -   symbol_name: mongo::ActionType::cursorInfo
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::ClientBasic::getAuthorizationSession() const
            symbol_sources:
            - src/mongo/db/client_basic.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::AuthorizationSession::isAuthorizedForActionsOnNamespace(mongo::NamespaceString
                const&, mongo::ActionType)
            symbol_sources:
            - src/mongo/db/auth/authorization_session.cpp
        -   symbol_name: mongo::SecureRandom::create()
            symbol_sources:
            - src/mongo/platform/random.cpp
        -   symbol_name: mongo::ParallelSortClusteredCursor::next()
            symbol_sources:
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::Command::parseNs(std::string const&, mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ClientBasic::getCurrent()
            symbol_sources:
            - src/mongo/s/client_info.cpp
            - src/mongo/db/client.cpp
            - src/mongo/client/clientAndShell.cpp
        -   symbol_name: mongo::ScopedDbConnection::~ScopedDbConnection()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Command::redactForLogging(mongo::mutablebson::Document*)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Command::stopIndexBuilds(std::string const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
    -   file_name: src/mongo/s/cursors.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/d_logic.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::_handlePossibleShardedMessage(mongo::Message&, mongo::DbResponse*)
            symbol_uses:
            - src/mongo/db/instance.cpp
        file_dependencies:
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::lastError
            symbol_sources:
            - src/mongo/db/lasterror.cpp
        -   symbol_name: mongo::Message::toString() const
            symbol_sources:
            - src/mongo/db/dbmessage.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::doesOpGetAResponse(int)
            symbol_sources:
            - src/mongo/util/net/message.cpp
        -   symbol_name: mongo::prettyHostName()
            symbol_sources:
            - src/mongo/util/net/sock.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::shardVersionOk(std::string const&, std::string&, mongo::ChunkVersion&,
                mongo::ChunkVersion&)
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::LastErrorHolder::get(bool)
            symbol_sources:
            - src/mongo/db/lasterror.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::writeBackManager
            symbol_sources:
            - src/mongo/s/d_writeback.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WriteBackManager::queueWriteBack(std::string const&,
                mongo::BSONObjBuilder&)
            symbol_sources:
            - src/mongo/s/d_writeback.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::ShardedConnectionInfo::get(bool)
            symbol_sources:
            - src/mongo/s/d_state.cpp
    -   file_name: src/mongo/s/d_logic.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/d_merge.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::mergeChunks(mongo::NamespaceString const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::OID const&, bool, std::string*)
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
            - src/mongo/db/commands/merge_chunks_cmd.cpp
        file_dependencies:
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Query::maxKey(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::Lock::DBWrite::~DBWrite()
            symbol_sources:
            - src/mongo/db/d_concurrency.cpp
        -   symbol_name: mongo::rangeContains(mongo::BSONObj const&, mongo::BSONObj
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/s/range_arithmetic.cpp
        -   symbol_name: vtable for mongo::DBClientWithCommands
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::ChunkType::toBSON() const
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ConnectionString::parse(std::string const&, std::string&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: vtable for mongo::DBClientBase
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::ScopedDistributedLock::tryAcquire(std::string*)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::causedBy(std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBClientBase::ConnectionIdSequence
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ChunkType::name
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::rangeToString(mongo::BSONObj const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/s/range_arithmetic.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::DBDirectClient
            symbol_sources:
            - src/mongo/db/instance.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::DBClientInterface::findN(std::vector<mongo::BSONObj,
                std::allocator<mongo::BSONObj> >&, std::string const&, mongo::Query,
                int, int, mongo::BSONObj const*, int)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::ConfigServer::logChange(std::string const&, std::string
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::shardingState
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::CollectionMetadata::isValidKey(mongo::BSONObj const&)
                const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::ScopedDistributedLock::~ScopedDistributedLock()
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBConnectionPool::get(mongo::ConnectionString const&,
                double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ShardingState::getCollectionMetadata(std::string const&)
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::configServer
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Query::minKey(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::CollectionMetadata::getNextChunk(mongo::BSONObj const&,
                mongo::ChunkType*) const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::ShardingState::refreshMetadataNow(std::string const&,
                mongo::ChunkVersion*)
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::ShardingState::mergeChunks(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::ChunkVersion)
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::ScopedDistributedLock::ScopedDistributedLock(mongo::ConnectionString
                const&, std::string const&)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::ChunkType::~ChunkType()
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::causedBy(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChunkType::ns
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::ChunkType::ChunkType()
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ChunkType::DEPRECATED_lastmod
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::causedBy(std::string const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Chunk::genID(std::string const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::ChunkType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::Lock::DBWrite::DBWrite(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/d_concurrency.cpp
        -   symbol_name: mongo::ChunkType::cloneTo(mongo::ChunkType*) const
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::ScopedDbConnection::~ScopedDbConnection()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
    -   file_name: src/mongo/s/d_merge.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/d_migrate.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ShardingState::inCriticalMigrateSection()
            symbol_uses:
            - src/mongo/s/d_state.cpp
            - src/mongo/db/commands/write_commands/batch_executor.cpp
        -   symbol_name: mongo::ShardingState::waitTillNotInCriticalSection(int)
            symbol_uses:
            - src/mongo/s/d_state.cpp
            - src/mongo/db/commands/write_commands/batch_executor.cpp
        -   symbol_name: mongo::logOpForSharding(char const*, char const*, mongo::BSONObj
                const&, mongo::BSONObj*, mongo::BSONObj const*, bool)
            symbol_uses:
            - src/mongo/db/repl/oplog.cpp
        file_dependencies:
        -   symbol_name: typeinfo for boost::detail::thread_data_base
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::ShardedConnectionInfo::addHook()
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Helpers::RemoveSaver::RemoveSaver(std::string const&,
                std::string const&, std::string const&)
            symbol_sources:
            - src/mongo/db/dbhelpers.cpp
        -   symbol_name: mongo::ElapsedTracker::ElapsedTracker(int, int)
            symbol_sources:
            - src/mongo/util/elapsed_tracker.cpp
        -   symbol_name: mongo::Client::ReadContext::ReadContext(std::string const&,
                std::string const&)
            symbol_sources:
            - src/mongo/db/client.cpp
        -   symbol_name: mongo::DistributedLock::lock_try(std::string const&, bool,
                mongo::BSONObj*, double)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::CollectionCursorCache::registerRunner(mongo::Runner*)
            symbol_sources:
            - src/mongo/db/catalog/collection_cursor_cache.cpp
        -   symbol_name: mongo::AuthorizationSession::grantInternalAuthorization()
            symbol_sources:
            - src/mongo/db/auth/authorization_session.cpp
        -   symbol_name: mongo::Helpers::findById(mongo::Client&, char const*, mongo::BSONObj,
                mongo::BSONObj&, bool*, bool*)
            symbol_sources:
            - src/mongo/db/dbhelpers.cpp
        -   symbol_name: mongo::Status::toString() const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::ShardingState::donateChunk(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::ChunkVersion)
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::ExceptionInfo::append(mongo::BSONObjBuilder&, char
                const*, char const*) const
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::StartupTest::StartupTest()
            symbol_sources:
            - src/mongo/util/startup_test.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Lock::DBWrite::~DBWrite()
            symbol_sources:
            - src/mongo/db/d_concurrency.cpp
        -   symbol_name: mongo::Privilege::Privilege(mongo::ResourcePattern const&,
                mongo::ActionSet const&)
            symbol_sources:
            - src/mongo/db/auth/privilege.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: mongo::ChunkType::max
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::Client::shutdown()
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::KeyPattern::KeyPattern(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/keypattern.cpp
        -   symbol_name: mongo::DistributedLock::isLockHeld(double, std::string*)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::Lock::GlobalRead::GlobalRead(int)
            symbol_sources:
            - src/mongo/db/d_concurrency.cpp
        -   symbol_name: mongo::ChunkType::min
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Client::initThread(char const*, mongo::AbstractMessagingPort*)
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::IndexCatalog::findIndexByPrefix(mongo::BSONObj const&,
                bool) const
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::theReplSet
            symbol_sources:
            - src/mongo/db/repl/rs.cpp
        -   symbol_name: mongo::PageFaultException::touch()
            symbol_sources:
            - src/mongo/db/pagefault.cpp
        -   symbol_name: mongo::invariantFailed(char const*, char const*, unsigned
                int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: typeinfo for mongo::StartupTest
            symbol_sources:
            - src/mongo/util/startup_test.cpp
        -   symbol_name: mongo::PageFaultRetryableSection::~PageFaultRetryableSection()
            symbol_sources:
            - src/mongo/db/pagefault.cpp
        -   symbol_name: vtable for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::opReplicatedEnough(mongo::OpTime, int)
            symbol_sources:
            - src/mongo/db/repl/write_concern.cpp
        -   symbol_name: mongo::Collection::numRecords() const
            symbol_sources:
            - src/mongo/db/catalog/collection.cpp
        -   symbol_name: boost::detail::set_tss_data(void const*, boost::shared_ptr<boost::detail::tss_cleanup_function>,
                void*, bool)
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::KillCurrentOp::checkForInterrupt(bool)
            symbol_sources:
            - src/mongo/db/kill_current_op.cpp
        -   symbol_name: mongo::causedBy(std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::anyReplEnabled()
            symbol_sources:
            - src/mongo/db/repl/replication_server_status.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBClientWithCommands::getLastError(bool, bool, int,
                int)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::GlobalInitializerRegisterer::GlobalInitializerRegisterer(std::string
                const&, boost::function<mongo::Status (mongo::InitializerContext*)>
                const&, std::vector<std::string, std::allocator<std::string> > const&,
                std::vector<std::string, std::allocator<std::string> > const&)
            symbol_sources:
            - src/mongo/base/global_initializer_registerer.cpp
        -   symbol_name: mongo::RangeDeleterStats::getCurrentDeletes() const
            symbol_sources:
            - src/mongo/db/range_deleter_stats.cpp
        -   symbol_name: mongo::userCreateNS(char const*, mongo::BSONObj, std::string&,
                bool, bool*)
            symbol_sources:
            - src/mongo/db/pdfile.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::sleepmillis(long long)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::getGlobalFailPointRegistry()
            symbol_sources:
            - src/mongo/util/fail_point_service.cpp
        -   symbol_name: mongo::Timer::_countsPerSecond
            symbol_sources:
            - src/mongo/util/timer.cpp
        -   symbol_name: mongo::Lock::GlobalWrite::GlobalWrite(bool, int)
            symbol_sources:
            - src/mongo/db/d_concurrency.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::Client::WriteContext::WriteContext(std::string const&,
                std::string const&)
            symbol_sources:
            - src/mongo/db/client.cpp
        -   symbol_name: mongo::SpinLock::SpinLock()
            symbol_sources:
            - src/mongo/util/concurrency/spin_lock.cpp
        -   symbol_name: mongo::ClientBasic::getAuthorizationSession() const
            symbol_sources:
            - src/mongo/db/client_basic.cpp
        -   symbol_name: mongo::FetchStage::FetchStage(mongo::WorkingSet*, mongo::PlanStage*,
                mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/fetch.cpp
        -   symbol_name: vtable for boost::detail::thread_data_base
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::ChunkType::name
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::DBConnectionPool::get(std::string const&, double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ActionSet::addAction(mongo::ActionType const&)
            symbol_sources:
            - src/mongo/db/auth/action_set.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::operator<<(mongo::logger::Tee*)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::FailPoint::FailPoint()
            symbol_sources:
            - src/mongo/util/fail_point.cpp
        -   symbol_name: typeinfo for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::KeyPattern::extendRangeBound(mongo::BSONObj const&,
                bool) const
            symbol_sources:
            - src/mongo/db/keypattern.cpp
        -   symbol_name: boost::thread::start_thread()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::ShardingState::gotShardName(std::string const&)
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::Helpers::inferKeyPattern(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/dbhelpers.cpp
        -   symbol_name: mongo::PageFaultRetryableSection::PageFaultRetryableSection()
            symbol_sources:
            - src/mongo/db/pagefault.cpp
        -   symbol_name: mongo::ConfigServer::logChange(std::string const&, std::string
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::FailPoint::slowShouldFailOpenBlock()
            symbol_sources:
            - src/mongo/util/fail_point.cpp
        -   symbol_name: mongo::shardingState
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::Command::parseNsFullyQualified(std::string const&,
                mongo::BSONObj const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::dur::DurableInterface::_impl
            symbol_sources:
            - src/mongo/db/dur.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::WorkingSet::WorkingSet()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ShardingState::getCollectionMetadata(std::string const&)
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::fassertFailed(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LockMongoFilesShared::mmmutex
            symbol_sources:
            - src/mongo/util/mmap.cpp
        -   symbol_name: mongo::Helpers::removeRange(mongo::KeyRange const&, bool,
                bool, mongo::Helpers::RemoveSaver*, bool, bool)
            symbol_sources:
            - src/mongo/db/dbhelpers.cpp
        -   symbol_name: mongo::Shard::reloadShardInfo()
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::killCurrentOp
            symbol_sources:
            - src/mongo/db/instance.cpp
        -   symbol_name: boost::this_thread::disable_interruption::~disable_interruption()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: boost::detail::thread_data_base::~thread_data_base()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::Shard::reset(std::string const&)
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::AuthorizationManager::isAuthEnabled() const
            symbol_sources:
            - src/mongo/db/auth/authorization_manager.cpp
        -   symbol_name: boost::detail::get_tss_data(void const*)
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::Command::Command(mongo::StringData, bool, mongo::StringData)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Lock::GlobalRead::~GlobalRead()
            symbol_sources:
            - src/mongo/db/d_concurrency.cpp
        -   symbol_name: mongo::ChunkType::~ChunkType()
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::DiskLoc::obj() const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::ActionType::internal
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::ShardKeyPattern::ShardKeyPattern(mongo::BSONObj)
            symbol_sources:
            - src/mongo/s/shardkey.cpp
        -   symbol_name: mongo::CollectionMetadata::getNextChunk(mongo::BSONObj const&,
                mongo::ChunkType*) const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::BSONElementHasher::hash64(mongo::BSONElement const&,
                int)
            symbol_sources:
            - src/mongo/db/hasher.cpp
        -   symbol_name: mongo::ConfigServer::ok(bool)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::Helpers::RemoveSaver::~RemoveSaver()
            symbol_sources:
            - src/mongo/db/dbhelpers.cpp
        -   symbol_name: mongo::ShardingState::getVersion(std::string const&) const
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::dbexit(mongo::ExitCode, char const*)
            symbol_sources:
            - src/mongo/client/scoped_db_conn_test.cpp
            - src/mongo/unittest/crutch.cpp
            - src/mongo/db/instance.cpp
            - src/mongo/client/clientAndShell.cpp
            - src/mongo/s/server.cpp
        -   symbol_name: boost::detail::get_current_thread_data()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::ShardingState::refreshMetadataNow(std::string const&,
                mongo::ChunkVersion*)
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::ShardingState::notePending(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::OID const&, std::string*)
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: boost::this_thread::disable_interruption::disable_interruption()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::Command::checkAuthForCommand(mongo::ClientBasic*,
                std::string const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ActionType::moveChunk
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::Helpers::toKeyFormat(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/dbhelpers.cpp
        -   symbol_name: mongo::configServer
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::RamLog::get(std::string const&)
            symbol_sources:
            - src/mongo/logger/ramlog.cpp
        -   symbol_name: mongo::CollectionMetadata::getMinKey() const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::ChunkType::DEPRECATED_lastmod
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::waitForReplication(mongo::OpTime, int, int)
            symbol_sources:
            - src/mongo/db/repl/write_concern.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ShardingState::initialize(std::string const&)
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::causedBy(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::RangeDeleter::getStats() const
            symbol_sources:
            - src/mongo/db/range_deleter.cpp
        -   symbol_name: mongo::Client::Context::~Context()
            symbol_sources:
            - src/mongo/db/client.cpp
        -   symbol_name: mongo::Lock::isLocked()
            symbol_sources:
            - src/mongo/db/d_concurrency.cpp
        -   symbol_name: mongo::getDeleter()
            symbol_sources:
            - src/mongo/db/range_deleter_service.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::AuthorizationSession::isAuthorizedForActionsOnResource(mongo::ResourcePattern
                const&, mongo::ActionType)
            symbol_sources:
            - src/mongo/db/auth/authorization_session.cpp
        -   symbol_name: mongo::ChunkType::ChunkType()
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::Collection::dataSize() const
            symbol_sources:
            - src/mongo/db/catalog/collection.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::SpinLock::~SpinLock()
            symbol_sources:
            - src/mongo/util/concurrency/spin_lock.cpp
        -   symbol_name: mongo::Chunk::MaxObjectPerChunk
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::FailPointRegistry::addFailPoint(std::string const&,
                mongo::FailPoint*)
            symbol_sources:
            - src/mongo/util/fail_point_registry.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::ChunkType::ns
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::CurOp::setMessage(char const*, std::string, unsigned
                long long, int)
            symbol_sources:
            - src/mongo/db/curop.cpp
        -   symbol_name: mongo::StartupTest::~StartupTest()
            symbol_sources:
            - src/mongo/util/startup_test.cpp
        -   symbol_name: mongo::ChunkType::shard
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::DistributedLock::DistributedLock(mongo::ConnectionString
                const&, std::string const&, unsigned long long, bool)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::CollectionCursorCache::deregisterRunner(mongo::Runner*)
            symbol_sources:
            - src/mongo/db/catalog/collection_cursor_cache.cpp
        -   symbol_name: mongo::curTimeMicros64()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::ConnectionString::_finishInit()
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: boost::thread::~thread()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::Record::likelyInPhysicalMemory() const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::DistributedLock::unlock(mongo::BSONObj*)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::ReplSetConfig::getMajority() const
            symbol_sources:
            - src/mongo/db/repl/rs_config.cpp
        -   symbol_name: mongo::Helpers::upsert(std::string const&, mongo::BSONObj
                const&, bool)
            symbol_sources:
            - src/mongo/db/dbhelpers.cpp
        -   symbol_name: boost::this_thread::interruption_point()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::Chunk::genID(std::string const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::sleepsecs(int)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::IndexScan::IndexScan(mongo::IndexScanParams const&,
                mongo::WorkingSet*, mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/index_scan.cpp
        -   symbol_name: mongo::Lock::GlobalWrite::~GlobalWrite()
            symbol_sources:
            - src/mongo/db/d_concurrency.cpp
        -   symbol_name: mongo::ConnectionString::_fillServers(std::string)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::DiskLoc::rec() const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::RangeDeleter::deleteNow(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, bool, std::string*)
            symbol_sources:
            - src/mongo/db/range_deleter.cpp
        -   symbol_name: mongo::Command::parseNs(std::string const&, mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Lock::DBWrite::DBWrite(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/d_concurrency.cpp
        -   symbol_name: mongo::getGlobalAuthorizationManager()
            symbol_sources:
            - src/mongo/db/auth/authorization_manager_global.cpp
        -   symbol_name: mongo::ChunkType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::Record::touch(bool) const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::Database::createCollection(mongo::StringData const&,
                bool, mongo::BSONObj const*, bool)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::FailPoint::shouldFailCloseBlock()
            symbol_sources:
            - src/mongo/util/fail_point.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ShardingState::undoDonateChunk(std::string const&,
                boost::shared_ptr<mongo::CollectionMetadata const>)
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::Query::sort(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::ScopedDbConnection::~ScopedDbConnection()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::_makeStringVector(int, ...)
            symbol_sources:
            - src/mongo/base/make_string_vector.cpp
        -   symbol_name: mongo::Command::redactForLogging(mongo::mutablebson::Document*)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::InternalRunner::InternalRunner(mongo::Collection const*,
                mongo::PlanStage*, mongo::WorkingSet*)
            symbol_sources:
            - src/mongo/db/query/internal_runner.cpp
        -   symbol_name: mongo::ElapsedTracker::intervalHasElapsed()
            symbol_sources:
            - src/mongo/util/elapsed_tracker.cpp
        -   symbol_name: mongo::storageGlobalParams
            symbol_sources:
            - src/mongo/db/storage_options.cpp
        -   symbol_name: mongo::ShardingState::forgetPending(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::OID const&, std::string*)
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::serverGlobalParams
            symbol_sources:
            - src/mongo/db/server_options.cpp
        -   symbol_name: mongo::RangeDeleter::queueDelete(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, bool, mongo::Notification*,
                std::string*)
            symbol_sources:
            - src/mongo/db/range_deleter.cpp
        -   symbol_name: mongo::logOp(char const*, char const*, mongo::BSONObj const&,
                mongo::BSONObj*, bool*, bool, mongo::BSONObj const*)
            symbol_sources:
            - src/mongo/db/repl/oplog.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Command::stopIndexBuilds(std::string const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::IndexCatalog::createIndex(mongo::BSONObj, bool, mongo::IndexCatalog::ShutdownBehavior)
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::KeyPattern::extractSingleKey(mongo::BSONObj const&)
                const
            symbol_sources:
            - src/mongo/db/keypattern.cpp
    -   file_name: src/mongo/s/d_split.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ChunkInfo::toString() const
            symbol_uses:
            - src/mongo/s/balance.cpp
        file_dependencies:
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Client::ReadContext::ReadContext(std::string const&,
                std::string const&)
            symbol_sources:
            - src/mongo/db/client.cpp
        -   symbol_name: mongo::DistributedLock::lock_try(std::string const&, bool,
                mongo::BSONObj*, double)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Privilege::Privilege(mongo::ResourcePattern const&,
                mongo::ActionSet const&)
            symbol_sources:
            - src/mongo/db/auth/privilege.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: mongo::IndexLegacy::getMissingField(mongo::Collection*, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/index_legacy.cpp
        -   symbol_name: mongo::ChunkType::max
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::KeyPattern::KeyPattern(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/keypattern.cpp
        -   symbol_name: mongo::Command::parseNsFullyQualified(std::string const&,
                mongo::BSONObj const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ChunkType::min
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::IndexCatalog::findIndexByPrefix(mongo::BSONObj const&,
                bool) const
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::invariantFailed(char const*, char const*, unsigned
                int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: vtable for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::causedBy(std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Timer::_countsPerSecond
            symbol_sources:
            - src/mongo/util/timer.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ChunkType::name
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::ClientBasic::getAuthorizationSession() const
            symbol_sources:
            - src/mongo/db/client_basic.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ShardingState::splitChunk(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj>
                > const&, mongo::ChunkVersion)
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::ActionType::splitChunk
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::FetchStage::FetchStage(mongo::WorkingSet*, mongo::PlanStage*,
                mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/fetch.cpp
        -   symbol_name: mongo::DBConnectionPool::get(std::string const&, double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ActionSet::addAction(mongo::ActionType const&)
            symbol_sources:
            - src/mongo/db/auth/action_set.cpp
        -   symbol_name: typeinfo for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::KeyPattern::extendRangeBound(mongo::BSONObj const&,
                bool) const
            symbol_sources:
            - src/mongo/db/keypattern.cpp
        -   symbol_name: mongo::ShardingState::gotShardName(std::string const&)
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::ConfigServer::logChange(std::string const&, std::string
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::shardingState
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::WorkingSet::WorkingSet()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::configServer
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Shard::reset(std::string const&)
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::DistributedLock::DistributedLock(mongo::ConnectionString
                const&, std::string const&, unsigned long long, bool)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::Command::Command(mongo::StringData, bool, mongo::StringData)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::DiskLoc::obj() const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::Command::parseResourcePattern(std::string const&,
                mongo::BSONObj const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ShardingState::getVersion(std::string const&) const
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::ShardingState::refreshMetadataNow(std::string const&,
                mongo::ChunkVersion*)
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::Command::checkAuthForCommand(mongo::ClientBasic*,
                std::string const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Command::redactForLogging(mongo::mutablebson::Document*)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::Helpers::toKeyFormat(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/dbhelpers.cpp
        -   symbol_name: mongo::fassertFailed(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChunkType::DEPRECATED_lastmod
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ShardingState::initialize(std::string const&)
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::causedBy(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Client::Context::~Context()
            symbol_sources:
            - src/mongo/db/client.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::ChunkType::ns
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::AuthorizationSession::isAuthorizedForActionsOnResource(mongo::ResourcePattern
                const&, mongo::ActionType)
            symbol_sources:
            - src/mongo/db/auth/authorization_session.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::Chunk::MaxObjectPerChunk
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::BSONObj::extractFields(mongo::BSONObj const&, bool)
                const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::ActionType::find
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ChunkType::shard
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::curTimeMicros64()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::ConnectionString::_finishInit()
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::DistributedLock::unlock(mongo::BSONObj*)
            symbol_sources:
            - src/mongo/s/distlock.cpp
        -   symbol_name: mongo::Chunk::genID(std::string const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::IndexScan::IndexScan(mongo::IndexScanParams const&,
                mongo::WorkingSet*, mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/index_scan.cpp
        -   symbol_name: mongo::ConnectionString::_fillServers(std::string)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::BSONObj::clientReadable() const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::Command::parseNs(std::string const&, mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ActionType::splitVector
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::Query::sort(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::ScopedDbConnection::~ScopedDbConnection()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::InternalRunner::InternalRunner(mongo::Collection const*,
                mongo::PlanStage*, mongo::WorkingSet*)
            symbol_sources:
            - src/mongo/db/query/internal_runner.cpp
        -   symbol_name: mongo::ChunkType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::storageGlobalParams
            symbol_sources:
            - src/mongo/db/storage_options.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::serverGlobalParams
            symbol_sources:
            - src/mongo/db/server_options.cpp
        -   symbol_name: mongo::BSONObj::replaceFieldNames(mongo::BSONObj const&)
                const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Command::stopIndexBuilds(std::string const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
    -   file_name: src/mongo/s/d_state.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ShardedConnectionInfo::addHook()
            symbol_uses:
            - src/mongo/db/commands/mr.cpp
            - src/mongo/db/pipeline/pipeline_d.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::ShardingState::gotShardName(std::string const&)
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/db/commands/merge_chunks_cmd.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::shardingState
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
            - src/mongo/db/ops/update_lifecycle_impl.cpp
            - src/mongo/db/commands/merge_chunks_cmd.cpp
            - src/mongo/db/pipeline/pipeline_d.cpp
            - src/mongo/db/query/idhack_runner.cpp
            - src/mongo/db/commands/write_commands/batch_executor.cpp
            - src/mongo/db/query/new_find.cpp
            - src/mongo/db/query/get_runner.cpp
            - src/mongo/s/d_merge.cpp
            - src/mongo/db/query/stage_builder.cpp
            - src/mongo/db/commands/cleanup_orphaned_cmd.cpp
            - src/mongo/db/dbhelpers.cpp
            - src/mongo/db/dbcommands.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/db/instance.cpp
            - src/mongo/db/repl/rs.cpp
            - src/mongo/db/commands/mr.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::ShardingState::resetMetadata(std::string const&)
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
        -   symbol_name: mongo::ShardingState::getCollectionMetadata(std::string const&)
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
            - src/mongo/db/commands/mr.cpp
            - src/mongo/db/query/idhack_runner.cpp
            - src/mongo/db/commands/write_commands/batch_executor.cpp
            - src/mongo/db/query/new_find.cpp
            - src/mongo/db/query/get_runner.cpp
            - src/mongo/s/d_merge.cpp
            - src/mongo/db/query/stage_builder.cpp
            - src/mongo/db/commands/cleanup_orphaned_cmd.cpp
            - src/mongo/db/dbhelpers.cpp
            - src/mongo/db/ops/update_lifecycle_impl.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::ShardingState::mergeChunks(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::ChunkVersion)
            symbol_uses:
            - src/mongo/s/d_merge.cpp
        -   symbol_name: mongo::ShardingState::initialize(std::string const&)
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/db/commands/merge_chunks_cmd.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::ShardingState::refreshMetadataIfNeeded(std::string
                const&, mongo::ChunkVersion const&, mongo::ChunkVersion*)
            symbol_uses:
            - src/mongo/db/commands/write_commands/batch_executor.cpp
        -   symbol_name: mongo::ShardingState::setShardName(std::string const&)
            symbol_uses:
            - src/mongo/db/commands/write_commands/batch_executor.cpp
        -   symbol_name: mongo::ShardingState::needCollectionMetadata(std::string
                const&) const
            symbol_uses:
            - src/mongo/db/ops/update_lifecycle_impl.cpp
            - src/mongo/db/query/idhack_runner.cpp
            - src/mongo/db/dbcommands.cpp
            - src/mongo/db/commands/mr.cpp
            - src/mongo/db/query/new_find.cpp
        -   symbol_name: mongo::ShardingState::forgetPending(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::OID const&, std::string*)
            symbol_uses:
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::ShardingState::donateChunk(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::ChunkVersion)
            symbol_uses:
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::ShardingState::getVersion(std::string const&) const
            symbol_uses:
            - src/mongo/s/d_split.cpp
            - src/mongo/s/d_migrate.cpp
            - src/mongo/db/dbcommands.cpp
            - src/mongo/db/pipeline/pipeline_d.cpp
            - src/mongo/db/query/new_find.cpp
        -   symbol_name: mongo::ShardingState::splitChunk(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj>
                > const&, mongo::ChunkVersion)
            symbol_uses:
            - src/mongo/s/d_split.cpp
        -   symbol_name: mongo::ShardingState::undoDonateChunk(std::string const&,
                boost::shared_ptr<mongo::CollectionMetadata const>)
            symbol_uses:
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::ShardedConnectionInfo::get(bool)
            symbol_uses:
            - src/mongo/db/commands/mr.cpp
            - src/mongo/s/d_logic.cpp
            - src/mongo/db/range_deleter_db_env.cpp
        -   symbol_name: mongo::ShardingState::refreshMetadataNow(std::string const&,
                mongo::ChunkVersion*)
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/s/d_migrate.cpp
            - src/mongo/s/d_merge.cpp
            - src/mongo/db/commands/cleanup_orphaned_cmd.cpp
        -   symbol_name: mongo::ShardingState::notePending(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::OID const&, std::string*)
            symbol_uses:
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::haveLocalShardingInfo(std::string const&)
            symbol_uses:
            - src/mongo/scripting/v8_db.cpp
        -   symbol_name: mongo::shardVersionOk(std::string const&, std::string&, mongo::ChunkVersion&,
                mongo::ChunkVersion&)
            symbol_uses:
            - src/mongo/db/client.cpp
            - src/mongo/s/d_logic.cpp
        -   symbol_name: mongo::ShardingState::resetShardingState()
            symbol_uses:
            - src/mongo/dbtests/merge_chunk_tests.cpp
            - src/mongo/db/repl/rs.cpp
        -   symbol_name: mongo::usingAShardConnection(std::string const&)
            symbol_uses:
            - src/mongo/s/shardconnection.cpp
        file_dependencies:
        -   symbol_name: mongo::ActionType::getShardVersion
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::replAllDead
            symbol_sources:
            - src/mongo/db/repl/master_slave.cpp
        -   symbol_name: mongo::DBConnectionPool::addHook(mongo::DBConnectionHook*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::CollectionMetadata::toBSON() const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::Client::clientAddress(bool) const
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Lock::DBWrite::~DBWrite()
            symbol_sources:
            - src/mongo/db/d_concurrency.cpp
        -   symbol_name: mongo::Privilege::Privilege(mongo::ResourcePattern const&,
                mongo::ActionSet const&)
            symbol_sources:
            - src/mongo/db/auth/privilege.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: mongo::ShardingState::inCriticalMigrateSection()
            symbol_sources:
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::Command::parseNsFullyQualified(std::string const&,
                mongo::BSONObj const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::theReplSet
            symbol_sources:
            - src/mongo/db/repl/rs.cpp
        -   symbol_name: mongo::ConnectionString::parse(std::string const&, std::string&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: vtable for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: boost::detail::set_tss_data(void const*, boost::shared_ptr<boost::detail::tss_cleanup_function>,
                void*, bool)
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::causedBy(std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Timer::_countsPerSecond
            symbol_sources:
            - src/mongo/util/timer.cpp
        -   symbol_name: mongo::Lock::GlobalWrite::GlobalWrite(bool, int)
            symbol_sources:
            - src/mongo/db/d_concurrency.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LastErrorHolder::disableForCommand()
            symbol_sources:
            - src/mongo/db/lasterror.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: vtable for mongo::ShardingConnectionHook
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::replSettings
            symbol_sources:
            - src/mongo/db/repl/replication_server_status.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::ClientBasic::getAuthorizationSession() const
            symbol_sources:
            - src/mongo/db/client_basic.cpp
        -   symbol_name: mongo::CollectionMetadata::~CollectionMetadata()
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::CollectionMetadata::cloneMigrate(mongo::ChunkType
                const&, mongo::ChunkVersion const&, std::string*) const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::ActionSet::addAction(mongo::ActionType const&)
            symbol_sources:
            - src/mongo/db/auth/action_set.cpp
        -   symbol_name: typeinfo for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Command::help(std::basic_stringstream<char, std::char_traits<char>,
                std::allocator<char> >&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::fassertFailed(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::detail::get_tss_data(void const*)
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::Command::Command(mongo::StringData, bool, mongo::StringData)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::replSet
            symbol_sources:
            - src/mongo/db/repl/rs.cpp
        -   symbol_name: mongo::ChunkType::~ChunkType()
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::ActionType::internal
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::MetadataLoader::~MetadataLoader()
            symbol_sources:
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::lastError
            symbol_sources:
            - src/mongo/db/lasterror.cpp
        -   symbol_name: mongo::Command::checkAuthForCommand(mongo::ClientBasic*,
                std::string const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::configServer
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::CollectionMetadata::CollectionMetadata()
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::ActionType::shardingState
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::MetadataLoader::MetadataLoader(mongo::ConnectionString
                const&)
            symbol_sources:
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::CollectionMetadata::cloneMerge(mongo::BSONObj const&,
                mongo::BSONObj const&, mongo::ChunkVersion const&, std::string*) const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::shardConnectionPool
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::AuthorizationSession::isAuthorizedForActionsOnResource(mongo::ResourcePattern
                const&, mongo::ActionType)
            symbol_sources:
            - src/mongo/db/auth/authorization_session.cpp
        -   symbol_name: mongo::ChunkType::ChunkType()
            symbol_sources:
            - src/mongo/s/type_chunk.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::MetadataLoader::makeCollectionMetadata(std::string
                const&, std::string const&, mongo::CollectionMetadata const*, mongo::CollectionMetadata*)
                const
            symbol_sources:
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::curTimeMicros64()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: boost::this_thread::interruption_point()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::Lock::GlobalWrite::~GlobalWrite()
            symbol_sources:
            - src/mongo/db/d_concurrency.cpp
        -   symbol_name: mongo::ConfigServer::init(std::string const&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::MetadataLoader::promotePendingChunks(mongo::CollectionMetadata
                const*, mongo::CollectionMetadata*) const
            symbol_sources:
            - src/mongo/s/metadata_loader.cpp
        -   symbol_name: mongo::Command::parseNs(std::string const&, mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Lock::DBWrite::DBWrite(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/d_concurrency.cpp
        -   symbol_name: mongo::CollectionMetadata::cloneSplit(mongo::ChunkType const&,
                std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj> > const&,
                mongo::ChunkVersion const&, std::string*) const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::ShardingState::waitTillNotInCriticalSection(int)
            symbol_sources:
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::Command::redactForLogging(mongo::mutablebson::Document*)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::CollectionMetadata::clonePlusPending(mongo::ChunkType
                const&, std::string*) const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::CollectionMetadata::cloneMinusPending(mongo::ChunkType
                const&, std::string*) const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::Command::stopIndexBuilds(std::string const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: boost::detail::get_current_thread_data()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
    -   file_name: src/mongo/s/dbclient_multi_command.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::DBClientMultiCommand::~DBClientMultiCommand()
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: vtable for mongo::DBClientMultiCommand
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/cluster_write.cpp
        file_dependencies:
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::BatchedCommandRequest::parseBSON(mongo::BSONObj const&,
                std::string*)
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_request.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::DBClientSafeWriter
            symbol_sources:
            - src/mongo/s/write_ops/dbclient_safe_writer.cpp
        -   symbol_name: mongo::BatchedCommandRequest::BatchedCommandRequest(mongo::BatchedCommandRequest::BatchType)
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_request.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BatchedCommandResponse::BatchedCommandResponse()
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: mongo::BatchSafeWriter::safeWriteBatch(mongo::DBClientBase*,
                mongo::BatchedCommandRequest const&, mongo::BatchedCommandResponse*)
            symbol_sources:
            - src/mongo/s/write_ops/batch_downconvert.cpp
        -   symbol_name: mongo::BatchedCommandRequest::getNS() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_request.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BatchedCommandResponse::toBSON() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: mongo::BatchedCommandRequest::setNS(mongo::StringData const&)
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_request.cpp
        -   symbol_name: mongo::shardConnectionPool
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::BatchedCommandRequest
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_request.cpp
        -   symbol_name: mongo::DBConnectionPool::get(mongo::ConnectionString const&,
                double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::audit::appendImpersonatedUsers(mongo::BSONObjBuilder*)
            symbol_sources:
            - src/mongo/db/audit.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BatchedCommandResponse::~BatchedCommandResponse()
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: mongo::DBException::convertExceptionCode(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/s/dbclient_multi_command.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/dbclient_shard_resolver.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: vtable for mongo::DBClientShardResolver
            symbol_uses:
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::DBClientShardResolver::findMaster(std::string, mongo::ConnectionString*)
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
        file_dependencies:
        -   symbol_name: mongo::Shard::findIfExists(std::string const&)
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::ReplicaSetMonitor::get(std::string const&, bool)
            symbol_sources:
            - src/mongo/client/replica_set_monitor.cpp
        -   symbol_name: mongo::ReplicaSetMonitor::getName() const
            symbol_sources:
            - src/mongo/client/replica_set_monitor.cpp
        -   symbol_name: mongo::ConnectionString::parse(std::string const&, std::string&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::configServer
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::ReplicaSetMonitor::getMasterOrUassert()
            symbol_sources:
            - src/mongo/client/replica_set_monitor.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/s/dbclient_shard_resolver.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/default_version.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::versionManager
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/write_ops/dbclient_safe_writer.cpp
            - src/mongo/s/strategy.cpp
            - src/mongo/s/shardconnection.cpp
            - src/mongo/client/parallel.cpp
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::VersionManager::checkShardVersionCB(mongo::ShardConnection*,
                bool, int)
            symbol_uses:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::VersionManager::isVersionableCB(mongo::DBClientBase*)
            symbol_uses:
            - src/mongo/s/shard.cpp
            - src/mongo/client/parallel.cpp
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::VersionManager::forceRemoteCheckShardVersionCB(std::string
                const&)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/strategy.cpp
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::VersionManager::resetShardVersionCB(mongo::DBClientBase*)
            symbol_uses:
            - src/mongo/s/shard.cpp
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::VersionManager::initShardVersionCB(mongo::DBClientBase*,
                mongo::BSONObj&)
            symbol_uses:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::VersionManager::checkShardVersionCB(mongo::DBClientBase*,
                std::string const&, bool, int)
            symbol_uses:
            - src/mongo/s/write_ops/dbclient_safe_writer.cpp
            - src/mongo/client/parallel.cpp
            - src/mongo/s/shardconnection.cpp
        file_dependencies: []
    -   file_name: src/mongo/s/grid.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::Grid::shouldBalance(std::string const&, mongo::BSONObj*)
                const
            symbol_uses:
            - src/mongo/s/balance.cpp
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::Grid::removeDBIfExists(mongo::DBConfig const&)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::Grid::getDBConfig(mongo::StringData const&, bool,
                std::string const&)
            symbol_uses:
            - src/mongo/db/auth/authz_manager_external_state_s.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/commands/cluster_merge_chunks_cmd.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/s/cluster_write.cpp
            - src/mongo/s/chunk_manager_targeter.cpp
            - src/mongo/s/version_manager.cpp
            - src/mongo/s/request.cpp
            - src/mongo/db/commands/mr.cpp
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::Grid::removeDB(std::string const&)
            symbol_uses:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::Grid::getConfigSetting(std::string const&) const
            symbol_uses:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::Grid::addShard(std::string*, mongo::ConnectionString
                const&, long long, std::string&)
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
        -   symbol_name: mongo::Grid::setAllowLocalHost(bool)
            symbol_uses:
            - src/mongo/s/server.cpp
        -   symbol_name: mongo::Grid::knowAboutShard(std::string const&) const
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
        -   symbol_name: mongo::Grid::flushConfig()
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
        -   symbol_name: mongo::grid
            symbol_uses:
            - src/mongo/db/auth/authz_manager_external_state_s.cpp
            - src/mongo/s/config.cpp
            - src/mongo/s/server.cpp
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/s/cluster_write.cpp
            - src/mongo/s/chunk_manager_targeter.cpp
            - src/mongo/s/version_manager.cpp
            - src/mongo/s/request.cpp
            - src/mongo/s/commands/cluster_merge_chunks_cmd.cpp
            - src/mongo/db/commands/mr.cpp
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::Grid::allowLocalHost() const
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/server.cpp
        file_dependencies:
        -   symbol_name: mongo::DBClientWithCommands::simpleCommand(std::string const&,
                mongo::BSONObj*, std::string const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::SettingsType::balancerStopped
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: mongo::clusterInsert(std::string const&, mongo::BSONObj const&,
                mongo::BSONObj const&, mongo::BatchedCommandResponse*)
            symbol_sources:
            - src/mongo/s/cluster_write.cpp
        -   symbol_name: mongo::ShardType::host
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::StartupTest::StartupTest()
            symbol_sources:
            - src/mongo/util/startup_test.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ShardType::name
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::SettingsType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: pcrecpp::RE::QuoteMeta(pcrecpp::StringPiece const&)
            symbol_sources:
            - src/third_party/pcre-8.30/pcrecpp.cc
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::fromjson(std::string const&)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: typeinfo for mongo::StartupTest
            symbol_sources:
            - src/mongo/util/startup_test.cpp
        -   symbol_name: mongo::Shard::pick(mongo::Shard const&)
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::DatabaseType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_database.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::isMongos()
            symbol_sources:
            - src/mongo/db/server_options_helpers.cpp
            - src/mongo/db/sorter/sorter_test.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::GlobalInitializerRegisterer::GlobalInitializerRegisterer(std::string
                const&, boost::function<mongo::Status (mongo::InitializerContext*)>
                const&, std::vector<std::string, std::allocator<std::string> > const&,
                std::vector<std::string, std::allocator<std::string> > const&)
            symbol_sources:
            - src/mongo/base/global_initializer_registerer.cpp
        -   symbol_name: mongo::ReplicaSetMonitor::remove(std::string const&, bool)
            symbol_sources:
            - src/mongo/client/replica_set_monitor.cpp
        -   symbol_name: mongo::ReplicaSetMonitor::get(std::string const&, bool)
            symbol_sources:
            - src/mongo/client/replica_set_monitor.cpp
        -   symbol_name: mongo::getGlobalFailPointRegistry()
            symbol_sources:
            - src/mongo/util/fail_point_service.cpp
        -   symbol_name: mongo::ShardType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::toPointInTime(std::string const&, boost::posix_time::ptime*)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::DBClientWithCommands::getLastError(bool, bool, int,
                int)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::DBConnectionPool::get(std::string const&, double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBConfig::load()
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::WriteConcernOptions::AllConfigs
            symbol_sources:
            - src/mongo/db/write_concern_options.cpp
        -   symbol_name: mongo::ConfigServer::logChange(std::string const&, std::string
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::FailPoint::slowShouldFailOpenBlock()
            symbol_sources:
            - src/mongo/util/fail_point.cpp
        -   symbol_name: mongo::Shard::EMPTY
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::configServer
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Shard::reloadShardInfo()
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::ShardType::maxSize
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::ReplicaSetMonitor::getServerAddress() const
            symbol_sources:
            - src/mongo/client/replica_set_monitor.cpp
        -   symbol_name: mongo::Shard::reset(std::string const&)
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::SettingsType::balancerActiveWindow
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: mongo::Shard::_setAddr(std::string const&)
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::currentDate()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::CollectionType::ns
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::DatabaseType::name
            symbol_sources:
            - src/mongo/s/type_database.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::causedBy(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::SettingsType::key
            symbol_sources:
            - src/mongo/s/type_settings.cpp
        -   symbol_name: mongo::configServerPtr
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::FailPointRegistry::addFailPoint(std::string const&,
                mongo::FailPoint*)
            symbol_sources:
            - src/mongo/util/fail_point_registry.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::DBConfig::setPrimary(std::string const&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::StartupTest::~StartupTest()
            symbol_sources:
            - src/mongo/util/startup_test.cpp
        -   symbol_name: mongo::CollectionType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_collection.cpp
        -   symbol_name: mongo::FailPoint::FailPoint()
            symbol_sources:
            - src/mongo/util/fail_point.cpp
        -   symbol_name: mongo::FailPoint::shouldFailCloseBlock()
            symbol_sources:
            - src/mongo/util/fail_point.cpp
        -   symbol_name: mongo::Query::sort(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::ScopedDbConnection::~ScopedDbConnection()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::_makeStringVector(int, ...)
            symbol_sources:
            - src/mongo/base/make_string_vector.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
    -   file_name: src/mongo/s/grid.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/mock_multi_write_command.h
        file_executables: []
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/mock_ns_targeter.h
        file_executables: []
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/mock_shard_resolver.h
        file_executables: []
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/mongo_version_range.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::MongoVersionRange::parseBSONArray(mongo::BSONArray
                const&, std::vector<mongo::MongoVersionRange, std::allocator<mongo::MongoVersionRange>
                >*, std::string*)
            symbol_uses:
            - src/mongo/s/config_upgrade.cpp
        -   symbol_name: mongo::isInMongoVersionRanges(mongo::StringData const&, std::vector<mongo::MongoVersionRange,
                std::allocator<mongo::MongoVersionRange> > const&)
            symbol_uses:
            - src/mongo/s/config_upgrade.cpp
        file_dependencies:
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::versionCmp(mongo::StringData, mongo::StringData)
            symbol_sources:
            - src/mongo/util/stringutils.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/mongo_version_range.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/mongo_version_range_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MongoVersionRange::parseBSONArray(mongo::BSONArray
                const&, std::vector<mongo::MongoVersionRange, std::allocator<mongo::MongoVersionRange>
                >*, std::string*)
            symbol_sources:
            - src/mongo/s/mongo_version_range.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::isInMongoVersionRanges(mongo::StringData const&, std::vector<mongo::MongoVersionRange,
                std::allocator<mongo::MongoVersionRange> > const&)
            symbol_sources:
            - src/mongo/s/mongo_version_range.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/s/mongos_persistence_stubs.cpp
        file_executables:
        - mongos
        file_interface:
        -   symbol_name: mongo::isJournalingEnabled()
            symbol_uses:
            - src/mongo/db/commands/parameters.cpp
        -   symbol_name: mongo::getJournalCommitInterval()
            symbol_uses:
            - src/mongo/db/commands/parameters.cpp
        -   symbol_name: mongo::setJournalCommitInterval(unsigned int)
            symbol_uses:
            - src/mongo/db/commands/parameters.cpp
        file_dependencies: []
    -   file_name: src/mongo/s/multi_command_dispatch.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/ns_targeter.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/request.cpp
        file_executables:
        - mongos
        file_interface:
        -   symbol_name: mongo::Request::gotInsert()
            symbol_uses:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::Request::reply(mongo::Message&, std::string const&)
            symbol_uses:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::Request::process(int)
            symbol_uses:
            - src/mongo/s/server.cpp
        -   symbol_name: mongo::Request::init()
            symbol_uses:
            - src/mongo/s/server.cpp
        -   symbol_name: mongo::Request::Request(mongo::Message&, mongo::AbstractMessagingPort*)
            symbol_uses:
            - src/mongo/s/server.cpp
        file_dependencies:
        -   symbol_name: mongo::Grid::getDBConfig(mongo::StringData const&, bool,
                std::string const&)
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::DBConfig::getChunkManagerIfExists(std::string const&,
                bool, bool)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::CursorCache::storeRef(std::string const&, long long,
                std::string const&)
            symbol_sources:
            - src/mongo/s/cursors.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::cursorCache
            symbol_sources:
            - src/mongo/s/cursors.cpp
        -   symbol_name: mongo::Strategy::getMore(mongo::Request&)
            symbol_sources:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::ClientInfo::newRequest()
            symbol_sources:
            - src/mongo/s/client_info.cpp
        -   symbol_name: mongo::causedBy(std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Timer::_countsPerSecond
            symbol_sources:
            - src/mongo/util/timer.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBConfig::getShard(std::string const&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::AuthorizationSession::startRequest()
            symbol_sources:
            - src/mongo/db/auth/authorization_session.cpp
        -   symbol_name: mongo::grid
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::OpCounters::gotOp(int, bool)
            symbol_sources:
            - src/mongo/db/stats/counters.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBException::traceIfNeeded(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChunkManager::findIntersectingChunk(mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: typeinfo for mongo::UserException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::globalOpCounters
            symbol_sources:
            - src/mongo/db/stats/counters.cpp
        -   symbol_name: mongo::Strategy::queryOp(mongo::Request&)
            symbol_sources:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::DBException::toString() const
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: vtable for mongo::UserException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ClientBasic::getAuthorizationSession() const
            symbol_sources:
            - src/mongo/db/client_basic.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::curTimeMicros64()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::STRATEGY
            symbol_sources:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::CursorCache::gotKillCursors(mongo::Message&)
            symbol_sources:
            - src/mongo/s/cursors.cpp
        -   symbol_name: mongo::ClientInfo::newPeerRequest(mongo::HostAndPort const&)
            symbol_sources:
            - src/mongo/s/client_info.cpp
        -   symbol_name: mongo::CursorCache::getRef(long long) const
            symbol_sources:
            - src/mongo/s/cursors.cpp
        -   symbol_name: mongo::ClientInfo::get(mongo::AbstractMessagingPort*)
            symbol_sources:
            - src/mongo/s/client_info.cpp
        -   symbol_name: mongo::Strategy::clientCommandOp(mongo::Request&)
            symbol_sources:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::Strategy::writeOp(int, mongo::Request&)
            symbol_sources:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::DBConfig::isSharded(std::string const&)
            symbol_sources:
            - src/mongo/s/config.cpp
    -   file_name: src/mongo/s/request.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/shard.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::Shard::pick(mongo::Shard const&)
            symbol_uses:
            - src/mongo/s/grid.cpp
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::Shard::setAddress(mongo::ConnectionString const&)
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/dbtests/sharding.cpp
        -   symbol_name: mongo::Shard::reloadShardInfo()
            symbol_uses:
            - src/mongo/s/grid.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::Shard::runCommand(std::string const&, mongo::BSONObj
                const&) const
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::Shard::removeShard(std::string const&)
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
        -   symbol_name: mongo::Shard::isAShardNode(std::string const&)
            symbol_uses:
            - src/mongo/s/writeback_listener.cpp
        -   symbol_name: mongo::Shard::lookupRSName(std::string const&)
            symbol_uses:
            - src/mongo/s/config.cpp
        -   symbol_name: vtable for mongo::ShardingConnectionHook
            symbol_uses:
            - src/mongo/s/d_state.cpp
            - src/mongo/s/server.cpp
        -   symbol_name: mongo::Shard::reset(std::string const&)
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/s/strategy.cpp
            - src/mongo/s/grid.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/s/version_manager.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/s/d_migrate.cpp
        -   symbol_name: mongo::Shard::_setAddr(std::string const&)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/config.cpp
            - src/mongo/s/grid.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/dbtests/chunktests.cpp
            - src/mongo/dbtests/sharding.cpp
        -   symbol_name: mongo::Shard::getStatus() const
            symbol_uses:
            - src/mongo/s/balance.cpp
        -   symbol_name: mongo::Shard::findIfExists(std::string const&)
            symbol_uses:
            - src/mongo/s/dbclient_shard_resolver.cpp
        -   symbol_name: mongo::Shard::getAllShards(std::vector<mongo::Shard, std::allocator<mongo::Shard>
                >&)
            symbol_uses:
            - src/mongo/s/commands/auth_schema_upgrade_s.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/balance.cpp
            - src/mongo/s/strategy.cpp
            - src/mongo/s/shardconnection.cpp
        file_dependencies:
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ShardType::host
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ShardType::name
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::Privilege::Privilege(mongo::ResourcePattern const&,
                mongo::ActionSet const&)
            symbol_sources:
            - src/mongo/db/auth/privilege.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: mongo::ConnectionString::sameLogicalEndpoint(mongo::ConnectionString
                const&) const
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: vtable for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::versionManager
            symbol_sources:
            - src/mongo/s/version_manager.cpp
            - src/mongo/s/default_version.cpp
        -   symbol_name: mongo::causedBy(std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::VersionManager::isVersionableCB(mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/s/version_manager.cpp
            - src/mongo/s/default_version.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::UserException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ReplicaSetMonitor::get(std::string const&, bool)
            symbol_sources:
            - src/mongo/client/replica_set_monitor.cpp
        -   symbol_name: mongo::VersionManager::resetShardVersionCB(mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/s/version_manager.cpp
            - src/mongo/s/default_version.cpp
        -   symbol_name: mongo::ShardType::ConfigNS
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::DBConnectionPool::get(std::string const&, double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ActionSet::addAction(mongo::ActionType const&)
            symbol_sources:
            - src/mongo/db/auth/action_set.cpp
        -   symbol_name: mongo::Shard::EMPTY
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: typeinfo for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::BSONElement::Array() const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::ShardType::tags
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::audit::appendImpersonatedUsers(mongo::BSONObjBuilder*)
            symbol_sources:
            - src/mongo/db/audit.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ShardType::maxSize
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::ShardType::draining
            symbol_sources:
            - src/mongo/s/type_shard.cpp
        -   symbol_name: mongo::AuthorizationManager::isAuthEnabled() const
            symbol_sources:
            - src/mongo/db/auth/authorization_manager.cpp
        -   symbol_name: mongo::DBException::traceIfNeeded(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Command::Command(mongo::StringData, bool, mongo::StringData)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: vtable for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::UserException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::VersionManager::initShardVersionCB(mongo::DBClientBase*,
                mongo::BSONObj&)
            symbol_sources:
            - src/mongo/s/version_manager.cpp
            - src/mongo/s/default_version.cpp
        -   symbol_name: mongo::Command::checkAuthForCommand(mongo::ClientBasic*,
                std::string const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::configServer
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ReplicaSetMonitor::contains(mongo::HostAndPort const&)
                const
            symbol_sources:
            - src/mongo/client/replica_set_monitor.cpp
        -   symbol_name: mongo::saveGLEStats(mongo::BSONObj const&, std::string const&)
            symbol_sources:
            - src/mongo/s/client_info.cpp
            - src/mongo/db/client.cpp
        -   symbol_name: mongo::DBException::toString() const
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::ActionType::getShardMap
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::authenticateInternalUser(mongo::DBClientWithCommands*)
            symbol_sources:
            - src/mongo/db/auth/security_key.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ConnectionString::_finishInit()
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::ConnectionString::_fillServers(std::string)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::Command::parseNs(std::string const&, mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::getGlobalAuthorizationManager()
            symbol_sources:
            - src/mongo/db/auth/authorization_manager_global.cpp
        -   symbol_name: mongo::ScopedDbConnection::~ScopedDbConnection()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Command::redactForLogging(mongo::mutablebson::Document*)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Command::stopIndexBuilds(std::string const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
    -   file_name: src/mongo/s/shard.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/shard_conn_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ShardConnection::clearPool()
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::MockConnRegistry::get()
            symbol_sources:
            - src/mongo/dbtests/mock/mock_conn_registry.cpp
        -   symbol_name: mongo::curTimeMicros64()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::MockRemoteDBServer::MockRemoteDBServer(std::string
                const&)
            symbol_sources:
            - src/mongo/dbtests/mock/mock_remote_db_server.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MockRemoteDBServer::shutdown()
            symbol_sources:
            - src/mongo/dbtests/mock/mock_remote_db_server.cpp
        -   symbol_name: mongo::MockConnRegistry::getConnStrHook()
            symbol_sources:
            - src/mongo/dbtests/mock/mock_conn_registry.cpp
        -   symbol_name: typeinfo for mongo::SocketException
            symbol_sources:
            - src/mongo/util/net/sock.cpp
        -   symbol_name: mongo::ConnectionString::_connectHookMutex
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::PoolForHost::_maxPerHost
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MockRemoteDBServer::reboot()
            symbol_sources:
            - src/mongo/dbtests/mock/mock_remote_db_server.cpp
        -   symbol_name: mongo::MockConnRegistry::removeServer(std::string const&)
            symbol_sources:
            - src/mongo/dbtests/mock/mock_conn_registry.cpp
        -   symbol_name: mongo::ShardConnection::_finishInit()
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::MockConnRegistry::addServer(mongo::MockRemoteDBServer*)
            symbol_sources:
            - src/mongo/dbtests/mock/mock_conn_registry.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ShardConnection::done()
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ConnectionString::_connectHook
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::clearGlobalAuthorizationManager()
            symbol_sources:
            - src/mongo/db/auth/authorization_manager_global.cpp
        -   symbol_name: mongo::AuthzManagerExternalStateMock::AuthzManagerExternalStateMock()
            symbol_sources:
            - src/mongo/db/auth/authz_manager_external_state_mock.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MockRemoteDBServer::getServerAddress() const
            symbol_sources:
            - src/mongo/dbtests/mock/mock_remote_db_server.cpp
        -   symbol_name: mongo::AuthorizationManager::AuthorizationManager(mongo::AuthzManagerExternalState*)
            symbol_sources:
            - src/mongo/db/auth/authorization_manager.cpp
        -   symbol_name: mongo::ShardConnection::~ShardConnection()
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::setGlobalAuthorizationManager(mongo::AuthorizationManager*)
            symbol_sources:
            - src/mongo/db/auth/authorization_manager_global.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ShardConnection::ShardConnection(std::string const&,
                std::string const&, boost::shared_ptr<mongo::ChunkManager const>)
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::ShardConnection::kill()
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
    -   file_name: src/mongo/s/shard_key_pattern.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::isUniqueIndexCompatible(mongo::BSONObj, mongo::BSONObj)
            symbol_uses:
            - src/mongo/s/shardkey.cpp
            - src/mongo/db/commands/write_commands/batch_executor.cpp
        file_dependencies:
        -   symbol_name: mongo::BSONObj::isFieldNamePrefixOf(mongo::BSONObj const&)
                const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
    -   file_name: src/mongo/s/shard_key_pattern.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/shard_resolver.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/shard_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::Shard::_setAddr(std::string const&)
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ConnectionString::_finishInit()
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ConnectionString::_fillServers(std::string)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ConnectionString::sameLogicalEndpoint(mongo::ConnectionString
                const&) const
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
    -   file_name: src/mongo/s/shardconnection.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ShardConnection::forgetNS(std::string const&)
            symbol_uses:
            - src/mongo/db/commands/mr.cpp
        -   symbol_name: mongo::ShardConnection::~ShardConnection()
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/config.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::ShardConnection::releaseMyConnections()
            symbol_uses:
            - src/mongo/s/server.cpp
        -   symbol_name: mongo::ShardConnection::_finishInit()
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/config.cpp
            - src/mongo/s/strategy.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::ShardConnection::kill()
            symbol_uses:
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::ShardConnection::sync()
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::ShardConnection::ShardConnection(std::string const&,
                std::string const&, boost::shared_ptr<mongo::ChunkManager const>)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::shardConnectionPool
            symbol_uses:
            - src/mongo/s/d_state.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/server.cpp
            - src/mongo/s/dbclient_multi_command.cpp
        -   symbol_name: mongo::ShardConnection::ShardConnection(mongo::Shard const&,
                std::string const&, boost::shared_ptr<mongo::ChunkManager const>)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/config.cpp
            - src/mongo/s/strategy.cpp
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::ShardConnection::checkMyConnectionVersions(std::string
                const&)
            symbol_uses:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::ShardConnection::done()
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/config.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/s/strategy.cpp
        file_dependencies:
        -   symbol_name: mongo::DBException::traceExceptions
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::printStackTrace(std::ostream&)
            symbol_sources:
            - src/mongo/util/stacktrace.cpp
        -   symbol_name: mongo::DBConnectionPool::appendInfo(mongo::BSONObjBuilder&)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Privilege::Privilege(mongo::ResourcePattern const&,
                mongo::ActionSet const&)
            symbol_sources:
            - src/mongo/db/auth/privilege.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::ServerParameter
            symbol_sources:
            - src/mongo/db/server_parameters.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::LastErrorHolder::get(bool)
            symbol_sources:
            - src/mongo/db/lasterror.cpp
        -   symbol_name: vtable for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::versionManager
            symbol_sources:
            - src/mongo/s/version_manager.cpp
            - src/mongo/s/default_version.cpp
        -   symbol_name: boost::detail::set_tss_data(void const*, boost::shared_ptr<boost::detail::tss_cleanup_function>,
                void*, bool)
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::causedBy(std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::VersionManager::isVersionableCB(mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/s/version_manager.cpp
            - src/mongo/s/default_version.cpp
        -   symbol_name: mongo::DBClientWithCommands::getLastError(bool, bool, int,
                int)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::DBConnectionPool::isConnectionGood(std::string const&,
                mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::VersionManager::resetShardVersionCB(mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/s/version_manager.cpp
            - src/mongo/s/default_version.cpp
        -   symbol_name: mongo::VersionManager::checkShardVersionCB(mongo::DBClientBase*,
                std::string const&, bool, int)
            symbol_sources:
            - src/mongo/s/version_manager.cpp
            - src/mongo/s/default_version.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::SpinLock::SpinLock()
            symbol_sources:
            - src/mongo/util/concurrency/spin_lock.cpp
        -   symbol_name: mongo::DBConnectionPool::get(std::string const&, double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ActionSet::addAction(mongo::ActionType const&)
            symbol_sources:
            - src/mongo/db/auth/action_set.cpp
        -   symbol_name: typeinfo for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::DBClientBase::INVALID_SOCK_CREATION_TIME
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ServerParameter::~ServerParameter()
            symbol_sources:
            - src/mongo/db/server_parameters.cpp
        -   symbol_name: mongo::VersionManager::checkShardVersionCB(mongo::ShardConnection*,
                bool, int)
            symbol_sources:
            - src/mongo/s/version_manager.cpp
            - src/mongo/s/default_version.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::detail::get_tss_data(void const*)
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::DBException::traceIfNeeded(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Command::Command(mongo::StringData, bool, mongo::StringData)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ServerParameter::ServerParameter(mongo::ServerParameterSet*,
                std::string const&, bool, bool)
            symbol_sources:
            - src/mongo/db/server_parameters.cpp
        -   symbol_name: vtable for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::lastError
            symbol_sources:
            - src/mongo/db/lasterror.cpp
        -   symbol_name: mongo::DBConnectionPool::onHandedOut(mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Command::checkAuthForCommand(mongo::ClientBasic*,
                std::string const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::usingAShardConnection(std::string const&)
            symbol_sources:
            - src/mongo/s/d_state.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::ActionType::connPoolStats
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::ExportedServerParameter<bool>::setFromString(std::string
                const&)
            symbol_sources:
            - src/mongo/db/server_parameters.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::DBConnectionPool::serverNameCompare::operator()(std::string
                const&, std::string const&) const
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::causedBy(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBException::toString() const
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::DBConnectionPool::clear()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::SpinLock::~SpinLock()
            symbol_sources:
            - src/mongo/util/concurrency/spin_lock.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::Shard::getAllShards(std::vector<mongo::Shard, std::allocator<mongo::Shard>
                >&)
            symbol_sources:
            - src/mongo/s/shard.cpp
            - src/mongo/client/clientAndShell.cpp
        -   symbol_name: mongo::inShutdown()
            symbol_sources:
            - src/mongo/client/scoped_db_conn_test.cpp
            - src/mongo/unittest/crutch.cpp
            - src/mongo/db/instance.cpp
            - src/mongo/client/clientAndShell.cpp
            - src/mongo/s/server.cpp
        -   symbol_name: mongo::DBConnectionPool::~DBConnectionPool()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBConnectionPool::DBConnectionPool()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Command::parseNs(std::string const&, mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Command::redactForLogging(mongo::mutablebson::Document*)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ServerParameterSet::getGlobal()
            symbol_sources:
            - src/mongo/db/server_parameters.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::Command::stopIndexBuilds(std::string const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
    -   file_name: src/mongo/s/shardkey.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ShardKeyPattern::toString() const
            symbol_uses:
            - src/mongo/s/config.cpp
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::ShardKeyPattern::hasShardKey(mongo::BSONObj const&)
                const
            symbol_uses:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::ShardKeyPattern::isUniqueIndexCompatible(mongo::KeyPattern
                const&) const
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
        -   symbol_name: mongo::ShardKeyPattern::ShardKeyPattern(mongo::BSONObj)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/commands_admin.cpp
            - src/mongo/dbtests/sharding.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/dbtests/chunktests.cpp
            - src/mongo/s/d_migrate.cpp
        file_dependencies:
        -   symbol_name: mongo::StartupTest::~StartupTest()
            symbol_sources:
            - src/mongo/util/startup_test.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::isUniqueIndexCompatible(mongo::BSONObj, mongo::BSONObj)
            symbol_sources:
            - src/mongo/s/shard_key_pattern.cpp
        -   symbol_name: mongo::KeyPattern::isSpecial() const
            symbol_sources:
            - src/mongo/db/keypattern.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::StartupTest::StartupTest()
            symbol_sources:
            - src/mongo/util/startup_test.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::getFieldNames(std::set<std::string, std::less<std::string>,
                std::allocator<std::string> >&) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::KeyPattern::KeyPattern(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/keypattern.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::_okForStorage(bool, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: typeinfo for mongo::StartupTest
            symbol_sources:
            - src/mongo/util/startup_test.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::KeyPattern::extractSingleKey(mongo::BSONObj const&)
                const
            symbol_sources:
            - src/mongo/db/keypattern.cpp
    -   file_name: src/mongo/s/shardkey.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/stale_exception.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/strategy.cpp
        file_executables:
        - mongos
        file_interface:
        -   symbol_name: mongo::Strategy::queryOp(mongo::Request&)
            symbol_uses:
            - src/mongo/s/request.cpp
        -   symbol_name: mongo::Strategy::writeOp(int, mongo::Request&)
            symbol_uses:
            - src/mongo/s/request.cpp
        -   symbol_name: mongo::Strategy::getMore(mongo::Request&)
            symbol_uses:
            - src/mongo/s/request.cpp
        -   symbol_name: mongo::Strategy::clientCommandOp(mongo::Request&)
            symbol_uses:
            - src/mongo/s/request.cpp
        -   symbol_name: mongo::Strategy::commandOp(std::string const&, mongo::BSONObj
                const&, int, std::string const&, mongo::BSONObj const&, std::vector<mongo::Strategy::CommandResult,
                std::allocator<mongo::Strategy::CommandResult> >*)
            symbol_uses:
            - src/mongo/s/commands/cluster_plan_cache_cmd.cpp
            - src/mongo/db/fts/fts_command_mongos.cpp
            - src/mongo/s/commands/cluster_index_filter_cmd.cpp
            - src/mongo/s/commands_public.cpp
        -   symbol_name: mongo::STRATEGY
            symbol_uses:
            - src/mongo/s/commands/cluster_plan_cache_cmd.cpp
            - src/mongo/db/fts/fts_command_mongos.cpp
            - src/mongo/s/request.cpp
            - src/mongo/s/commands/cluster_index_filter_cmd.cpp
            - src/mongo/s/commands_public.cpp
        file_dependencies:
        -   symbol_name: mongo::ShardedClientCursor::accessed()
            symbol_sources:
            - src/mongo/s/cursors.cpp
        -   symbol_name: mongo::VersionManager::forceRemoteCheckShardVersionCB(std::string
                const&)
            symbol_sources:
            - src/mongo/s/version_manager.cpp
            - src/mongo/s/default_version.cpp
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ShardedClientCursor::getId()
            symbol_sources:
            - src/mongo/s/cursors.cpp
        -   symbol_name: mongo::Request::gotInsert()
            symbol_sources:
            - src/mongo/s/request.cpp
        -   symbol_name: mongo::replyToQuery(int, mongo::AbstractMessagingPort*, mongo::Message&,
                void*, int, int, int, long long)
            symbol_sources:
            - src/mongo/db/dbmessage.cpp
        -   symbol_name: mongo::cursorCache
            symbol_sources:
            - src/mongo/s/cursors.cpp
        -   symbol_name: mongo::LastErrorHolder::startRequest(mongo::Message&, mongo::LastError*)
            symbol_sources:
            - src/mongo/db/lasterror.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ParallelSortClusteredCursor::explain(mongo::BSONObjBuilder&)
            symbol_sources:
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::ConnectionString::parse(std::string const&, std::string&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::LastErrorHolder::get(bool)
            symbol_sources:
            - src/mongo/db/lasterror.cpp
        -   symbol_name: mongo::ChunkManager::getAllShards(std::set<mongo::Shard,
                std::less<mongo::Shard>, std::allocator<mongo::Shard> >&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::CursorCache::getMaxTimeMS(long long) const
            symbol_sources:
            - src/mongo/s/cursors.cpp
        -   symbol_name: mongo::versionManager
            symbol_sources:
            - src/mongo/s/version_manager.cpp
            - src/mongo/s/default_version.cpp
        -   symbol_name: mongo::LiteParsedQuery::parseMaxTimeMSQuery(mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::CursorCache::removeRef(long long)
            symbol_sources:
            - src/mongo/s/cursors.cpp
        -   symbol_name: mongo::ShardConnection::~ShardConnection()
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::causedBy(std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Timer::_countsPerSecond
            symbol_sources:
            - src/mongo/util/timer.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBException::convertExceptionCode(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::UserException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::ShardedClientCursor::sendNextBatch(mongo::Request&,
                int, mongo::_BufBuilder<mongo::TrivialAllocator>&, int&)
            symbol_sources:
            - src/mongo/s/cursors.cpp
        -   symbol_name: mongo::msgToBatchRequests(mongo::Message const&, std::vector<mongo::BatchedCommandRequest*,
                std::allocator<mongo::BatchedCommandRequest*> >*)
            symbol_sources:
            - src/mongo/s/write_ops/batch_upconvert.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::ClientBasic::getAuthorizationSession() const
            symbol_sources:
            - src/mongo/db/client_basic.cpp
        -   symbol_name: mongo::ShardedClientCursor::getTotalSent() const
            symbol_sources:
            - src/mongo/s/cursors.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::DBConnectionPool::get(std::string const&, double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::BatchedCommandResponse::BatchedCommandResponse()
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: mongo::ShardConnection::done()
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ActionType::inprog
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Query::ReadPrefField
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::Shard::reset(std::string const&)
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBException::traceIfNeeded(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ParallelSortClusteredCursor::isSharded()
            symbol_sources:
            - src/mongo/client/parallel.cpp
        -   symbol_name: vtable for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Query::isExplain() const
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::ActionType::killop
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::Request::reply(mongo::Message&, std::string const&)
            symbol_sources:
            - src/mongo/s/request.cpp
        -   symbol_name: mongo::lastError
            symbol_sources:
            - src/mongo/db/lasterror.cpp
        -   symbol_name: mongo::CursorCache::remove(long long)
            symbol_sources:
            - src/mongo/s/cursors.cpp
        -   symbol_name: typeinfo for mongo::UserException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Command::runAgainstRegistered(char const*, mongo::BSONObj&,
                mongo::BSONObjBuilder&, int)
            symbol_sources:
            - src/mongo/s/commands_public.cpp
        -   symbol_name: mongo::ParallelSortClusteredCursor::getShardCursor(mongo::Shard
                const&)
            symbol_sources:
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::CursorCache::store(boost::shared_ptr<mongo::ShardedClientCursor>,
                int)
            symbol_sources:
            - src/mongo/s/cursors.cpp
        -   symbol_name: mongo::DBClientCursor::peekFirst()
            symbol_sources:
            - src/mongo/client/dbclientcursor.cpp
        -   symbol_name: mongo::batchErrorToLastError(mongo::BatchedCommandRequest
                const&, mongo::BatchedCommandResponse const&, mongo::LastError*)
            symbol_sources:
            - src/mongo/s/write_ops/batch_upconvert.cpp
        -   symbol_name: mongo::ShardedClientCursor::ShardedClientCursor(mongo::QueryMessage&,
                mongo::ParallelSortClusteredCursor*)
            symbol_sources:
            - src/mongo/s/cursors.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::AuthorizationSession::checkAuthForQuery(mongo::NamespaceString
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/auth/authorization_session.cpp
        -   symbol_name: mongo::CursorCache::get(long long) const
            symbol_sources:
            - src/mongo/s/cursors.cpp
        -   symbol_name: mongo::AuthorizationSession::checkAuthForGetMore(mongo::NamespaceString
                const&, long long)
            symbol_sources:
            - src/mongo/db/auth/authorization_session.cpp
        -   symbol_name: mongo::DBException::toString() const
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::audit::logQueryAuthzCheck(mongo::ClientBasic*, mongo::NamespaceString
                const&, mongo::BSONObj const&, mongo::ErrorCodes::Error)
            symbol_sources:
            - src/mongo/db/audit.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::AuthorizationSession::isAuthorizedForActionsOnResource(mongo::ResourcePattern
                const&, mongo::ActionType)
            symbol_sources:
            - src/mongo/db/auth/authorization_session.cpp
        -   symbol_name: mongo::audit::logInProgAuthzCheck(mongo::ClientBasic*, mongo::BSONObj
                const&, mongo::ErrorCodes::Error)
            symbol_sources:
            - src/mongo/db/audit.cpp
        -   symbol_name: mongo::ShardedClientCursor::INIT_REPLY_BUFFER_SIZE
            symbol_sources:
            - src/mongo/s/cursors.cpp
        -   symbol_name: mongo::CursorCache::updateMaxTimeMS(long long, int)
            symbol_sources:
            - src/mongo/s/cursors.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::BatchedCommandResponse::~BatchedCommandResponse()
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: mongo::BatchedCommandResponse::parseBSON(mongo::BSONObj const&,
                std::string*)
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::ParallelSortClusteredCursor::getQueryShards(std::set<mongo::Shard,
                std::less<mongo::Shard>, std::allocator<mongo::Shard> >&)
            symbol_sources:
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::BatchedCommandRequest::getOrdered() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_request.cpp
        -   symbol_name: mongo::Shard::getAllShards(std::vector<mongo::Shard, std::allocator<mongo::Shard>
                >&)
            symbol_sources:
            - src/mongo/s/shard.cpp
            - src/mongo/client/clientAndShell.cpp
        -   symbol_name: mongo::curTimeMicros64()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::BatchedCommandResponse::getN() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_response.cpp
        -   symbol_name: mongo::ShardConnection::ShardConnection(mongo::Shard const&,
                std::string const&, boost::shared_ptr<mongo::ChunkManager const>)
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::CursorCache::getRef(long long) const
            symbol_sources:
            - src/mongo/s/cursors.cpp
        -   symbol_name: mongo::ParallelSortClusteredCursor::init()
            symbol_sources:
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::ShardConnection::_finishInit()
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::BatchedCommandRequest::getNS() const
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_request.cpp
        -   symbol_name: mongo::ClientBasic::getCurrent()
            symbol_sources:
            - src/mongo/s/client_info.cpp
            - src/mongo/db/client.cpp
            - src/mongo/client/clientAndShell.cpp
        -   symbol_name: mongo::ParallelSortClusteredCursor::ParallelSortClusteredCursor(mongo::QuerySpec
                const&, mongo::CommandInfo const&)
            symbol_sources:
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::DBConfig::getChunkManagerOrPrimary(std::string const&,
                boost::shared_ptr<mongo::ChunkManager const>&, boost::shared_ptr<mongo::Shard>&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::ParallelSortClusteredCursor::getPrimary()
            symbol_sources:
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::BatchedCommandRequest::setNS(mongo::StringData const&)
            symbol_sources:
            - src/mongo/s/write_ops/batched_command_request.cpp
        -   symbol_name: mongo::Command::appendCommandStatus(mongo::BSONObjBuilder&,
                mongo::Status const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ScopedDbConnection::~ScopedDbConnection()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::audit::logGetMoreAuthzCheck(mongo::ClientBasic*, mongo::NamespaceString
                const&, long long, mongo::ErrorCodes::Error)
            symbol_sources:
            - src/mongo/db/audit.cpp
        -   symbol_name: mongo::validateBSON(char const*, unsigned long long)
            symbol_sources:
            - src/mongo/bson/bson_validate.cpp
        -   symbol_name: mongo::ParallelSortClusteredCursor::~ParallelSortClusteredCursor()
            symbol_sources:
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::serverGlobalParams
            symbol_sources:
            - src/mongo/db/server_options.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::replyToQuery(int, mongo::AbstractMessagingPort*, mongo::Message&,
                mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/dbmessage.cpp
        -   symbol_name: mongo::DBConfig::isSharded(std::string const&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::audit::logKillOpAuthzCheck(mongo::ClientBasic*, mongo::BSONObj
                const&, mongo::ErrorCodes::Error)
            symbol_sources:
            - src/mongo/db/audit.cpp
        -   symbol_name: mongo::ShardConnection::checkMyConnectionVersions(std::string
                const&)
            symbol_sources:
            - src/mongo/s/shardconnection.cpp
    -   file_name: src/mongo/s/strategy.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/version_manager.cpp
        file_executables:
        - mongos
        file_interface:
        -   symbol_name: mongo::VersionManager::forceRemoteCheckShardVersionCB(std::string
                const&)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/strategy.cpp
            - src/mongo/client/parallel.cpp
        -   symbol_name: mongo::versionManager
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/s/write_ops/dbclient_safe_writer.cpp
            - src/mongo/s/strategy.cpp
            - src/mongo/s/shardconnection.cpp
            - src/mongo/client/parallel.cpp
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::VersionManager::initShardVersionCB(mongo::DBClientBase*,
                mongo::BSONObj&)
            symbol_uses:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::VersionManager::resetShardVersionCB(mongo::DBClientBase*)
            symbol_uses:
            - src/mongo/s/shard.cpp
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::VersionManager::checkShardVersionCB(mongo::DBClientBase*,
                std::string const&, bool, int)
            symbol_uses:
            - src/mongo/s/write_ops/dbclient_safe_writer.cpp
            - src/mongo/client/parallel.cpp
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::VersionManager::checkShardVersionCB(mongo::ShardConnection*,
                bool, int)
            symbol_uses:
            - src/mongo/s/shardconnection.cpp
        -   symbol_name: mongo::VersionManager::isVersionableCB(mongo::DBClientBase*)
            symbol_uses:
            - src/mongo/s/shard.cpp
            - src/mongo/client/parallel.cpp
            - src/mongo/s/shardconnection.cpp
        file_dependencies:
        -   symbol_name: mongo::Grid::getDBConfig(mongo::StringData const&, bool,
                std::string const&)
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::WriteBackListener::init(mongo::DBClientBase&)
            symbol_sources:
            - src/mongo/s/writeback_listener.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBConfig::getChunkManager(std::string const&, bool,
                bool)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::DBConfig::getChunkManagerIfExists(std::string const&,
                bool, bool)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::causedBy(std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChunkManager::getVersion(mongo::Shard const&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::sleepmillis(long long)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::serverID
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::grid
            symbol_sources:
            - src/mongo/s/grid.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBClientReplicaSet::masterConn()
            symbol_sources:
            - src/mongo/client/dbclient_rs.cpp
        -   symbol_name: mongo::configServer
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Shard::reset(std::string const&)
            symbol_sources:
            - src/mongo/s/shard.cpp
        -   symbol_name: mongo::nsGetCollection(std::string const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::DBException::traceIfNeeded(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ChunkManager::compatibleWith(mongo::ChunkManager const&,
                mongo::Shard const&) const
            symbol_sources:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::DBConfig::reload()
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::DBException::toString() const
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::OID::init()
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::DBConfig::isSharded(std::string const&)
            symbol_sources:
            - src/mongo/s/config.cpp
        -   symbol_name: mongo::setShardVersion(mongo::DBClientBase&, std::string
                const&, mongo::ChunkVersion, boost::shared_ptr<mongo::ChunkManager
                const>, bool, mongo::BSONObj&)
            symbol_sources:
            - src/mongo/s/chunk.cpp
    -   file_name: src/mongo/s/version_manager.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/s/version_mongos.cpp
        file_executables:
        - mongos
        file_interface:
        -   symbol_name: mongo::printShardingVersionInfo(bool)
            symbol_uses:
            - src/mongo/s/mongos_options.cpp
            - src/mongo/s/server.cpp
        file_dependencies:
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::ProcessId)
            symbol_sources:
            - src/mongo/platform/process_id.cpp
        -   symbol_name: mongo::gitVersion()
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/buildinfo.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ProcessId::getCurrent()
            symbol_sources:
            - src/mongo/platform/process_id.cpp
        -   symbol_name: mongo::versionString
            symbol_sources:
            - src/mongo/util/version.cpp
        -   symbol_name: mongo::logProcessDetails()
            symbol_sources:
            - src/mongo/db/log_process_details.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::getHostNameCached()
            symbol_sources:
            - src/mongo/util/net/sock.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::openSSLVersion(std::string const&, std::string const&)
            symbol_sources:
            - src/mongo/util/version_reporting.cpp
        -   symbol_name: mongo::ProcessId::toString() const
            symbol_sources:
            - src/mongo/platform/process_id.cpp
        -   symbol_name: mongo::serverGlobalParams
            symbol_sources:
            - src/mongo/db/server_options.cpp
        -   symbol_name: mongo::sysInfo()
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/buildinfo.cpp
    -   file_name: src/mongo/s/version_mongos.h
        file_executables:
        - mongos
        file_interface: []
        file_dependencies: []
