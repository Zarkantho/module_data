######## concurrency #########

# Core locks library. Only in mongod.
## can you say a bit more? e.g. database locks are RWlocks, but what *are*
## they exactly? any sort of fairness or other performance/"how to use" info?
# TODO: There are also a bunch of concurrency related helpers in the UTILITIES section.
src/mongo/util/concurrency/rwlock.h
src/mongo/util/concurrency/rwlockimpl.cpp (mongod, tools, and cppclientdriver)
src/mongo/util/concurrency/rwlockimpl.h
src/mongo/db/d_concurrency.cpp (mongod and tools)
src/mongo/db/d_concurrency.h
src/mongo/db/lockstat.cpp (mongod and tools)
src/mongo/db/lockstat.h
src/mongo/db/lockstate.cpp (mongod and tools)
src/mongo/db/lockstate.h

# Spin locks
## can you give an example or two of where we tightly spin on locks?
src/mongo/util/concurrency/spin_lock.cpp (mongod, mongos, cppclientdriver, and tools)
src/mongo/util/concurrency/spin_lock.h
src/mongo/util/concurrency/spin_lock_test.cpp (not built in anywhere)

# Condition Variables
## why called 'synchronization' then? (what are these, really? can you give
## an example?)
src/mongo/util/concurrency/synchronization.cpp (mongod, mongos, cppclientdriver, and tools)
src/mongo/util/concurrency/synchronization.h


