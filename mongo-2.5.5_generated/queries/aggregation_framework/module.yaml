module_title: Aggregation Framework
module_name: aggregation_framework
module_description: 'This is the aggregation framework for MongoDB.  It handles code
    to perform aggregation on a single instance as well as on a sharded cluster.

    The basic operation for sharded aggregation is that the mongos does the coordination
    of the aggregation and makes decisions on what can be done distributed (mapped)
    and what must be done centralized (reduced/merged).  It then sends out the necessary
    aggregation commands to the appropriate places.  The distributed step is handled
    by the source shards that have the inital data, and the merger step is handled
    by the primary shard for that database.

    There are various optimizations that are done as part of this process.  They are
    split into two categories:  Local, which rewrites the pipeline for more optimal
    performance on a single node, and Sharded, which rewrites and spits the pipeline
    for more optimal performance on the level of the whole cluster.  To see these
    optimizations in action, you can run "db.foo.aggregate([...], { explain : true
    }) from the mongo shell.  This will show how the pipeline was rewritten throughout
    the course of the operation.'
module_groups:
-   group_title: 'TODO: Name this group'
    group_description: Entry point into aggregation for mongod.  These are all database
        Commands run using db.$cmd.findOne(...)
    group_files:
    - src/mongo/db/commands/pipeline_command.cpp
    group_generated_data:
    -   file_name: src/mongo/db/commands/pipeline_command.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::Client::ReadContext::ReadContext(std::string const&,
                std::string const&)
            symbol_sources:
            - src/mongo/db/client.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MaxBytesToReturnToClientAtOnce
            symbol_sources:
            - src/mongo/db/query/new_find.cpp
        -   symbol_name: mongo::Pipeline::parseCommand(std::string&, mongo::BSONObj
                const&, boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_sources:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Pipeline::run(mongo::BSONObjBuilder&)
            symbol_sources:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::invariantFailed(char const*, char const*, unsigned
                int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: vtable for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Pipeline::addRequiredPrivileges(mongo::Command*, std::string
                const&, mongo::BSONObj, std::vector<mongo::Privilege, std::allocator<mongo::Privilege>
                >*)
            symbol_sources:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::addRef() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::release() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: typeinfo for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ValueStorage::putVector(mongo::RCVector const*)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::InterruptStatusMongod::status
            symbol_sources:
            - src/mongo/db/interrupt_status_mongod.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::Document::toBson() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ClientCursorPin::ClientCursorPin(mongo::Collection
                const*, long long)
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: mongo::operator<<(mongo::BSONObjBuilderValueStream&, mongo::Value
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::Command::Command(mongo::StringData, bool, mongo::StringData)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Pipeline::writeExplainOps() const
            symbol_sources:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::Command::checkAuthForCommand(mongo::ClientBasic*,
                std::string const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::Document::toBsonWithMetaData() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Pipeline::commandName
            symbol_sources:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::Client::Context::~Context()
            symbol_sources:
            - src/mongo/db/client.cpp
        -   symbol_name: mongo::CurOp::getRemainingMaxTimeMicros() const
            symbol_sources:
            - src/mongo/db/curop.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ClientCursorPin::c() const
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: typeinfo for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::Command::parseNs(std::string const&, mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ClientCursor::ClientCursor(mongo::Collection const*,
                mongo::Runner*, int, mongo::BSONObj)
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: mongo::ClientCursorPin::~ClientCursorPin()
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: mongo::Command::redactForLogging(mongo::mutablebson::Document*)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::storageGlobalParams
            symbol_sources:
            - src/mongo/db/storage_options.cpp
        -   symbol_name: mongo::PipelineD::prepareCursorSource(boost::intrusive_ptr<mongo::Pipeline>
                const&, boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_sources:
            - src/mongo/db/pipeline/pipeline_d.cpp
        -   symbol_name: mongo::Command::stopIndexBuilds(std::string const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::ClientCursorPin::deleteUnderlying()
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: mongo::Pipeline::stitch()
            symbol_sources:
            - src/mongo/db/pipeline/pipeline.cpp
-   group_title: 'TODO: Name this group'
    group_description: An accumulator represents a stateful operation.  For example,
        in an operation such as $sum, you can feed in values until there is no more
        data, then extract the final result
    group_files:
    - src/mongo/db/pipeline/accumulator.h
    - src/mongo/db/pipeline/accumulator_add_to_set.cpp
    - src/mongo/db/pipeline/accumulator_avg.cpp
    - src/mongo/db/pipeline/accumulator_first.cpp
    - src/mongo/db/pipeline/accumulator_last.cpp
    - src/mongo/db/pipeline/accumulator_min_max.cpp
    - src/mongo/db/pipeline/accumulator_push.cpp
    - src/mongo/db/pipeline/accumulator_sum.cpp
    group_generated_data:
    -   file_name: src/mongo/db/pipeline/accumulator.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/pipeline/accumulator_add_to_set.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::AccumulatorAddToSet::create()
            symbol_uses:
            - src/mongo/db/pipeline/document_source_group.cpp
        file_dependencies:
        -   symbol_name: mongo::Value::compare(mongo::Value const&, mongo::Value const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::Value::hash_combine(unsigned long&) const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ValueStorage::putVector(mongo::RCVector const*)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::Value::getApproximateSize() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
    -   file_name: src/mongo/db/pipeline/accumulator_avg.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::AccumulatorAvg::create()
            symbol_uses:
            - src/mongo/dbtests/accumulatortests.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
        file_dependencies:
        -   symbol_name: mongo::Value::operator[](mongo::StringData) const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::DocumentStorage::clone() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Value::getDouble() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: vtable for mongo::DocumentStorage
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::DocumentStorage::appendField(mongo::StringData)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::DocumentStorage::findField(mongo::StringData) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ValueStorage::putDocument(mongo::Document const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
    -   file_name: src/mongo/db/pipeline/accumulator_first.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::AccumulatorFirst::create()
            symbol_uses:
            - src/mongo/dbtests/accumulatortests.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
        file_dependencies:
        -   symbol_name: mongo::Value::getApproximateSize() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
    -   file_name: src/mongo/db/pipeline/accumulator_last.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::AccumulatorLast::create()
            symbol_uses:
            - src/mongo/dbtests/accumulatortests.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
        file_dependencies:
        -   symbol_name: mongo::Value::getApproximateSize() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
    -   file_name: src/mongo/db/pipeline/accumulator_min_max.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::AccumulatorMinMax::createMax()
            symbol_uses:
            - src/mongo/dbtests/accumulatortests.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
        -   symbol_name: mongo::AccumulatorMinMax::createMin()
            symbol_uses:
            - src/mongo/dbtests/accumulatortests.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
        file_dependencies:
        -   symbol_name: mongo::Value::compare(mongo::Value const&, mongo::Value const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Value::getApproximateSize() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
    -   file_name: src/mongo/db/pipeline/accumulator_push.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::AccumulatorPush::create()
            symbol_uses:
            - src/mongo/db/pipeline/document_source_group.cpp
        file_dependencies:
        -   symbol_name: mongo::ValueStorage::putVector(mongo::RCVector const*)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Value::getApproximateSize() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
    -   file_name: src/mongo/db/pipeline/accumulator_sum.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::AccumulatorSum::create()
            symbol_uses:
            - src/mongo/dbtests/accumulatortests.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
        file_dependencies:
        -   symbol_name: mongo::Value::coerceToDouble() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::Value::createIntOrLong(long long)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Value::coerceToLong() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::Value::getWidestNumeric(mongo::BSONType, mongo::BSONType)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
-   group_title: 'TODO: Name this group'
    group_description: In memory representation of BSON for aggregation.  Similar
        to a the BSONElement/BSONObj interface except the Value class does not contain
        its key like a BSONElement, and the Document class is just a map of keys to
        values
    group_files:
    - src/mongo/db/pipeline/value.cpp
    - src/mongo/db/pipeline/value.h
    - src/mongo/db/pipeline/value_internal.h
    - src/mongo/db/pipeline/document.cpp
    - src/mongo/db/pipeline/document.h
    - src/mongo/db/pipeline/document_internal.h
    group_generated_data:
    -   file_name: src/mongo/db/pipeline/value.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::Value::compare(mongo::Value const&, mongo::Value const&)
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/db/pipeline/accumulator_min_max.cpp
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/document_source_redact.cpp
            - src/mongo/dbtests/pipelinetests.cpp
            - src/mongo/db/pipeline/accumulator_add_to_set.cpp
            - src/mongo/dbtests/expressiontests.cpp
            - src/mongo/db/pipeline/document.cpp
            - src/mongo/db/pipeline/expression.cpp
            - src/mongo/dbtests/accumulatortests.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
        -   symbol_name: mongo::Value::coerceToTm() const
            symbol_uses:
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::operator<<(mongo::BSONObjBuilderValueStream&, mongo::Value
                const&)
            symbol_uses:
            - src/mongo/db/pipeline/document.cpp
            - src/mongo/db/commands/pipeline_command.cpp
            - src/mongo/dbtests/expressiontests.cpp
        -   symbol_name: mongo::Value::operator[](mongo::StringData) const
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/db/pipeline/accumulator_avg.cpp
            - src/mongo/dbtests/documenttests.cpp
        -   symbol_name: mongo::Value::createIntOrLong(long long)
            symbol_uses:
            - src/mongo/db/pipeline/expression.cpp
            - src/mongo/db/pipeline/accumulator_sum.cpp
        -   symbol_name: mongo::ValueStorage::putString(mongo::StringData const&)
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/document_source_cursor.cpp
            - src/mongo/db/pipeline/document_source_redact.cpp
            - src/mongo/db/pipeline/document_source_out.cpp
            - src/mongo/db/pipeline/document_source_merge_cursors.cpp
            - src/mongo/dbtests/expressiontests.cpp
            - src/mongo/db/pipeline/document_source_unwind.cpp
            - src/mongo/db/pipeline/document_source_geo_near.cpp
            - src/mongo/db/pipeline/pipeline.cpp
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::Value::hash_combine(unsigned long&) const
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/accumulator_add_to_set.cpp
            - src/mongo/db/pipeline/document.cpp
            - src/mongo/db/pipeline/expression.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
        -   symbol_name: mongo::Value::deserializeForSorter(mongo::BufReader&, mongo::Value::SorterDeserializeSettings
                const&)
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/document.cpp
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
        -   symbol_name: mongo::ValueStorage::putDocument(mongo::Document const&)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/db/pipeline/accumulator_avg.cpp
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/document_source_redact.cpp
            - src/mongo/db/pipeline/document_source_match.cpp
            - src/mongo/db/pipeline/document_source_out.cpp
            - src/mongo/db/pipeline/document_source_merge_cursors.cpp
            - src/mongo/db/pipeline/document_source_cursor.cpp
            - src/mongo/db/pipeline/document_source_skip.cpp
            - src/mongo/db/pipeline/document_source_unwind.cpp
            - src/mongo/db/pipeline/document_source_limit.cpp
            - src/mongo/db/pipeline/document.cpp
            - src/mongo/db/pipeline/document_source_geo_near.cpp
            - src/mongo/dbtests/expressiontests.cpp
            - src/mongo/db/pipeline/document_source_bson_array.cpp
            - src/mongo/db/pipeline/expression.cpp
            - src/mongo/db/pipeline/document_source_project.cpp
            - src/mongo/dbtests/accumulatortests.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
            - src/mongo/db/pipeline/dependencies.cpp
        -   symbol_name: mongo::Value::coerceToLong() const
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/expression.cpp
            - src/mongo/db/pipeline/accumulator_sum.cpp
        -   symbol_name: mongo::Value::coerceToDate() const
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::Value::addToBsonArray(mongo::BSONArrayBuilder*) const
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
        -   symbol_name: mongo::Value::serializeForSorter(mongo::_BufBuilder<mongo::TrivialAllocator>&)
                const
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/document.cpp
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
        -   symbol_name: mongo::Value::getWidestNumeric(mongo::BSONType, mongo::BSONType)
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/expression.cpp
            - src/mongo/db/pipeline/accumulator_sum.cpp
        -   symbol_name: mongo::Value::Value(mongo::BSONArray const&)
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/document_source_geo_near.cpp
        -   symbol_name: mongo::Value::getDocument() const
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/dbtests/expressiontests.cpp
            - src/mongo/db/pipeline/document.cpp
            - src/mongo/db/pipeline/expression.cpp
            - src/mongo/db/pipeline/document_source_geo_near.cpp
            - src/mongo/dbtests/accumulatortests.cpp
            - src/mongo/db/pipeline/dependencies.cpp
        -   symbol_name: mongo::Value::getDouble() const
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/accumulator_avg.cpp
            - src/mongo/dbtests/accumulatortests.cpp
        -   symbol_name: mongo::Value::coerceToBool() const
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::Value::coerceToTimestamp() const
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
        -   symbol_name: mongo::Value::operator[](unsigned long) const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_unwind.cpp
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/document_source_sort.cpp
        -   symbol_name: mongo::Value::coerceToString() const
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::Value::Value(mongo::BSONElement const&)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/document_source_match.cpp
            - src/mongo/dbtests/expressiontests.cpp
            - src/mongo/dbtests/pipelinetests.cpp
            - src/mongo/db/pipeline/document.cpp
            - src/mongo/db/pipeline/expression.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
            - src/mongo/db/pipeline/dependencies.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Value const&)
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/dbtests/pipelinetests.cpp
            - src/mongo/dbtests/accumulatortests.cpp
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/dbtests/expressiontests.cpp
        -   symbol_name: mongo::Value::addToBsonObj(mongo::BSONObjBuilder*, mongo::StringData)
                const
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/dbtests/accumulatortests.cpp
            - src/mongo/dbtests/expressiontests.cpp
        -   symbol_name: mongo::Value::coerceToInt() const
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::Value::coerceToDouble() const
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/expression.cpp
            - src/mongo/db/pipeline/accumulator_sum.cpp
        -   symbol_name: mongo::ValueStorage::putRegEx(mongo::BSONRegEx const&)
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
        -   symbol_name: mongo::ValueStorage::putVector(mongo::RCVector const*)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/document_source_redact.cpp
            - src/mongo/db/pipeline/document_source_match.cpp
            - src/mongo/db/pipeline/accumulator_add_to_set.cpp
            - src/mongo/db/pipeline/document_source_merge_cursors.cpp
            - src/mongo/dbtests/expressiontests.cpp
            - src/mongo/db/pipeline/expression.cpp
            - src/mongo/db/pipeline/accumulator_push.cpp
            - src/mongo/db/pipeline/pipeline.cpp
            - src/mongo/db/pipeline/document_source_cursor.cpp
            - src/mongo/db/commands/pipeline_command.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
            - src/mongo/db/pipeline/dependencies.cpp
        -   symbol_name: mongo::Value::Value(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/document_source_geo_near.cpp
        -   symbol_name: mongo::Value::toString() const
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/document.cpp
            - src/mongo/db/pipeline/document_source_redact.cpp
            - src/mongo/dbtests/expressiontests.cpp
        -   symbol_name: mongo::Value::getApproximateSize() const
            symbol_uses:
            - src/mongo/db/pipeline/accumulator_min_max.cpp
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/accumulator_first.cpp
            - src/mongo/db/pipeline/accumulator_add_to_set.cpp
            - src/mongo/db/pipeline/document.cpp
            - src/mongo/db/pipeline/accumulator_push.cpp
            - src/mongo/db/pipeline/accumulator_last.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
        file_dependencies:
        -   symbol_name: mongo::typeName(mongo::BSONType)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::operator<<(mongo::BSONObjBuilderValueStream&, mongo::Document
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: MurmurHash3_x86_32(void const*, int, unsigned int, void*)
            symbol_sources:
            - src/third_party/murmurhash3/MurmurHash3.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::Document::compare(mongo::Document const&, mongo::Document
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::DocumentStorage::findField(mongo::StringData) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::OID::hash_combine(unsigned long&) const
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::fassertFailed(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Document::getApproximateSize() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Document::hash_combine(unsigned long&) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::time_t_to_String_short(long)
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::Document::toString() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Document::serializeForSorter(mongo::_BufBuilder<mongo::TrivialAllocator>&)
                const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::RCString::create(mongo::StringData)
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::Document::deserializeForSorter(mongo::BufReader&,
                mongo::Document::SorterDeserializeSettings const&)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Document::Document(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
    -   file_name: src/mongo/db/pipeline/value.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/pipeline/value_internal.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/pipeline/document.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::MutableDocument::getNestedField(mongo::FieldPath const&)
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/document_source_geo_near.cpp
            - src/mongo/db/pipeline/dependencies.cpp
        -   symbol_name: mongo::DocumentStorage::clone() const
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/s/commands_public.cpp
            - src/mongo/db/pipeline/accumulator_avg.cpp
            - src/mongo/dbtests/accumulatortests.cpp
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/pipeline.cpp
            - src/mongo/db/pipeline/document_source_match.cpp
            - src/mongo/db/pipeline/document_source_out.cpp
            - src/mongo/db/pipeline/document_source_merge_cursors.cpp
            - src/mongo/dbtests/expressiontests.cpp
            - src/mongo/db/pipeline/document_source_skip.cpp
            - src/mongo/db/pipeline/document_source_unwind.cpp
            - src/mongo/db/pipeline/document_source_limit.cpp
            - src/mongo/db/pipeline/document_source_cursor.cpp
            - src/mongo/db/pipeline/document_source_geo_near.cpp
            - src/mongo/db/pipeline/document_source_bson_array.cpp
            - src/mongo/db/pipeline/expression.cpp
            - src/mongo/db/pipeline/document_source_project.cpp
            - src/mongo/db/pipeline/document_source_redact.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
            - src/mongo/db/pipeline/dependencies.cpp
        -   symbol_name: mongo::operator<<(mongo::BSONObjBuilderValueStream&, mongo::Document
                const&)
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/s/commands_public.cpp
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::Document::serializeForSorter(mongo::_BufBuilder<mongo::TrivialAllocator>&)
                const
            symbol_uses:
            - src/mongo/db/pipeline/value.cpp
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/document_source_sort.cpp
        -   symbol_name: mongo::MutableDocument::getNestedField(std::vector<mongo::Position,
                std::allocator<mongo::Position> > const&)
            symbol_uses:
            - src/mongo/db/pipeline/document_source_unwind.cpp
            - src/mongo/dbtests/documenttests.cpp
        -   symbol_name: vtable for mongo::DocumentStorage
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/s/commands_public.cpp
            - src/mongo/db/pipeline/accumulator_avg.cpp
            - src/mongo/dbtests/accumulatortests.cpp
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/pipeline.cpp
            - src/mongo/db/pipeline/document_source_match.cpp
            - src/mongo/db/pipeline/document_source_out.cpp
            - src/mongo/db/pipeline/document_source_merge_cursors.cpp
            - src/mongo/dbtests/expressiontests.cpp
            - src/mongo/db/pipeline/document_source_skip.cpp
            - src/mongo/db/pipeline/document_source_unwind.cpp
            - src/mongo/db/pipeline/document_source_limit.cpp
            - src/mongo/db/pipeline/document_source_cursor.cpp
            - src/mongo/db/pipeline/document_source_geo_near.cpp
            - src/mongo/db/pipeline/document_source_bson_array.cpp
            - src/mongo/db/pipeline/expression.cpp
            - src/mongo/db/pipeline/document_source_project.cpp
            - src/mongo/db/pipeline/document_source_redact.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
            - src/mongo/db/pipeline/dependencies.cpp
        -   symbol_name: mongo::Document::deserializeForSorter(mongo::BufReader&,
                mongo::Document::SorterDeserializeSettings const&)
            symbol_uses:
            - src/mongo/db/pipeline/value.cpp
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/document_source_sort.cpp
        -   symbol_name: mongo::DocumentStorage::findField(mongo::StringData) const
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/document_source_skip.cpp
            - src/mongo/db/pipeline/document_source_match.cpp
            - src/mongo/db/pipeline/document_source_out.cpp
            - src/mongo/dbtests/expressiontests.cpp
            - src/mongo/db/pipeline/document_source_project.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/db/pipeline/document_source_cursor.cpp
            - src/mongo/db/pipeline/dependencies.cpp
            - src/mongo/s/commands_public.cpp
            - src/mongo/db/pipeline/accumulator_avg.cpp
            - src/mongo/db/pipeline/value.cpp
            - src/mongo/db/pipeline/document_source_bson_array.cpp
            - src/mongo/dbtests/pipelinetests.cpp
            - src/mongo/db/pipeline/document_source_merge_cursors.cpp
            - src/mongo/db/pipeline/document_source_unwind.cpp
            - src/mongo/db/pipeline/document_source_limit.cpp
            - src/mongo/db/pipeline/document_source_geo_near.cpp
            - src/mongo/dbtests/accumulatortests.cpp
            - src/mongo/db/pipeline/document_source_redact.cpp
            - src/mongo/db/pipeline/expression.cpp
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::Document::toBson() const
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/s/commands_public.cpp
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/pipeline_d.cpp
            - src/mongo/db/pipeline/document_source_match.cpp
            - src/mongo/db/pipeline/document_source_out.cpp
            - src/mongo/dbtests/expressiontests.cpp
            - src/mongo/dbtests/accumulatortests.cpp
            - src/mongo/db/commands/pipeline_command.cpp
        -   symbol_name: mongo::DocumentStorage::appendField(mongo::StringData)
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/s/commands_public.cpp
            - src/mongo/db/pipeline/accumulator_avg.cpp
            - src/mongo/dbtests/accumulatortests.cpp
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/pipeline.cpp
            - src/mongo/db/pipeline/document_source_match.cpp
            - src/mongo/db/pipeline/document_source_out.cpp
            - src/mongo/db/pipeline/document_source_merge_cursors.cpp
            - src/mongo/dbtests/expressiontests.cpp
            - src/mongo/db/pipeline/document_source_skip.cpp
            - src/mongo/db/pipeline/document_source_unwind.cpp
            - src/mongo/db/pipeline/document_source_limit.cpp
            - src/mongo/db/pipeline/document_source_cursor.cpp
            - src/mongo/db/pipeline/document_source_geo_near.cpp
            - src/mongo/db/pipeline/document_source_bson_array.cpp
            - src/mongo/db/pipeline/expression.cpp
            - src/mongo/db/pipeline/document_source_project.cpp
            - src/mongo/db/pipeline/document_source_redact.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
            - src/mongo/db/pipeline/dependencies.cpp
        -   symbol_name: mongo::Document::Document(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/document_source_match.cpp
            - src/mongo/db/pipeline/document_source_out.cpp
            - src/mongo/dbtests/expressiontests.cpp
            - src/mongo/db/pipeline/document_source_geo_near.cpp
            - src/mongo/db/pipeline/document_source_bson_array.cpp
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::Document::toBson(mongo::BSONObjBuilder*) const
            symbol_uses:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::Document::getApproximateSize() const
            symbol_uses:
            - src/mongo/db/pipeline/value.cpp
            - src/mongo/db/pipeline/document_source_cursor.cpp
            - src/mongo/db/pipeline/document_source_sort.cpp
        -   symbol_name: mongo::Document::toString() const
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::Document::hash_combine(unsigned long&) const
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::Document::toBsonWithMetaData() const
            symbol_uses:
            - src/mongo/db/commands/pipeline_command.cpp
        -   symbol_name: mongo::Document::metaFieldTextScore
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/db/pipeline/dependencies.cpp
        -   symbol_name: mongo::Document::fromBsonWithMetaData(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
            - src/mongo/db/pipeline/document_source_merge_cursors.cpp
            - src/mongo/db/pipeline/document_source_sort.cpp
        -   symbol_name: mongo::Document::compare(mongo::Document const&, mongo::Document
                const&)
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::MutableDocument::MutableDocument(unsigned long)
            symbol_uses:
            - src/mongo/db/pipeline/document_source_project.cpp
            - src/mongo/db/pipeline/expression.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
            - src/mongo/db/pipeline/dependencies.cpp
        -   symbol_name: mongo::Document::getNestedField(mongo::FieldPath const&,
                std::vector<mongo::Position, std::allocator<mongo::Position> >*) const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_unwind.cpp
            - src/mongo/dbtests/documenttests.cpp
        file_dependencies:
        -   symbol_name: mongo::Value::Value(mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::Value::deserializeForSorter(mongo::BufReader&, mongo::Value::SorterDeserializeSettings
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::Value::serializeForSorter(mongo::_BufBuilder<mongo::TrivialAllocator>&)
                const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Value::compare(mongo::Value const&, mongo::Value const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::ValueStorage::putDocument(mongo::Document const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Value::toString() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::Value::hash_combine(unsigned long&) const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::fassertFailed(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: MurmurHash3_x86_32(void const*, int, unsigned int, void*)
            symbol_sources:
            - src/third_party/murmurhash3/MurmurHash3.cpp
        -   symbol_name: mongo::operator<<(mongo::BSONObjBuilderValueStream&, mongo::Value
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Value::getApproximateSize() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::Value::getDocument() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
    -   file_name: src/mongo/db/pipeline/document.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/pipeline/document_internal.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
-   group_title: 'TODO: Name this group'
    group_description: Files containing the pipeline stages.  Document Source is the
        name for a pipeline stage in our code
    group_files:
    - src/mongo/db/pipeline/document_source.cpp
    - src/mongo/db/pipeline/document_source.h
    - src/mongo/db/pipeline/document_source_bson_array.cpp
    - src/mongo/db/pipeline/document_source_command_shards.cpp
    - src/mongo/db/pipeline/document_source_cursor.cpp
    - src/mongo/db/pipeline/document_source_geo_near.cpp
    - src/mongo/db/pipeline/document_source_group.cpp
    - src/mongo/db/pipeline/document_source_limit.cpp
    - src/mongo/db/pipeline/document_source_match.cpp
    - src/mongo/db/pipeline/document_source_merge_cursors.cpp
    - src/mongo/db/pipeline/document_source_out.cpp
    - src/mongo/db/pipeline/document_source_project.cpp
    - src/mongo/db/pipeline/document_source_redact.cpp
    - src/mongo/db/pipeline/document_source_skip.cpp
    - src/mongo/db/pipeline/document_source_sort.cpp
    - src/mongo/db/pipeline/document_source_unwind.cpp
    group_generated_data:
    -   file_name: src/mongo/db/pipeline/document_source.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::DocumentSource::coalesce(boost::intrusive_ptr<mongo::DocumentSource>
                const&)
            symbol_uses:
            - src/mongo/db/pipeline/document_source_redact.cpp
            - src/mongo/db/pipeline/document_source_out.cpp
            - src/mongo/db/pipeline/document_source_merge_cursors.cpp
            - src/mongo/db/pipeline/document_source_unwind.cpp
            - src/mongo/db/pipeline/document_source_bson_array.cpp
            - src/mongo/db/pipeline/document_source_project.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
            - src/mongo/db/pipeline/document_source_command_shards.cpp
        -   symbol_name: mongo::DocumentSource::dispose()
            symbol_uses:
            - src/mongo/db/pipeline/document_source_redact.cpp
            - src/mongo/db/pipeline/document_source_match.cpp
            - src/mongo/db/pipeline/document_source_out.cpp
            - src/mongo/db/pipeline/document_source_skip.cpp
            - src/mongo/db/pipeline/document_source_unwind.cpp
            - src/mongo/db/pipeline/document_source_limit.cpp
            - src/mongo/db/pipeline/document_source_geo_near.cpp
            - src/mongo/db/pipeline/document_source_bson_array.cpp
            - src/mongo/db/pipeline/document_source_project.cpp
            - src/mongo/db/pipeline/document_source_command_shards.cpp
        -   symbol_name: vtable for mongo::DocumentSource
            symbol_uses:
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/document_source_redact.cpp
            - src/mongo/db/pipeline/document_source_match.cpp
            - src/mongo/db/pipeline/document_source_out.cpp
            - src/mongo/db/pipeline/document_source_merge_cursors.cpp
            - src/mongo/db/pipeline/document_source_skip.cpp
            - src/mongo/db/pipeline/document_source_unwind.cpp
            - src/mongo/db/pipeline/document_source_limit.cpp
            - src/mongo/db/pipeline/document_source_geo_near.cpp
            - src/mongo/db/pipeline/document_source_bson_array.cpp
            - src/mongo/db/pipeline/document_source_cursor.cpp
            - src/mongo/db/pipeline/document_source_project.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
            - src/mongo/db/pipeline/document_source_command_shards.cpp
        -   symbol_name: mongo::DocumentSource::serializeToArray(std::vector<mongo::Value,
                std::allocator<mongo::Value> >&, bool) const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
            - src/mongo/db/pipeline/document_source_redact.cpp
            - src/mongo/db/pipeline/document_source_match.cpp
            - src/mongo/db/pipeline/document_source_out.cpp
            - src/mongo/db/pipeline/document_source_merge_cursors.cpp
            - src/mongo/db/pipeline/document_source_skip.cpp
            - src/mongo/db/pipeline/document_source_unwind.cpp
            - src/mongo/db/pipeline/document_source_limit.cpp
            - src/mongo/db/pipeline/document_source_geo_near.cpp
            - src/mongo/db/pipeline/document_source_bson_array.cpp
            - src/mongo/db/pipeline/document_source_project.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
            - src/mongo/db/pipeline/document_source_command_shards.cpp
        -   symbol_name: typeinfo for mongo::DocumentSource
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/db/pipeline/pipeline_d.cpp
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/pipeline.cpp
            - src/mongo/s/commands_public.cpp
            - src/mongo/db/pipeline/document_source_match.cpp
            - src/mongo/db/pipeline/document_source_out.cpp
            - src/mongo/db/pipeline/document_source_merge_cursors.cpp
            - src/mongo/db/pipeline/document_source_skip.cpp
            - src/mongo/db/pipeline/document_source_unwind.cpp
            - src/mongo/db/pipeline/document_source_limit.cpp
            - src/mongo/db/pipeline/document_source_geo_near.cpp
            - src/mongo/db/pipeline/document_source_bson_array.cpp
            - src/mongo/db/pipeline/document_source_cursor.cpp
            - src/mongo/db/pipeline/document_source_project.cpp
            - src/mongo/db/pipeline/document_source_redact.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
            - src/mongo/db/pipeline/document_source_command_shards.cpp
        -   symbol_name: mongo::DocumentSource::getSourceName() const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_bson_array.cpp
            - src/mongo/db/pipeline/document_source_command_shards.cpp
        -   symbol_name: mongo::DocumentSource::kill()
            symbol_uses:
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/document_source_redact.cpp
            - src/mongo/db/pipeline/document_source_match.cpp
            - src/mongo/db/pipeline/document_source_out.cpp
            - src/mongo/db/pipeline/document_source_merge_cursors.cpp
            - src/mongo/db/pipeline/document_source_skip.cpp
            - src/mongo/db/pipeline/document_source_unwind.cpp
            - src/mongo/db/pipeline/document_source_limit.cpp
            - src/mongo/db/pipeline/document_source_geo_near.cpp
            - src/mongo/db/pipeline/document_source_bson_array.cpp
            - src/mongo/db/pipeline/document_source_project.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
            - src/mongo/db/pipeline/document_source_command_shards.cpp
        -   symbol_name: mongo::DocumentSource::setSource(mongo::DocumentSource*)
            symbol_uses:
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/document_source_redact.cpp
            - src/mongo/db/pipeline/document_source_match.cpp
            - src/mongo/db/pipeline/document_source_out.cpp
            - src/mongo/db/pipeline/document_source_unwind.cpp
            - src/mongo/db/pipeline/document_source_limit.cpp
            - src/mongo/db/pipeline/document_source_project.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
            - src/mongo/db/pipeline/document_source_skip.cpp
        -   symbol_name: mongo::DocumentSource::optimize()
            symbol_uses:
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/document_source_skip.cpp
            - src/mongo/db/pipeline/document_source_match.cpp
            - src/mongo/db/pipeline/document_source_out.cpp
            - src/mongo/db/pipeline/document_source_merge_cursors.cpp
            - src/mongo/db/pipeline/document_source_unwind.cpp
            - src/mongo/db/pipeline/document_source_limit.cpp
            - src/mongo/db/pipeline/document_source_geo_near.cpp
            - src/mongo/db/pipeline/document_source_bson_array.cpp
            - src/mongo/db/pipeline/document_source_cursor.cpp
            - src/mongo/db/pipeline/document_source_command_shards.cpp
        -   symbol_name: mongo::DocumentSource::DocumentSource(boost::intrusive_ptr<mongo::ExpressionContext>
                const&)
            symbol_uses:
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/document_source_redact.cpp
            - src/mongo/db/pipeline/document_source_match.cpp
            - src/mongo/db/pipeline/document_source_out.cpp
            - src/mongo/db/pipeline/document_source_merge_cursors.cpp
            - src/mongo/db/pipeline/document_source_skip.cpp
            - src/mongo/db/pipeline/document_source_unwind.cpp
            - src/mongo/db/pipeline/document_source_limit.cpp
            - src/mongo/db/pipeline/document_source_geo_near.cpp
            - src/mongo/db/pipeline/document_source_bson_array.cpp
            - src/mongo/db/pipeline/document_source_cursor.cpp
            - src/mongo/db/pipeline/document_source_project.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
            - src/mongo/db/pipeline/document_source_command_shards.cpp
        file_dependencies:
        -   symbol_name: mongo::IntrusiveCounterUnsigned::addRef() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::release() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: typeinfo for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
    -   file_name: src/mongo/db/pipeline/document_source.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/pipeline/document_source_bson_array.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::DocumentSourceBsonArray::create(mongo::BSONObj const&,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/db/pipeline/pipeline_d.cpp
            - src/mongo/db/pipeline/document_source_command_shards.cpp
        file_dependencies:
        -   symbol_name: mongo::IntrusiveCounterUnsigned::addRef() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: vtable for mongo::DocumentStorage
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::DocumentSource::coalesce(boost::intrusive_ptr<mongo::DocumentSource>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::dispose()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: vtable for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::serializeToArray(std::vector<mongo::Value,
                std::allocator<mongo::Value> >&, bool) const
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: typeinfo for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::getSourceName() const
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentStorage::findField(mongo::StringData) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::ValueStorage::putDocument(mongo::Document const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentSource::kill()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentStorage::appendField(mongo::StringData)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Document::Document(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: vtable for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentStorage::clone() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::release() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::DocumentSource::optimize()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::DocumentSource::DocumentSource(boost::intrusive_ptr<mongo::ExpressionContext>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
    -   file_name: src/mongo/db/pipeline/document_source_command_shards.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: typeinfo for mongo::DocumentSourceCommandShards
            symbol_uses:
            - src/mongo/db/pipeline/document_source_sort.cpp
        -   symbol_name: mongo::DocumentSourceCommandShards::getArrays()
            symbol_uses:
            - src/mongo/db/pipeline/document_source_sort.cpp
        -   symbol_name: mongo::DocumentSourceCommandShards::create(std::vector<mongo::Strategy::CommandResult,
                std::allocator<mongo::Strategy::CommandResult> > const&, boost::intrusive_ptr<mongo::ExpressionContext>
                const&)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
        file_dependencies:
        -   symbol_name: mongo::IntrusiveCounterUnsigned::addRef() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::DocumentSource::coalesce(boost::intrusive_ptr<mongo::DocumentSource>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::dispose()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: vtable for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::serializeToArray(std::vector<mongo::Value,
                std::allocator<mongo::Value> >&, bool) const
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: typeinfo for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::getSourceName() const
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentSourceBsonArray::create(mongo::BSONObj const&,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source_bson_array.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentSource::kill()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::release() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::DocumentSource::optimize()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::DocumentSource::DocumentSource(boost::intrusive_ptr<mongo::ExpressionContext>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
    -   file_name: src/mongo/db/pipeline/document_source_cursor.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::DocumentSourceCursor::setProjection(mongo::BSONObj
                const&, boost::optional<mongo::ParsedDeps> const&)
            symbol_uses:
            - src/mongo/db/pipeline/pipeline_d.cpp
        -   symbol_name: mongo::DocumentSourceCursor::create(std::string const&, long
                long, boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/db/pipeline/pipeline_d.cpp
        -   symbol_name: mongo::DocumentSourceCursor::getLimit() const
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
        file_dependencies:
        -   symbol_name: mongo::TypeExplain::getScanAndOrder() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::isScanAndOrderSet() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::DocumentSource::serializeToArray(std::vector<mongo::Value,
                std::allocator<mongo::Value> >&, bool) const
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::CollectionCursorCache::deregisterCursor(mongo::ClientCursor*)
            symbol_sources:
            - src/mongo/db/catalog/collection_cursor_cache.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::TypeExplain::scanAndOrder
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::Lock::DBRead::DBRead(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/d_concurrency.cpp
        -   symbol_name: mongo::ValueStorage::putDocument(mongo::Document const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::MaxBytesToReturnToClientAtOnce
            symbol_sources:
            - src/mongo/db/query/new_find.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::TypeExplain::getAllPlansAt(unsigned long) const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::clauses
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: vtable for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::TypeExplain::isClausesSet() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::sizeAllPlans() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::DocumentStorage::clone() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Status::toString() const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::addRef() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: typeinfo for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::release() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::CollectionCursorCache::find(long long)
            symbol_sources:
            - src/mongo/db/catalog/collection_cursor_cache.cpp
        -   symbol_name: mongo::DocumentStorage::findField(mongo::StringData) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::TypeExplain::isIndexBoundsSet() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: typeinfo for mongo::DocumentSourceLimit
            symbol_sources:
            - src/mongo/db/pipeline/document_source_limit.cpp
        -   symbol_name: mongo::TypeExplain::sizeClauses() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ClientCursorPin::ClientCursorPin(mongo::Collection
                const*, long long)
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: mongo::DocumentSource::optimize()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::TypeExplain::isAllPlansSet() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::Lock::DBRead::~DBRead()
            symbol_sources:
            - src/mongo/db/d_concurrency.cpp
        -   symbol_name: mongo::TypeExplain::isIsMultiKeySet() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::getClausesAt(unsigned long) const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: vtable for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::TypeExplain::indexBounds
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::TypeExplain::isCursorSet() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: vtable for mongo::DocumentStorage
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::TypeExplain::getIndexBounds() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::getCursor() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::Document::getApproximateSize() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Client::Context::~Context()
            symbol_sources:
            - src/mongo/db/client.cpp
        -   symbol_name: mongo::ValueStorage::putVector(mongo::RCVector const*)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::ClientCursorPin::c() const
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: mongo::ValueStorage::putString(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::Document::fromBsonWithMetaData(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Value::Value(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::TypeExplain::getIsMultiKey() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::cursor
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::allPlans
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::DocumentStorage::appendField(mongo::StringData)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::ClientCursorPin::~ClientCursorPin()
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: mongo::TypeExplain::isMultiKey
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::ParsedDeps::extractFields(mongo::BSONObj const&) const
            symbol_sources:
            - src/mongo/db/pipeline/dependencies.cpp
        -   symbol_name: mongo::storageGlobalParams
            symbol_sources:
            - src/mongo/db/storage_options.cpp
        -   symbol_name: mongo::DocumentSource::DocumentSource(boost::intrusive_ptr<mongo::ExpressionContext>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::ClientCursorPin::deleteUnderlying()
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: mongo::Client::Context::Context(std::string const&, std::string
                const&, bool)
            symbol_sources:
            - src/mongo/db/client.cpp
    -   file_name: src/mongo/db/pipeline/document_source_geo_near.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::DocumentSourceGeoNear::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_uses:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::DocumentSourceGeoNear::create(boost::intrusive_ptr<mongo::ExpressionContext>
                const&)
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
        -   symbol_name: mongo::DocumentSourceGeoNear::geoNearName
            symbol_uses:
            - src/mongo/db/pipeline/pipeline.cpp
        file_dependencies:
        -   symbol_name: mongo::IntrusiveCounterUnsigned::addRef() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::ValueStorage::putString(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: vtable for mongo::DocumentStorage
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::FieldPath::getPath(bool) const
            symbol_sources:
            - src/mongo/db/pipeline/field_path.cpp
        -   symbol_name: mongo::DocumentSource::dispose()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: vtable for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::serializeToArray(std::vector<mongo::Value,
                std::allocator<mongo::Value> >&, bool) const
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: vtable for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: typeinfo for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldPath::FieldPath(std::string const&)
            symbol_sources:
            - src/mongo/db/pipeline/field_path.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::release() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::DocumentStorage::findField(mongo::StringData) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::DocumentSourceSort::create(boost::intrusive_ptr<mongo::ExpressionContext>
                const&, mongo::BSONObj, long long)
            symbol_sources:
            - src/mongo/db/pipeline/document_source_sort.cpp
        -   symbol_name: mongo::ValueStorage::putDocument(mongo::Document const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentSource::kill()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: typeinfo for mongo::DocumentSourceLimit
            symbol_sources:
            - src/mongo/db/pipeline/document_source_limit.cpp
        -   symbol_name: mongo::DocumentStorage::appendField(mongo::StringData)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::MutableDocument::getNestedField(mongo::FieldPath const&)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Document::Document(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Value::Value(mongo::BSONArray const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentStorage::clone() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Value::Value(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::DocumentSource::optimize()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::DocumentSource::DocumentSource(boost::intrusive_ptr<mongo::ExpressionContext>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::Value::getDocument() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
    -   file_name: src/mongo/db/pipeline/document_source_group.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::DocumentSourceGroup::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::DocumentSourceGroup::groupName
            symbol_uses:
            - src/mongo/db/pipeline/pipeline.cpp
        file_dependencies:
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::Value::deserializeForSorter(mongo::BufReader&, mongo::Value::SorterDeserializeSettings
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::AccumulatorFirst::create()
            symbol_sources:
            - src/mongo/db/pipeline/accumulator_first.cpp
        -   symbol_name: mongo::DocumentSource::coalesce(boost::intrusive_ptr<mongo::DocumentSource>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::serializeToArray(std::vector<mongo::Value,
                std::allocator<mongo::Value> >&, bool) const
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::ExpressionConstant::create(mongo::Value const&)
            symbol_sources:
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Value::compare(mongo::Value const&, mongo::Value const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::ValueStorage::putDocument(mongo::Document const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::DocumentSource::kill()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::Value::hash_combine(unsigned long&) const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: vtable for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::getcurns
            symbol_sources:
            - src/mongo/util/log.cpp
        -   symbol_name: mongo::DocumentStorage::clone() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::isMongos()
            symbol_sources:
            - src/mongo/db/server_options_helpers.cpp
            - src/mongo/db/sorter/sorter_test.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogstreamBuilder
                const&)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::Value::Value(mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::addRef() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::AccumulatorMinMax::createMax()
            symbol_sources:
            - src/mongo/db/pipeline/accumulator_min_max.cpp
        -   symbol_name: mongo::Value::serializeForSorter(mongo::_BufBuilder<mongo::TrivialAllocator>&)
                const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::AccumulatorAddToSet::create()
            symbol_sources:
            - src/mongo/db/pipeline/accumulator_add_to_set.cpp
        -   symbol_name: boost::filesystem3::detail::remove(boost::filesystem3::path
                const&, boost::system::error_code*)
            symbol_sources:
            - src/third_party/boost/libs/filesystem/v3/src/operations.cpp
        -   symbol_name: typeinfo for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::MutableDocument::MutableDocument(unsigned long)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::release() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: snappy::RawUncompress(char const*, unsigned long, char*)
            symbol_sources:
            - src/third_party/snappy/snappy.cc
        -   symbol_name: mongo::DocumentStorage::findField(mongo::StringData) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::AccumulatorLast::create()
            symbol_sources:
            - src/mongo/db/pipeline/accumulator_last.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::AccumulatorMinMax::createMin()
            symbol_sources:
            - src/mongo/db/pipeline/accumulator_min_max.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::AccumulatorPush::create()
            symbol_sources:
            - src/mongo/db/pipeline/accumulator_push.cpp
        -   symbol_name: mongo::AccumulatorAvg::create()
            symbol_sources:
            - src/mongo/db/pipeline/accumulator_avg.cpp
        -   symbol_name: mongo::DocumentSource::DocumentSource(boost::intrusive_ptr<mongo::ExpressionContext>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: vtable for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: snappy::Compress(char const*, unsigned long, std::string*)
            symbol_sources:
            - src/third_party/snappy/snappy.cc
        -   symbol_name: boost::filesystem3::detail::file_size(boost::filesystem3::path
                const&, boost::system::error_code*)
            symbol_sources:
            - src/third_party/boost/libs/filesystem/v3/src/operations.cpp
        -   symbol_name: vtable for mongo::DocumentStorage
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Expression::parseOperand(mongo::BSONElement, mongo::VariablesParseState
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ValueStorage::putVector(mongo::RCVector const*)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::Expression::ObjectCtx::ObjectCtx(int)
            symbol_sources:
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::AccumulatorSum::create()
            symbol_sources:
            - src/mongo/db/pipeline/accumulator_sum.cpp
        -   symbol_name: boost::filesystem3::detail::create_directories(boost::filesystem3::path
                const&, boost::system::error_code*)
            symbol_sources:
            - src/third_party/boost/libs/filesystem/v3/src/operations.cpp
        -   symbol_name: mongo::ExpressionFieldPath::parse(std::string const&, mongo::VariablesParseState
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::Expression::parseObject(mongo::BSONObj, mongo::Expression::ObjectCtx*,
                mongo::VariablesParseState const&)
            symbol_sources:
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::DocumentStorage::appendField(mongo::StringData)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: snappy::GetUncompressedLength(char const*, unsigned long,
                unsigned long*)
            symbol_sources:
            - src/third_party/snappy/snappy.cc
        -   symbol_name: mongo::DocumentSource::setSource(mongo::DocumentSource*)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::Value::getApproximateSize() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
    -   file_name: src/mongo/db/pipeline/document_source_limit.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::DocumentSourceLimit::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: typeinfo for mongo::DocumentSourceLimit
            symbol_uses:
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/document_source_cursor.cpp
            - src/mongo/db/pipeline/document_source_geo_near.cpp
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::DocumentSourceLimit::create(boost::intrusive_ptr<mongo::ExpressionContext>
                const&, long long)
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/db/pipeline/document_source_sort.cpp
        -   symbol_name: mongo::DocumentSourceLimit::limitName
            symbol_uses:
            - src/mongo/db/pipeline/pipeline.cpp
        file_dependencies:
        -   symbol_name: mongo::IntrusiveCounterUnsigned::addRef() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: vtable for mongo::DocumentStorage
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::DocumentSource::dispose()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: vtable for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::serializeToArray(std::vector<mongo::Value,
                std::allocator<mongo::Value> >&, bool) const
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: typeinfo for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentStorage::findField(mongo::StringData) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::ValueStorage::putDocument(mongo::Document const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::DocumentSource::kill()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentStorage::appendField(mongo::StringData)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: vtable for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::DocumentSource::setSource(mongo::DocumentSource*)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentStorage::clone() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::release() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::DocumentSource::optimize()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::DocumentSource(boost::intrusive_ptr<mongo::ExpressionContext>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
    -   file_name: src/mongo/db/pipeline/document_source_match.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::DocumentSourceMatch::matchName
            symbol_uses:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::DocumentSourceMatch::isTextQuery(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::DocumentSourceMatch::redactSafePortion() const
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::DocumentSourceMatch::getQuery() const
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::DocumentSourceMatch::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: typeinfo for mongo::DocumentSourceMatch
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/db/pipeline/pipeline.cpp
        file_dependencies:
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::Value::Value(mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::addRef() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: vtable for mongo::DocumentStorage
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Matcher2::matches(mongo::BSONObj const&, mongo::MatchDetails*)
                const
            symbol_sources:
            - src/mongo/db/matcher/matcher.cpp
        -   symbol_name: mongo::DocumentSource::dispose()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: vtable for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::serializeToArray(std::vector<mongo::Value,
                std::allocator<mongo::Value> >&, bool) const
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: typeinfo for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentStorage::findField(mongo::StringData) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::ValueStorage::putDocument(mongo::Document const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::BSONElement::getGtLtOp(int) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentSource::kill()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::Document::toBson() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::DocumentStorage::appendField(mongo::StringData)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Document::Document(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: vtable for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::ValueStorage::putVector(mongo::RCVector const*)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentSource::setSource(mongo::DocumentSource*)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentStorage::clone() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::release() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::DocumentSource::optimize()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::Matcher2::Matcher2(mongo::BSONObj const&, bool)
            symbol_sources:
            - src/mongo/db/matcher/matcher.cpp
        -   symbol_name: mongo::DocumentSource::DocumentSource(boost::intrusive_ptr<mongo::ExpressionContext>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
    -   file_name: src/mongo/db/pipeline/document_source_merge_cursors.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::DocumentSourceMergeCursors::getCursors()
            symbol_uses:
            - src/mongo/db/pipeline/document_source_sort.cpp
        -   symbol_name: typeinfo for mongo::DocumentSourceMergeCursors
            symbol_uses:
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/pipeline_d.cpp
        -   symbol_name: mongo::DocumentSourceMergeCursors::create(std::vector<std::pair<mongo::ConnectionString,
                long long>, std::allocator<std::pair<mongo::ConnectionString, long
                long> > > const&, boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
        -   symbol_name: mongo::DocumentSourceMergeCursors::name
            symbol_uses:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::DocumentSourceMergeCursors::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_uses:
            - src/mongo/db/pipeline/pipeline.cpp
        file_dependencies:
        -   symbol_name: vtable for mongo::ScopedDbConnection
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DocumentSource::coalesce(boost::intrusive_ptr<mongo::DocumentSource>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::serializeToArray(std::vector<mongo::Value,
                std::allocator<mongo::Value> >&, bool) const
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBClientCursor::more()
            symbol_sources:
            - src/mongo/client/dbclientcursor.cpp
        -   symbol_name: mongo::ValueStorage::putDocument(mongo::Document const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::DBClientCursor::_finishConsInit()
            symbol_sources:
            - src/mongo/client/dbclientcursor.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentSource::kill()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::pool
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: vtable for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::DocumentStorage::clone() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::ScopedDbConnection::_setSocketTimeout()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::addRef() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: vtable for mongo::DocumentStorage
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: typeinfo for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::release() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::DBClientCursor::initLazy(bool)
            symbol_sources:
            - src/mongo/client/dbclientcursor.cpp
        -   symbol_name: mongo::DBClientCursor::next()
            symbol_sources:
            - src/mongo/client/dbclientcursor.cpp
        -   symbol_name: mongo::DBClientCursor::initLazyFinish(bool&)
            symbol_sources:
            - src/mongo/client/dbclientcursor.cpp
        -   symbol_name: vtable for mongo::DBClientCursor
            symbol_sources:
            - src/mongo/client/dbclientcursor.cpp
        -   symbol_name: mongo::DocumentStorage::findField(mongo::StringData) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBConnectionPool::get(mongo::ConnectionString const&,
                double)
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::DocumentSource::optimize()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::DocumentSource(boost::intrusive_ptr<mongo::ExpressionContext>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: vtable for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DBClientCursor::~DBClientCursor()
            symbol_sources:
            - src/mongo/client/dbclientcursor.cpp
        -   symbol_name: mongo::ValueStorage::putVector(mongo::RCVector const*)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::typeName(mongo::BSONType)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::ValueStorage::putString(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::ConnectionString::_finishInit()
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::Document::fromBsonWithMetaData(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::DocumentStorage::appendField(mongo::StringData)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::ScopedDbConnection::~ScopedDbConnection()
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::AScopedConnection::_numConnections
            symbol_sources:
            - src/mongo/client/connpool.cpp
        -   symbol_name: mongo::DBConnectionPool::release(std::string const&, mongo::DBClientBase*)
            symbol_sources:
            - src/mongo/client/connpool.cpp
    -   file_name: src/mongo/db/pipeline/document_source_out.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: typeinfo for mongo::DocumentSourceOut
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::DocumentSourceOut::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_uses:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::DocumentSourceOut::outName
            symbol_uses:
            - src/mongo/db/pipeline/pipeline.cpp
        file_dependencies:
        -   symbol_name: mongo::DocumentSource::coalesce(boost::intrusive_ptr<mongo::DocumentSource>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::serializeToArray(std::vector<mongo::Value,
                std::allocator<mongo::Value> >&, bool) const
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ValueStorage::putDocument(mongo::Document const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentSource::kill()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: vtable for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::getcurns
            symbol_sources:
            - src/mongo/util/log.cpp
        -   symbol_name: mongo::DocumentStorage::clone() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogstreamBuilder
                const&)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::addRef() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: vtable for mongo::DocumentStorage
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::DocumentSource::dispose()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: typeinfo for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::release() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::DocumentStorage::findField(mongo::StringData) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Document::toBson() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::DocumentSource::optimize()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::DocumentSource(boost::intrusive_ptr<mongo::ExpressionContext>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: vtable for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::typeName(mongo::BSONType)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ValueStorage::putString(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::DBClientWithCommands::getLastErrorString(mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::DocumentStorage::appendField(mongo::StringData)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Document::Document(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::DocumentSource::setSource(mongo::DocumentSource*)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
    -   file_name: src/mongo/db/pipeline/document_source_project.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::DocumentSourceProject::projectName
            symbol_uses:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::DocumentSourceProject::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/db/pipeline/pipeline.cpp
        file_dependencies:
        -   symbol_name: mongo::IntrusiveCounterUnsigned::addRef() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: vtable for mongo::DocumentStorage
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: typeinfo for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::ExpressionObject::addToDocument(mongo::MutableDocument&,
                mongo::Document const&, mongo::Variables*) const
            symbol_sources:
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::DocumentSource::coalesce(boost::intrusive_ptr<mongo::DocumentSource>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::dispose()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: vtable for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::serializeToArray(std::vector<mongo::Value,
                std::allocator<mongo::Value> >&, bool) const
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: typeinfo for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::ExpressionObject::getSizeHint() const
            symbol_sources:
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::MutableDocument::MutableDocument(unsigned long)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentStorage::findField(mongo::StringData) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::ValueStorage::putDocument(mongo::Document const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Expression::parseObject(mongo::BSONObj, mongo::Expression::ObjectCtx*,
                mongo::VariablesParseState const&)
            symbol_sources:
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: typeinfo for mongo::ExpressionObject
            symbol_sources:
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::DocumentStorage::appendField(mongo::StringData)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentSource::setSource(mongo::DocumentSource*)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentStorage::clone() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::release() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::Expression::ObjectCtx::ObjectCtx(int)
            symbol_sources:
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::DocumentSource::kill()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::DocumentSource::DocumentSource(boost::intrusive_ptr<mongo::ExpressionContext>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
    -   file_name: src/mongo/db/pipeline/document_source_redact.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::DocumentSourceRedact::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_uses:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: typeinfo for mongo::DocumentSourceRedact
            symbol_uses:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::DocumentSourceRedact::redactName
            symbol_uses:
            - src/mongo/db/pipeline/pipeline.cpp
        file_dependencies:
        -   symbol_name: mongo::VariablesParseState::defineVariable(mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::ValueStorage::putString(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: vtable for mongo::DocumentStorage
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::DocumentSource::coalesce(boost::intrusive_ptr<mongo::DocumentSource>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::dispose()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: vtable for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::serializeToArray(std::vector<mongo::Value,
                std::allocator<mongo::Value> >&, bool) const
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: typeinfo for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::release() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::Value::compare(mongo::Value const&, mongo::Value const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::DocumentStorage::findField(mongo::StringData) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::ValueStorage::putDocument(mongo::Document const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::Expression::parseOperand(mongo::BSONElement, mongo::VariablesParseState
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::DocumentSource::kill()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::Value::toString() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::DocumentStorage::appendField(mongo::StringData)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::addRef() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::Variables::setValue(unsigned long, mongo::Value const&)
            symbol_sources:
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: vtable for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::ValueStorage::putVector(mongo::RCVector const*)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentSource::setSource(mongo::DocumentSource*)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentStorage::clone() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Variables::getDocument(unsigned long) const
            symbol_sources:
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentSource::DocumentSource(boost::intrusive_ptr<mongo::ExpressionContext>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
    -   file_name: src/mongo/db/pipeline/document_source_skip.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::DocumentSourceSkip::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_uses:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: typeinfo for mongo::DocumentSourceSkip
            symbol_uses:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::DocumentSourceSkip::skipName
            symbol_uses:
            - src/mongo/db/pipeline/pipeline.cpp
        file_dependencies:
        -   symbol_name: mongo::IntrusiveCounterUnsigned::addRef() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: vtable for mongo::DocumentStorage
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::DocumentSource::dispose()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: vtable for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::serializeToArray(std::vector<mongo::Value,
                std::allocator<mongo::Value> >&, bool) const
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: typeinfo for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::release() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::DocumentSource::optimize()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentStorage::findField(mongo::StringData) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::ValueStorage::putDocument(mongo::Document const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::DocumentSource::kill()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentStorage::appendField(mongo::StringData)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: vtable for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentSource::setSource(mongo::DocumentSource*)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentStorage::clone() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentSource::DocumentSource(boost::intrusive_ptr<mongo::ExpressionContext>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
    -   file_name: src/mongo/db/pipeline/document_source_sort.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: typeinfo for mongo::DocumentSourceSort
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/db/pipeline/pipeline_d.cpp
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::DocumentSourceSort::sortName
            symbol_uses:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::DocumentSourceSort::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::DocumentSourceSort::create(boost::intrusive_ptr<mongo::ExpressionContext>
                const&, mongo::BSONObj, long long)
            symbol_uses:
            - src/mongo/db/pipeline/document_source_geo_near.cpp
        -   symbol_name: mongo::DocumentSourceSort::serializeSortKey(bool) const
            symbol_uses:
            - src/mongo/db/pipeline/pipeline_d.cpp
        file_dependencies:
        -   symbol_name: mongo::Value::deserializeForSorter(mongo::BufReader&, mongo::Value::SorterDeserializeSettings
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Value::compare(mongo::Value const&, mongo::Value const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::ValueStorage::putDocument(mongo::Document const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::DocumentSource::kill()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::FieldPath::getPath(bool) const
            symbol_sources:
            - src/mongo/db/pipeline/field_path.cpp
        -   symbol_name: vtable for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::getcurns
            symbol_sources:
            - src/mongo/util/log.cpp
        -   symbol_name: mongo::DocumentStorage::clone() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::isMongos()
            symbol_sources:
            - src/mongo/db/server_options_helpers.cpp
            - src/mongo/db/sorter/sorter_test.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::FieldPath::tail() const
            symbol_sources:
            - src/mongo/db/pipeline/field_path.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogstreamBuilder
                const&)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::addRef() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: typeinfo for mongo::DocumentSourceCommandShards
            symbol_sources:
            - src/mongo/db/pipeline/document_source_command_shards.cpp
        -   symbol_name: mongo::Value::serializeForSorter(mongo::_BufBuilder<mongo::TrivialAllocator>&)
                const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: boost::filesystem3::detail::remove(boost::filesystem3::path
                const&, boost::system::error_code*)
            symbol_sources:
            - src/third_party/boost/libs/filesystem/v3/src/operations.cpp
        -   symbol_name: typeinfo for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::release() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: snappy::RawUncompress(char const*, unsigned long, char*)
            symbol_sources:
            - src/third_party/snappy/snappy.cc
        -   symbol_name: mongo::DocumentStorage::findField(mongo::StringData) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: typeinfo for mongo::DocumentSourceLimit
            symbol_sources:
            - src/mongo/db/pipeline/document_source_limit.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentSource::optimize()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::DocumentSource(boost::intrusive_ptr<mongo::ExpressionContext>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: vtable for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: snappy::Compress(char const*, unsigned long, std::string*)
            symbol_sources:
            - src/third_party/snappy/snappy.cc
        -   symbol_name: mongo::DocumentSourceLimit::create(boost::intrusive_ptr<mongo::ExpressionContext>
                const&, long long)
            symbol_sources:
            - src/mongo/db/pipeline/document_source_limit.cpp
        -   symbol_name: mongo::Value::operator[](unsigned long) const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: boost::filesystem3::detail::file_size(boost::filesystem3::path
                const&, boost::system::error_code*)
            symbol_sources:
            - src/third_party/boost/libs/filesystem/v3/src/operations.cpp
        -   symbol_name: mongo::DocumentSourceCommandShards::getArrays()
            symbol_sources:
            - src/mongo/db/pipeline/document_source_command_shards.cpp
        -   symbol_name: vtable for mongo::DocumentStorage
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::Document::getApproximateSize() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::ValueStorage::putVector(mongo::RCVector const*)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: typeinfo for mongo::DocumentSourceMergeCursors
            symbol_sources:
            - src/mongo/db/pipeline/document_source_merge_cursors.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: typeinfo for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: typeinfo for mongo::ExpressionFieldPath
            symbol_sources:
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::Document::fromBsonWithMetaData(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::ExpressionFieldPath::parse(std::string const&, mongo::VariablesParseState
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::Document::serializeForSorter(mongo::_BufBuilder<mongo::TrivialAllocator>&)
                const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Document::deserializeForSorter(mongo::BufReader&,
                mongo::Document::SorterDeserializeSettings const&)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: vtable for mongo::ExpressionMeta
            symbol_sources:
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::DocumentStorage::appendField(mongo::StringData)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::DocumentSourceMergeCursors::getCursors()
            symbol_sources:
            - src/mongo/db/pipeline/document_source_merge_cursors.cpp
        -   symbol_name: mongo::Document::Document(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: boost::filesystem3::detail::create_directories(boost::filesystem3::path
                const&, boost::system::error_code*)
            symbol_sources:
            - src/third_party/boost/libs/filesystem/v3/src/operations.cpp
        -   symbol_name: snappy::GetUncompressedLength(char const*, unsigned long,
                unsigned long*)
            symbol_sources:
            - src/third_party/snappy/snappy.cc
        -   symbol_name: mongo::DocumentSource::setSource(mongo::DocumentSource*)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::Value::getApproximateSize() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
    -   file_name: src/mongo/db/pipeline/document_source_unwind.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::DocumentSourceUnwind::unwindName
            symbol_uses:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::DocumentSourceUnwind::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: typeinfo for mongo::DocumentSourceUnwind
            symbol_uses:
            - src/mongo/db/pipeline/pipeline.cpp
        file_dependencies:
        -   symbol_name: mongo::Value::operator[](unsigned long) const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::addRef() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::ValueStorage::putString(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: vtable for mongo::DocumentStorage
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::DocumentSource::coalesce(boost::intrusive_ptr<mongo::DocumentSource>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::dispose()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: vtable for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentSource::serializeToArray(std::vector<mongo::Value,
                std::allocator<mongo::Value> >&, bool) const
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: typeinfo for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::MutableDocument::getNestedField(std::vector<mongo::Position,
                std::allocator<mongo::Position> > const&)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::release() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::FieldPath::FieldPath(std::string const&)
            symbol_sources:
            - src/mongo/db/pipeline/field_path.cpp
        -   symbol_name: mongo::DocumentStorage::findField(mongo::StringData) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::ValueStorage::putDocument(mongo::Document const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::DocumentSource::kill()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentStorage::appendField(mongo::StringData)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Expression::removeFieldPrefix(std::string const&)
            symbol_sources:
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldPath::getPath(bool) const
            symbol_sources:
            - src/mongo/db/pipeline/field_path.cpp
        -   symbol_name: vtable for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentSource::setSource(mongo::DocumentSource*)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::DocumentStorage::clone() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Document::getNestedField(mongo::FieldPath const&,
                std::vector<mongo::Position, std::allocator<mongo::Position> >*) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::DocumentSource::optimize()
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::typeName(mongo::BSONType)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::DocumentSource::DocumentSource(boost::intrusive_ptr<mongo::ExpressionContext>
                const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
-   group_title: 'TODO: Name this group'
    group_description: An expression represents a stateless operation.  For example,
        in an operation such as $add, you provide a set of values, and immediately
        recieve a result
    group_files:
    - src/mongo/db/pipeline/expression.cpp
    - src/mongo/db/pipeline/expression.h
    group_generated_data:
    -   file_name: src/mongo/db/pipeline/expression.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ExpressionObject::getSizeHint() const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_project.cpp
        -   symbol_name: mongo::Expression::ObjectCtx::ObjectCtx(int)
            symbol_uses:
            - src/mongo/db/pipeline/document_source_project.cpp
            - src/mongo/dbtests/expressiontests.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
        -   symbol_name: mongo::ExpressionConstant::parse(mongo::BSONElement, mongo::VariablesParseState
                const&)
            symbol_uses:
            - src/mongo/dbtests/expressiontests.cpp
        -   symbol_name: mongo::ExpressionNary::addDependencies(mongo::DepsTracker*,
                std::vector<std::string, std::allocator<std::string> >*) const
            symbol_uses:
            - src/mongo/dbtests/expressiontests.cpp
        -   symbol_name: mongo::ExpressionNary::addOperand(boost::intrusive_ptr<mongo::Expression>
                const&)
            symbol_uses:
            - src/mongo/dbtests/expressiontests.cpp
        -   symbol_name: mongo::Expression::removeFieldPrefix(std::string const&)
            symbol_uses:
            - src/mongo/db/pipeline/document_source_unwind.cpp
        -   symbol_name: mongo::ExpressionFieldPath::create(std::string const&)
            symbol_uses:
            - src/mongo/dbtests/expressiontests.cpp
        -   symbol_name: mongo::Expression::parseOperand(mongo::BSONElement, mongo::VariablesParseState
                const&)
            symbol_uses:
            - src/mongo/dbtests/expressiontests.cpp
            - src/mongo/db/pipeline/document_source_redact.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
        -   symbol_name: mongo::ExpressionNary::optimize()
            symbol_uses:
            - src/mongo/dbtests/expressiontests.cpp
        -   symbol_name: vtable for mongo::ExpressionMeta
            symbol_uses:
            - src/mongo/db/pipeline/document_source_sort.cpp
        -   symbol_name: vtable for mongo::ExpressionAdd
            symbol_uses:
            - src/mongo/dbtests/expressiontests.cpp
        -   symbol_name: mongo::ExpressionFieldPath::parse(std::string const&, mongo::VariablesParseState
                const&)
            symbol_uses:
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
        -   symbol_name: mongo::ExpressionCoerceToBool::create(boost::intrusive_ptr<mongo::Expression>
                const&)
            symbol_uses:
            - src/mongo/dbtests/expressiontests.cpp
        -   symbol_name: vtable for mongo::ExpressionNary
            symbol_uses:
            - src/mongo/dbtests/expressiontests.cpp
        -   symbol_name: mongo::ExpressionObject::addField(mongo::FieldPath const&,
                boost::intrusive_ptr<mongo::Expression> const&)
            symbol_uses:
            - src/mongo/dbtests/expressiontests.cpp
        -   symbol_name: typeinfo for mongo::ExpressionNary
            symbol_uses:
            - src/mongo/dbtests/expressiontests.cpp
        -   symbol_name: typeinfo for mongo::ExpressionObject
            symbol_uses:
            - src/mongo/db/pipeline/document_source_project.cpp
        -   symbol_name: mongo::ExpressionObject::addToDocument(mongo::MutableDocument&,
                mongo::Document const&, mongo::Variables*) const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_project.cpp
            - src/mongo/dbtests/expressiontests.cpp
        -   symbol_name: mongo::ExpressionConstant::create(mongo::Value const&)
            symbol_uses:
            - src/mongo/dbtests/expressiontests.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
        -   symbol_name: mongo::Variables::setValue(unsigned long, mongo::Value const&)
            symbol_uses:
            - src/mongo/db/pipeline/document_source_redact.cpp
        -   symbol_name: mongo::ExpressionNary::serialize(bool) const
            symbol_uses:
            - src/mongo/dbtests/expressiontests.cpp
        -   symbol_name: vtable for mongo::ExpressionAnd
            symbol_uses:
            - src/mongo/dbtests/expressiontests.cpp
        -   symbol_name: mongo::ExpressionObject::includePath(std::string const&)
            symbol_uses:
            - src/mongo/dbtests/expressiontests.cpp
        -   symbol_name: mongo::Expression::parseObject(mongo::BSONObj, mongo::Expression::ObjectCtx*,
                mongo::VariablesParseState const&)
            symbol_uses:
            - src/mongo/db/pipeline/document_source_project.cpp
            - src/mongo/dbtests/expressiontests.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
        -   symbol_name: mongo::ExpressionObject::create()
            symbol_uses:
            - src/mongo/dbtests/expressiontests.cpp
        -   symbol_name: mongo::VariablesParseState::defineVariable(mongo::StringData
                const&)
            symbol_uses:
            - src/mongo/db/pipeline/document_source_redact.cpp
        -   symbol_name: typeinfo for mongo::ExpressionFieldPath
            symbol_uses:
            - src/mongo/db/pipeline/document_source_sort.cpp
        -   symbol_name: mongo::ExpressionObject::createRoot()
            symbol_uses:
            - src/mongo/dbtests/expressiontests.cpp
        -   symbol_name: mongo::Variables::getDocument(unsigned long) const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_redact.cpp
        -   symbol_name: mongo::Expression::parseExpression(mongo::BSONElement, mongo::VariablesParseState
                const&)
            symbol_uses:
            - src/mongo/dbtests/expressiontests.cpp
        file_dependencies:
        -   symbol_name: mongo::FieldPath::FieldPath(std::string const&)
            symbol_sources:
            - src/mongo/db/pipeline/field_path.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Value::compare(mongo::Value const&, mongo::Value const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::ValueStorage::putDocument(mongo::Document const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Value::hash_combine(unsigned long&) const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::FieldPath::getPath(bool) const
            symbol_sources:
            - src/mongo/db/pipeline/field_path.cpp
        -   symbol_name: vtable for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::DocumentStorage::clone() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::FieldPath::tail() const
            symbol_sources:
            - src/mongo/db/pipeline/field_path.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::GlobalInitializerRegisterer::GlobalInitializerRegisterer(std::string
                const&, boost::function<mongo::Status (mongo::InitializerContext*)>
                const&, std::vector<std::string, std::allocator<std::string> > const&,
                std::vector<std::string, std::allocator<std::string> > const&)
            symbol_sources:
            - src/mongo/base/global_initializer_registerer.cpp
        -   symbol_name: mongo::Value::getDocument() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::Value::Value(mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::addRef() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: vtable for mongo::DocumentStorage
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::MutableDocument::MutableDocument(unsigned long)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::release() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::DocumentStorage::findField(mongo::StringData) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Value::coerceToTm() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::typeName(mongo::BSONType)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::Value::coerceToBool() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::Value::getWidestNumeric(mongo::BSONType, mongo::BSONType)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::Value::coerceToInt() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::Value::createIntOrLong(long long)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::Value::coerceToDate() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::Value::coerceToDouble() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::ValueStorage::putVector(mongo::RCVector const*)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::ValueStorage::putString(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: typeinfo for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::FieldPath::FieldPath(std::vector<std::string, std::allocator<std::string>
                > const&)
            symbol_sources:
            - src/mongo/db/pipeline/field_path.cpp
        -   symbol_name: mongo::Value::coerceToLong() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::DocumentStorage::appendField(mongo::StringData)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::StringData::Hasher::operator()(mongo::StringData const&)
                const
            symbol_sources:
            - src/mongo/base/string_data.cpp
        -   symbol_name: mongo::_makeStringVector(int, ...)
            symbol_sources:
            - src/mongo/base/make_string_vector.cpp
        -   symbol_name: mongo::Value::coerceToString() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
    -   file_name: src/mongo/db/pipeline/expression.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
-   group_title: 'TODO: Name this group'
    group_description: This file is currently misnamed.  The context for a pipeline
        stage, such as whether its being run on a Source (source shard) or a Merger
        (primary shard responsible for merging results), whether there has been an
        interrupt, and other global information.
    group_files:
    - src/mongo/db/pipeline/expression_context.h
    group_generated_data:
    -   file_name: src/mongo/db/pipeline/expression_context.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
-   group_title: 'TODO: Name this group'
    group_description: Wrapper classes for parsed and validate dotted field names
    group_files:
    - src/mongo/db/pipeline/field_path.cpp
    - src/mongo/db/pipeline/field_path.h
    group_generated_data:
    -   file_name: src/mongo/db/pipeline/field_path.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::FieldPath::FieldPath(std::string const&)
            symbol_uses:
            - src/mongo/dbtests/documenttests.cpp
            - src/mongo/dbtests/pipelinetests.cpp
            - src/mongo/dbtests/expressiontests.cpp
            - src/mongo/db/pipeline/document_source_unwind.cpp
            - src/mongo/db/pipeline/document_source_geo_near.cpp
            - src/mongo/db/pipeline/expression.cpp
            - src/mongo/db/pipeline/dependencies.cpp
        -   symbol_name: mongo::FieldPath::getPath(bool) const
            symbol_uses:
            - src/mongo/dbtests/pipelinetests.cpp
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/document_source_geo_near.cpp
            - src/mongo/db/pipeline/expression.cpp
            - src/mongo/db/pipeline/document_source_unwind.cpp
        -   symbol_name: mongo::FieldPath::FieldPath(std::vector<std::string, std::allocator<std::string>
                > const&)
            symbol_uses:
            - src/mongo/dbtests/pipelinetests.cpp
            - src/mongo/db/pipeline/expression.cpp
        -   symbol_name: mongo::FieldPath::tail() const
            symbol_uses:
            - src/mongo/dbtests/pipelinetests.cpp
            - src/mongo/db/pipeline/expression.cpp
            - src/mongo/db/pipeline/document_source_sort.cpp
        file_dependencies:
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
    -   file_name: src/mongo/db/pipeline/field_path.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
-   group_title: 'TODO: Name this group'
    group_description: These files contain the central entry point for aggregation.  While
        the initial entry points for mongos and mongod differ, most of the aggregation
        code is shared between them.  This holds the two paths together, and also
        contains the optimization code
    group_files:
    - src/mongo/db/pipeline/pipeline.cpp
    - src/mongo/db/pipeline/pipeline.h
    group_generated_data:
    -   file_name: src/mongo/db/pipeline/pipeline.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::Pipeline::addRequiredPrivileges(mongo::Command*, std::string
                const&, mongo::BSONObj, std::vector<mongo::Privilege, std::allocator<mongo::Privilege>
                >*)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/db/commands/pipeline_command.cpp
        -   symbol_name: mongo::Pipeline::addInitialSource(boost::intrusive_ptr<mongo::DocumentSource>)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/db/pipeline/pipeline_d.cpp
        -   symbol_name: mongo::Pipeline::getDependencies(mongo::BSONObj const&) const
            symbol_uses:
            - src/mongo/db/pipeline/pipeline_d.cpp
        -   symbol_name: mongo::Pipeline::splitForSharded()
            symbol_uses:
            - src/mongo/dbtests/pipelinetests.cpp
            - src/mongo/s/commands_public.cpp
        -   symbol_name: mongo::Pipeline::serialize() const
            symbol_uses:
            - src/mongo/dbtests/pipelinetests.cpp
            - src/mongo/s/commands_public.cpp
        -   symbol_name: mongo::Pipeline::stitch()
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/db/commands/pipeline_command.cpp
        -   symbol_name: mongo::Pipeline::parseCommand(std::string&, mongo::BSONObj
                const&, boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_uses:
            - src/mongo/dbtests/pipelinetests.cpp
            - src/mongo/s/commands_public.cpp
            - src/mongo/db/commands/pipeline_command.cpp
        -   symbol_name: mongo::Pipeline::run(mongo::BSONObjBuilder&)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/db/commands/pipeline_command.cpp
        -   symbol_name: mongo::Pipeline::canRunInMongos() const
            symbol_uses:
            - src/mongo/s/commands_public.cpp
        -   symbol_name: mongo::Pipeline::getInitialQuery() const
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/db/pipeline/pipeline_d.cpp
        -   symbol_name: mongo::Pipeline::writeExplainOps() const
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/db/commands/pipeline_command.cpp
        -   symbol_name: mongo::Pipeline::commandName
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/db/commands/pipeline_command.cpp
        file_dependencies:
        -   symbol_name: typeinfo for mongo::DocumentSourceSort
            symbol_sources:
            - src/mongo/db/pipeline/document_source_sort.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentSourceUnwind::unwindName
            symbol_sources:
            - src/mongo/db/pipeline/document_source_unwind.cpp
        -   symbol_name: mongo::ActionType::insert
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::Privilege::Privilege(mongo::ResourcePattern const&,
                mongo::ActionSet const&)
            symbol_sources:
            - src/mongo/db/auth/privilege.cpp
        -   symbol_name: mongo::DocumentSourceLimit::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source_limit.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::DocumentSourceMatch::matchName
            symbol_sources:
            - src/mongo/db/pipeline/document_source_match.cpp
        -   symbol_name: mongo::DocumentStorage::clone() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentSourceLimit::limitName
            symbol_sources:
            - src/mongo/db/pipeline/document_source_limit.cpp
        -   symbol_name: mongo::Privilege::Privilege(mongo::ResourcePattern const&,
                mongo::ActionType const&)
            symbol_sources:
            - src/mongo/db/auth/privilege.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::addRef() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::DocumentSourceRedact::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source_redact.cpp
        -   symbol_name: mongo::DocumentSourceOut::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source_out.cpp
        -   symbol_name: vtable for mongo::DocumentStorage
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::DocumentSourceMatch::getQuery() const
            symbol_sources:
            - src/mongo/db/pipeline/document_source_match.cpp
        -   symbol_name: typeinfo for mongo::DocumentSourceRedact
            symbol_sources:
            - src/mongo/db/pipeline/document_source_redact.cpp
        -   symbol_name: typeinfo for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: mongo::IntrusiveCounterUnsigned::release() const
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::ActionSet::addAction(mongo::ActionType const&)
            symbol_sources:
            - src/mongo/db/auth/action_set.cpp
        -   symbol_name: mongo::BSONElement::Array() const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::DocumentStorage::findField(mongo::StringData) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::LiteParsedQuery::cmdOptionMaxTimeMS
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: typeinfo for mongo::DocumentSourceLimit
            symbol_sources:
            - src/mongo/db/pipeline/document_source_limit.cpp
        -   symbol_name: mongo::DocumentSourceMatch::isTextQuery(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source_match.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ActionType::remove
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentSourceMatch::redactSafePortion() const
            symbol_sources:
            - src/mongo/db/pipeline/document_source_match.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::DocumentSourceMergeCursors::name
            symbol_sources:
            - src/mongo/db/pipeline/document_source_merge_cursors.cpp
        -   symbol_name: mongo::DocumentSourceSort::sortName
            symbol_sources:
            - src/mongo/db/pipeline/document_source_sort.cpp
        -   symbol_name: mongo::Command::parseResourcePattern(std::string const&,
                mongo::BSONObj const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::DocumentSourceOut::outName
            symbol_sources:
            - src/mongo/db/pipeline/document_source_out.cpp
        -   symbol_name: mongo::DocumentSourceGroup::groupName
            symbol_sources:
            - src/mongo/db/pipeline/document_source_group.cpp
        -   symbol_name: mongo::Document::toBson(mongo::BSONObjBuilder*) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::DocumentSourceProject::projectName
            symbol_sources:
            - src/mongo/db/pipeline/document_source_project.cpp
        -   symbol_name: mongo::DocumentSourceGeoNear::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source_geo_near.cpp
        -   symbol_name: mongo::ResourcePattern::toString() const
            symbol_sources:
            - src/mongo/db/auth/resource_pattern.cpp
        -   symbol_name: mongo::ValueStorage::putVector(mongo::RCVector const*)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::DocumentSourceProject::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source_project.cpp
        -   symbol_name: mongo::typeName(mongo::BSONType)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::ActionType::find
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ValueStorage::putString(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::DocumentSourceGeoNear::geoNearName
            symbol_sources:
            - src/mongo/db/pipeline/document_source_geo_near.cpp
        -   symbol_name: mongo::DocumentSourceGroup::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source_group.cpp
        -   symbol_name: typeinfo for mongo::IntrusiveCounterUnsigned
            symbol_sources:
            - src/mongo/util/intrusive_counter.cpp
        -   symbol_name: mongo::DocumentSourceRedact::redactName
            symbol_sources:
            - src/mongo/db/pipeline/document_source_redact.cpp
        -   symbol_name: mongo::DocumentSourceSort::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source_sort.cpp
        -   symbol_name: mongo::DocumentSourceMergeCursors::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source_merge_cursors.cpp
        -   symbol_name: mongo::DocumentSourceMatch::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source_match.cpp
        -   symbol_name: mongo::DocumentSourceSkip::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source_skip.cpp
        -   symbol_name: mongo::DocumentStorage::appendField(mongo::StringData)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::DocumentSourceUnwind::createFromBson(mongo::BSONElement,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source_unwind.cpp
        -   symbol_name: typeinfo for mongo::DocumentSourceMatch
            symbol_sources:
            - src/mongo/db/pipeline/document_source_match.cpp
        -   symbol_name: typeinfo for mongo::DocumentSourceOut
            symbol_sources:
            - src/mongo/db/pipeline/document_source_out.cpp
        -   symbol_name: mongo::DepsTracker::toProjection() const
            symbol_sources:
            - src/mongo/db/pipeline/dependencies.cpp
        -   symbol_name: typeinfo for mongo::DocumentSourceSkip
            symbol_sources:
            - src/mongo/db/pipeline/document_source_skip.cpp
        -   symbol_name: typeinfo for mongo::DocumentSourceUnwind
            symbol_sources:
            - src/mongo/db/pipeline/document_source_unwind.cpp
        -   symbol_name: mongo::DocumentSourceSkip::skipName
            symbol_sources:
            - src/mongo/db/pipeline/document_source_skip.cpp
    -   file_name: src/mongo/db/pipeline/pipeline.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
-   group_title: 'TODO: Name this group'
    group_description: Mongod specific extensions to aggregation
    group_files:
    - src/mongo/db/pipeline/pipeline_d.cpp
    - src/mongo/db/pipeline/pipeline_d.h
    group_generated_data:
    -   file_name: src/mongo/db/pipeline/pipeline_d.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::PipelineD::prepareCursorSource(boost::intrusive_ptr<mongo::Pipeline>
                const&, boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_uses:
            - src/mongo/db/commands/pipeline_command.cpp
        file_dependencies:
        -   symbol_name: mongo::ShardedConnectionInfo::addHook()
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::Client::ReadContext::ReadContext(std::string const&,
                std::string const&)
            symbol_sources:
            - src/mongo/db/client.cpp
        -   symbol_name: typeinfo for mongo::DocumentSourceSort
            symbol_sources:
            - src/mongo/db/pipeline/document_source_sort.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DepsTracker::toParsedDeps() const
            symbol_sources:
            - src/mongo/db/pipeline/dependencies.cpp
        -   symbol_name: vtable for mongo::DBClientWithCommands
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CanonicalQuery::canonicalize(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, mongo::CanonicalQuery**)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::Pipeline::addInitialSource(boost::intrusive_ptr<mongo::DocumentSource>)
            symbol_sources:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::DBClientBase::ConnectionIdSequence
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::DBDirectClient
            symbol_sources:
            - src/mongo/db/instance.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: typeinfo for mongo::DocumentSource
            symbol_sources:
            - src/mongo/db/pipeline/document_source.cpp
        -   symbol_name: vtable for mongo::DBClientBase
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::DocumentSourceBsonArray::create(mongo::BSONObj const&,
                boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source_bson_array.cpp
        -   symbol_name: mongo::shardingState
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::Pipeline::getDependencies(mongo::BSONObj const&) const
            symbol_sources:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::Document::toBson() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentSourceCursor::setProjection(mongo::BSONObj
                const&, boost::optional<mongo::ParsedDeps> const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source_cursor.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::Pipeline::getInitialQuery() const
            symbol_sources:
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::ShardingState::getVersion(std::string const&) const
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::ClientCursor::~ClientCursor()
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::Client::Context::~Context()
            symbol_sources:
            - src/mongo/db/client.cpp
        -   symbol_name: mongo::Collection::isCapped() const
            symbol_sources:
            - src/mongo/db/catalog/collection.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::DocumentSourceCursor::create(std::string const&, long
                long, boost::intrusive_ptr<mongo::ExpressionContext> const&)
            symbol_sources:
            - src/mongo/db/pipeline/document_source_cursor.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: typeinfo for mongo::DocumentSourceMergeCursors
            symbol_sources:
            - src/mongo/db/pipeline/document_source_merge_cursors.cpp
        -   symbol_name: mongo::DocumentSourceSort::serializeSortKey(bool) const
            symbol_sources:
            - src/mongo/db/pipeline/document_source_sort.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::getRunner(mongo::CanonicalQuery*, mongo::Runner**,
                unsigned long)
            symbol_sources:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: mongo::ClientCursor::ClientCursor(mongo::Collection const*,
                mongo::Runner*, int, mongo::BSONObj)
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: mongo::storageGlobalParams
            symbol_sources:
            - src/mongo/db/storage_options.cpp
        -   symbol_name: mongo::DepsTracker::toProjection() const
            symbol_sources:
            - src/mongo/db/pipeline/dependencies.cpp
    -   file_name: src/mongo/db/pipeline/pipeline_d.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
-   group_title: 'TODO: Name this group'
    group_description: Optimizations that are done as part of the aggregation process.  There
        are two optimization types, local and sharded.  In a sharded cluster, first
        the local optimizations are done which rewrites the pipeline stages, then
        the sharded optimizations are done, which controls exactly what gets farmed
        out to the source shards, then each source shard runs the local optimization
        again
    group_files:
    - src/mongo/db/pipeline/pipeline_optimizations.h
    group_generated_data:
    -   file_name: src/mongo/db/pipeline/pipeline_optimizations.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
-   group_title: 'TODO: Name this group'
    group_description: Code to track what information is needed in the aggregation
        pipeline.  For example, for some queries only certain fields of the document
        are actually needed
    group_files:
    - src/mongo/db/pipeline/dependencies.cpp
    - src/mongo/db/pipeline/dependencies.h
    group_generated_data:
    -   file_name: src/mongo/db/pipeline/dependencies.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::DepsTracker::toParsedDeps() const
            symbol_uses:
            - src/mongo/db/pipeline/pipeline_d.cpp
        -   symbol_name: mongo::ParsedDeps::extractFields(mongo::BSONObj const&) const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
        -   symbol_name: mongo::DepsTracker::toProjection() const
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/db/pipeline/pipeline_d.cpp
            - src/mongo/db/pipeline/pipeline.cpp
        file_dependencies:
        -   symbol_name: mongo::Value::Value(mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::FieldPath::FieldPath(std::string const&)
            symbol_sources:
            - src/mongo/db/pipeline/field_path.cpp
        -   symbol_name: vtable for mongo::DocumentStorage
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::Document::metaFieldTextScore
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::MutableDocument::MutableDocument(unsigned long)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DocumentStorage::findField(mongo::StringData) const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::DocumentStorage::appendField(mongo::StringData)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::MutableDocument::getNestedField(mongo::FieldPath const&)
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ValueStorage::putVector(mongo::RCVector const*)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ValueStorage::putDocument(mongo::Document const&)
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
        -   symbol_name: mongo::DocumentStorage::clone() const
            symbol_sources:
            - src/mongo/db/pipeline/document.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::Value::getDocument() const
            symbol_sources:
            - src/mongo/db/pipeline/value.cpp
    -   file_name: src/mongo/db/pipeline/dependencies.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
-   group_title: 'TODO: Name this group'
    group_description: Generic interface for getting and merging sorted streams of
        documents. Only used in aggregation
    group_files:
    - src/mongo/db/sorter/sorter.cpp
    - src/mongo/db/sorter/sorter.h
    - src/mongo/db/sorter/sorter_test.cpp
    group_generated_data:
    -   file_name: src/mongo/db/sorter/sorter.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/sorter/sorter.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/sorter/sorter_test.cpp
        file_executables: []
        file_interface:
        -   symbol_name: mongo::isMongos()
            symbol_uses:
            - src/mongo/db/extsort.cpp
            - src/mongo/s/grid.cpp
            - src/mongo/db/pipeline/document_source_sort.cpp
            - src/mongo/db/pipeline/document_source_group.cpp
            - src/mongo/db/commands/parameters.cpp
        file_dependencies:
        -   symbol_name: typeinfo for boost::detail::thread_data_base
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::unittest::Suite::Suite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::log()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::unittest::Suite
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::unittest::TempDir::~TempDir()
            symbol_sources:
            - src/mongo/unittest/temp_dir.cpp
        -   symbol_name: mongo::getcurns
            symbol_sources:
            - src/mongo/util/log.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogstreamBuilder
                const&)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: boost::filesystem3::detail::remove(boost::filesystem3::path
                const&, boost::system::error_code*)
            symbol_sources:
            - src/third_party/boost/libs/filesystem/v3/src/operations.cpp
        -   symbol_name: boost::thread::start_thread()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: snappy::RawUncompress(char const*, unsigned long, char*)
            symbol_sources:
            - src/third_party/snappy/snappy.cc
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::detail::thread_data_base::~thread_data_base()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: boost::filesystem3::detail::is_empty(boost::filesystem3::path
                const&, boost::system::error_code*)
            symbol_sources:
            - src/third_party/boost/libs/filesystem/v3/src/operations.cpp
        -   symbol_name: snappy::Compress(char const*, unsigned long, std::string*)
            symbol_sources:
            - src/third_party/snappy/snappy.cc
        -   symbol_name: boost::filesystem3::detail::file_size(boost::filesystem3::path
                const&, boost::system::error_code*)
            symbol_sources:
            - src/third_party/boost/libs/filesystem/v3/src/operations.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: boost::thread::join()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: boost::thread::~thread()
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: mongo::unittest::TempDir::TempDir(std::string const&)
            symbol_sources:
            - src/mongo/unittest/temp_dir.cpp
        -   symbol_name: boost::filesystem3::detail::create_directories(boost::filesystem3::path
                const&, boost::system::error_code*)
            symbol_sources:
            - src/third_party/boost/libs/filesystem/v3/src/operations.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::demangleName(std::type_info const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for boost::detail::thread_data_base
            symbol_sources:
            - src/third_party/boost/libs/thread/src/pthread/thread.cpp
        -   symbol_name: snappy::GetUncompressedLength(char const*, unsigned long,
                unsigned long*)
            symbol_sources:
            - src/third_party/snappy/snappy.cc
        -   symbol_name: mongo::unittest::Suite::~Suite()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
-   group_title: 'TODO: Name this group'
    group_description: Code for external sort. This sits inside the sorter, and the
        sorter "spills over" to disk if external sorting is allowed
    group_files:
    - src/mongo/db/extsort.cpp
    - src/mongo/db/extsort.h
    group_generated_data:
    -   file_name: src/mongo/db/extsort.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::BSONObjExternalSorter::BSONObjExternalSorter(mongo::ExternalSortComparison
                const*, long)
            symbol_uses:
            - src/mongo/dbtests/extsorttests.cpp
            - src/mongo/db/index/btree_based_access_method.cpp
        file_dependencies:
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::killCurrentOp
            symbol_sources:
            - src/mongo/db/instance.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::getcurns
            symbol_sources:
            - src/mongo/util/log.cpp
        -   symbol_name: mongo::KillCurrentOp::checkForInterrupt(bool)
            symbol_sources:
            - src/mongo/db/kill_current_op.cpp
        -   symbol_name: mongo::isMongos()
            symbol_sources:
            - src/mongo/db/server_options_helpers.cpp
            - src/mongo/db/sorter/sorter_test.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogstreamBuilder
                const&)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: boost::filesystem3::detail::remove(boost::filesystem3::path
                const&, boost::system::error_code*)
            symbol_sources:
            - src/third_party/boost/libs/filesystem/v3/src/operations.cpp
        -   symbol_name: snappy::RawUncompress(char const*, unsigned long, char*)
            symbol_sources:
            - src/third_party/snappy/snappy.cc
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: snappy::Compress(char const*, unsigned long, std::string*)
            symbol_sources:
            - src/third_party/snappy/snappy.cc
        -   symbol_name: boost::filesystem3::detail::file_size(boost::filesystem3::path
                const&, boost::system::error_code*)
            symbol_sources:
            - src/third_party/boost/libs/filesystem/v3/src/operations.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: boost::filesystem3::detail::create_directories(boost::filesystem3::path
                const&, boost::system::error_code*)
            symbol_sources:
            - src/third_party/boost/libs/filesystem/v3/src/operations.cpp
        -   symbol_name: snappy::GetUncompressedLength(char const*, unsigned long,
                unsigned long*)
            symbol_sources:
            - src/third_party/snappy/snappy.cc
        -   symbol_name: mongo::storageGlobalParams
            symbol_sources:
            - src/mongo/db/storage_options.cpp
    -   file_name: src/mongo/db/extsort.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
-   group_title: 'TODO: Name this group'
    group_description: I believe this is just used in External Sort, but it's standing
        on its own here without a# description.
    group_files:
    - src/mongo/db/sort_phase_one.h
    group_generated_data:
    -   file_name: src/mongo/db/sort_phase_one.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
