{
    "groups": [
        {
            "files": [
                "src/mongo/db/range_deleter.cpp",
                "src/mongo/db/range_deleter.h",
                "src/mongo/db/range_deleter_db_env.cpp",
                "src/mongo/db/range_deleter_db_env.h",
                "src/mongo/db/range_deleter_mock_env.cpp",
                "src/mongo/db/range_deleter_mock_env.h",
                "src/mongo/db/range_deleter_service.cpp",
                "src/mongo/db/range_deleter_service.h",
                "src/mongo/db/range_deleter_stat_test.cpp",
                "src/mongo/db/range_deleter_stats.cpp",
                "src/mongo/db/range_deleter_stats.h",
                "src/mongo/db/range_deleter_test.cpp",
                "src/mongo/db/range_preserver.h"
            ],
            "comments": "# Helper classes to delete a range of documents. This is used for example in chunk migrations# when we are cleaning up an old chunk."
        },
        {
            "files": [
                "src/mongo/s/range_arithmetic.cpp",
                "src/mongo/s/range_arithmetic.h",
                "src/mongo/s/range_arithmetic_test.cpp"
            ],
            "comments": "# Utilities for comparing ranges. Useful because our sharding is range based.## okay, but why in s/ ? only used by sharding? seems weird that something## general like range arith is only in s/ but the more specific delete-range## isn't."
        },
        {
            "files": [
                "src/mongo/s/collection_metadata.cpp",
                "src/mongo/s/collection_metadata.h",
                "src/mongo/s/collection_metadata_test.cpp",
                "src/mongo/s/metadata_loader.cpp",
                "src/mongo/s/metadata_loader.h",
                "src/mongo/s/metadata_loader_test.cpp"
            ],
            "comments": "# Contains metadata about a collection, particularly for sharding. The MetadataLoader populates new# CollectionMetadata objects from config server data."
        },
        {
            "files": [
                "src/mongo/s/config_upgrade.cpp",
                "src/mongo/s/config_upgrade.h",
                "src/mongo/s/config_upgrade_helpers.cpp",
                "src/mongo/s/config_upgrade_helpers.h",
                "src/mongo/s/config_upgrade_v0_to_v5.cpp",
                "src/mongo/s/config_upgrade_v4_to_v5.cpp"
            ],
            "comments": "# Code to upgrade config server metadata"
        },
        {
            "files": [
                "src/mongo/s/distlock.cpp",
                "src/mongo/s/distlock.h",
                "src/mongo/s/distlock_test.cpp"
            ],
            "comments": "# Distributed lock (lock on the config servers from mongos, i.e. \"balancer lock\")"
        },
        {
            "files": [
                "src/mongo/db/field_parser-inl.h",
                "src/mongo/db/field_parser.cpp",
                "src/mongo/db/field_parser.h",
                "src/mongo/db/field_parser_test.cpp"
            ],
            "comments": "# Parser for fields in a BSON object. Meant to help enforce a schema on a BSON object."
        },
        {
            "files": [
                "src/mongo/s/type_changelog.cpp",
                "src/mongo/s/type_changelog.h",
                "src/mongo/s/type_changelog_test.cpp",
                "src/mongo/s/type_chunk.cpp",
                "src/mongo/s/type_chunk.h",
                "src/mongo/s/type_chunk_test.cpp",
                "src/mongo/s/type_collection.cpp",
                "src/mongo/s/type_collection.h",
                "src/mongo/s/type_collection_test.cpp",
                "src/mongo/s/type_config_version.cpp",
                "src/mongo/s/type_config_version.h",
                "src/mongo/s/type_config_version_test.cpp",
                "src/mongo/s/type_database.cpp",
                "src/mongo/s/type_database.h",
                "src/mongo/s/type_database_test.cpp",
                "src/mongo/s/type_lockpings.cpp",
                "src/mongo/s/type_lockpings.h",
                "src/mongo/s/type_lockpings_test.cpp",
                "src/mongo/s/type_locks.cpp",
                "src/mongo/s/type_locks.h",
                "src/mongo/s/type_locks_test.cpp",
                "src/mongo/s/type_mongos.cpp",
                "src/mongo/s/type_mongos.h",
                "src/mongo/s/type_mongos_test.cpp",
                "src/mongo/s/type_settings.cpp",
                "src/mongo/s/type_settings.h",
                "src/mongo/s/type_settings_test.cpp",
                "src/mongo/s/type_shard.cpp",
                "src/mongo/s/type_shard.h",
                "src/mongo/s/type_shard_test.cpp",
                "src/mongo/s/type_tags.cpp",
                "src/mongo/s/type_tags.h",
                "src/mongo/s/type_tags_test.cpp"
            ],
            "comments": "# \"Schema\" for config server metadata. These classes contain structural class definitions for what# we expect to find on the config server. They use the field parser above to convert BSON fields# into C++ members."
        },
        {
            "files": [
                "src/mongo/s/writeback_listener.cpp",
                "src/mongo/s/writeback_listener.h"
            ],
            "comments": "# Bizarre legacy sharding code.## From writeback_listener.h# \"The writeback listener takes back write attempts that were made against a wrong shard.# (Wrong here in the sense that the target chunk moved before this mongos had a chance to# learn so.) It is responsible for reapplying these writes to the correct shard.\"## So basically, the mongos sends an operation to the mongod, and the writeback listener (running on# the mongos) says to the mongod every now and again, \"yo, have I screwed up recently?\". The mongod# is then like \"yeah bro, you screwed up, you wrote all these things to the wrong place and the# writeback listener is like \"thanks man\" and tries to write them to the correct shard. Meanwhile# the user is like \"I'm so glad my data was written\". This should go away because of the new write# commands.## rofl"
        },
        {
            "files": [
                "src/mongo/s/d_writeback.cpp",
                "src/mongo/s/d_writeback.h"
            ],
            "comments": "# mongod component of writeback listener"
        },
        {
            "files": [
                "src/mongo/s/balance.cpp",
                "src/mongo/s/balance.h",
                "src/mongo/s/balancer_policy.cpp",
                "src/mongo/s/balancer_policy.h",
                "src/mongo/s/balancer_policy_tests.cpp",
                "src/mongo/s/bson_serializable.h",
                "src/mongo/s/chunk.cpp",
                "src/mongo/s/chunk.h",
                "src/mongo/s/chunk_diff-inl.cpp",
                "src/mongo/s/chunk_diff.h",
                "src/mongo/s/chunk_diff_test.cpp",
                "src/mongo/s/chunk_manager_targeter.cpp",
                "src/mongo/s/chunk_manager_targeter.h",
                "src/mongo/s/chunk_version.h",
                "src/mongo/s/chunk_version_test.cpp",
                "src/mongo/s/cluster_client_internal.cpp",
                "src/mongo/s/cluster_client_internal.h",
                "src/mongo/s/cluster_write.cpp",
                "src/mongo/s/cluster_write.h",
                "src/mongo/s/commands/auth_schema_upgrade_s.cpp",
                "src/mongo/s/commands/cluster_hint_cmd.cpp",
                "src/mongo/s/commands/cluster_merge_chunks_cmd.cpp",
                "src/mongo/s/commands/cluster_plan_cache_cmd.cpp",
                "src/mongo/s/config.cpp",
                "src/mongo/s/config.h",
                "src/mongo/s/config_server_checker_service.cpp",
                "src/mongo/s/config_server_checker_service.h",
                "src/mongo/s/config_server_tests.cpp",
                "src/mongo/s/cursors.cpp",
                "src/mongo/s/cursors.h",
                "src/mongo/s/d_logic.cpp",
                "src/mongo/s/d_logic.h",
                "src/mongo/s/d_merge.cpp",
                "src/mongo/s/d_merge.h",
                "src/mongo/s/d_migrate.cpp",
                "src/mongo/s/d_split.cpp",
                "src/mongo/s/d_state.cpp",
                "src/mongo/s/dbclient_multi_command.cpp",
                "src/mongo/s/dbclient_multi_command.h",
                "src/mongo/s/dbclient_shard_resolver.cpp",
                "src/mongo/s/dbclient_shard_resolver.h",
                "src/mongo/s/default_version.cpp",
                "src/mongo/s/grid.cpp",
                "src/mongo/s/grid.h",
                "src/mongo/s/mock_multi_write_command.h",
                "src/mongo/s/mock_ns_targeter.h",
                "src/mongo/s/mock_shard_resolver.h",
                "src/mongo/s/mongo_version_range.cpp",
                "src/mongo/s/mongo_version_range.h",
                "src/mongo/s/mongo_version_range_test.cpp",
                "src/mongo/s/mongos_persistence_stubs.cpp",
                "src/mongo/s/multi_command_dispatch.h",
                "src/mongo/s/ns_targeter.h",
                "src/mongo/s/request.cpp",
                "src/mongo/s/request.h",
                "src/mongo/s/shard.cpp",
                "src/mongo/s/shard.h",
                "src/mongo/s/shard_conn_test.cpp",
                "src/mongo/s/shard_key_pattern.cpp",
                "src/mongo/s/shard_key_pattern.h",
                "src/mongo/s/shard_resolver.h",
                "src/mongo/s/shard_test.cpp",
                "src/mongo/s/shardconnection.cpp",
                "src/mongo/s/shardkey.cpp",
                "src/mongo/s/shardkey.h",
                "src/mongo/s/stale_exception.h",
                "src/mongo/s/strategy.cpp",
                "src/mongo/s/strategy.h",
                "src/mongo/s/version_manager.cpp",
                "src/mongo/s/version_manager.h",
                "src/mongo/s/version_mongos.cpp",
                "src/mongo/s/version_mongos.h"
            ],
            "comments": "# Sharding code? TODO: verify that this is all sharding related and document the architecture."
        }
    ],
    "title": "sharding"
}