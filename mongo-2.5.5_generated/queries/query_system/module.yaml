module_title: Query System
module_name: query_system
module_description: 'TODO: query_system description'
module_groups:
-   group_title: 'TODO: Name this group'
    group_description: Matcher expressions. The point of all of this is to take a
        query string and turn it into a# structured set of classes. If this were a
        compiler this would be the parse tree for the compiler.
    group_files:
    - src/mongo/db/matcher/expression.cpp
    - src/mongo/db/matcher/expression.h
    - src/mongo/db/matcher/expression_array.cpp
    - src/mongo/db/matcher/expression_array.h
    - src/mongo/db/matcher/expression_array_test.cpp
    - src/mongo/db/matcher/expression_geo.cpp
    - src/mongo/db/matcher/expression_geo.h
    - src/mongo/db/matcher/expression_geo_test.cpp
    - src/mongo/db/matcher/expression_leaf.cpp
    - src/mongo/db/matcher/expression_leaf.h
    - src/mongo/db/matcher/expression_leaf_test.cpp
    - src/mongo/db/matcher/expression_parser.cpp
    - src/mongo/db/matcher/expression_parser.h
    - src/mongo/db/matcher/expression_parser_array_test.cpp
    - src/mongo/db/matcher/expression_parser_geo.cpp
    - src/mongo/db/matcher/expression_parser_geo_test.cpp
    - src/mongo/db/matcher/expression_parser_leaf_test.cpp
    - src/mongo/db/matcher/expression_parser_test.cpp
    - src/mongo/db/matcher/expression_parser_text.cpp
    - src/mongo/db/matcher/expression_parser_text_test.cpp
    - src/mongo/db/matcher/expression_parser_tree.cpp
    - src/mongo/db/matcher/expression_parser_tree_test.cpp
    - src/mongo/db/matcher/expression_test.cpp
    - src/mongo/db/matcher/expression_text.cpp
    - src/mongo/db/matcher/expression_text.h
    - src/mongo/db/matcher/expression_tree.cpp
    - src/mongo/db/matcher/expression_tree.h
    - src/mongo/db/matcher/expression_tree_test.cpp
    - src/mongo/db/matcher/expression_where.cpp
    group_generated_data:
    -   file_name: src/mongo/db/matcher/expression.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: vtable for mongo::AtomicMatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::MatchExpression::toString() const
            symbol_uses:
            - src/mongo/db/matcher/expression_leaf.cpp
            - src/mongo/db/matcher/expression_geo.cpp
            - src/mongo/db/matcher/expression_array.cpp
            - src/mongo/db/matcher/expression_text.cpp
            - src/mongo/db/matcher/expression_where.cpp
            - src/mongo/db/catalog/index_catalog.cpp
            - src/mongo/db/matcher/expression_parser.cpp
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::MatchExpression::_debugAddSpace(mongo::StringBuilderImpl<mongo::TrivialAllocator>&,
                int) const
            symbol_uses:
            - src/mongo/db/matcher/expression_leaf.cpp
            - src/mongo/db/matcher/expression_geo.cpp
            - src/mongo/db/matcher/expression_array.cpp
            - src/mongo/db/matcher/expression_text.cpp
            - src/mongo/db/matcher/expression_where.cpp
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: vtable for mongo::FalseMatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: vtable for mongo::MatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_text.cpp
            - src/mongo/db/matcher/expression_leaf.cpp
            - src/mongo/db/matcher/expression_geo.cpp
            - src/mongo/db/matcher/expression_array.cpp
            - src/mongo/db/matcher/expression_parser_geo.cpp
            - src/mongo/db/matcher/expression_where.cpp
            - src/mongo/db/catalog/index_catalog.cpp
            - src/mongo/db/matcher/expression_parser.cpp
            - src/mongo/db/matcher/expression_parser_text.cpp
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: typeinfo for mongo::MatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_tree.cpp
            - src/mongo/db/matcher/expression_where.cpp
            - src/mongo/db/matcher/expression_leaf.cpp
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::MatchExpression::MatchExpression(mongo::MatchExpression::MatchType)
            symbol_uses:
            - src/mongo/db/matcher/expression_text.cpp
            - src/mongo/db/matcher/expression_leaf.cpp
            - src/mongo/db/matcher/expression_geo.cpp
            - src/mongo/db/query/planner_access.cpp
            - src/mongo/db/matcher/expression_array.cpp
            - src/mongo/db/matcher/expression_parser_geo.cpp
            - src/mongo/db/matcher/expression_where.cpp
            - src/mongo/db/catalog/index_catalog.cpp
            - src/mongo/db/matcher/expression_parser.cpp
            - src/mongo/db/matcher/expression_parser_text.cpp
            - src/mongo/db/matcher/expression_tree.cpp
            - src/mongo/db/matcher/expression_parser_tree.cpp
        -   symbol_name: mongo::MatchExpression::matchesBSON(mongo::BSONObj const&,
                mongo::MatchDetails*) const
            symbol_uses:
            - src/mongo/db/matcher/expression_leaf.cpp
            - src/mongo/db/matcher/expression_geo.cpp
            - src/mongo/db/matcher/expression_array.cpp
            - src/mongo/db/matcher/expression_text.cpp
            - src/mongo/db/matcher/expression_where.cpp
            - src/mongo/db/catalog/index_catalog.cpp
            - src/mongo/db/matcher/expression_parser.cpp
            - src/mongo/db/matcher/expression_tree.cpp
        file_dependencies:
        -   symbol_name: mongo::BSONMatchableDocument::~BSONMatchableDocument()
            symbol_sources:
            - src/mongo/db/matcher/matchable.cpp
        -   symbol_name: mongo::BSONMatchableDocument::BSONMatchableDocument(mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/matcher/matchable.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
    -   file_name: src/mongo/db/matcher/expression.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongorestore
        - mongodump
        - mongobridge
        - mongofiles
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongostat
        - mongosniff
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/matcher/expression_array.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: vtable for mongo::ArrayMatchingMatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: vtable for mongo::AllElemMatchOp
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: vtable for mongo::ElemMatchObjectMatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::AllElemMatchOp::add(mongo::ArrayMatchingMatchExpression*)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: vtable for mongo::ElemMatchValueMatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::ElemMatchValueMatchExpression::init(mongo::StringData
                const&)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::ElemMatchValueMatchExpression::add(mongo::MatchExpression*)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::ElemMatchObjectMatchExpression::init(mongo::StringData
                const&, mongo::MatchExpression*)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: vtable for mongo::SizeMatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::SizeMatchExpression::init(mongo::StringData const&,
                int)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::AllElemMatchOp::init(mongo::StringData const&)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        file_dependencies:
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::MatchExpression::toString() const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MatchExpression::_debugAddSpace(mongo::StringBuilderImpl<mongo::TrivialAllocator>&,
                int) const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::MatchDetails::setElemMatchKey(std::string const&)
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: vtable for mongo::MatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::MatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ElementPath::init(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MatchExpression::matchesBSON(mongo::BSONObj const&,
                mongo::MatchDetails*) const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::MatchExpression::MatchExpression(mongo::MatchExpression::MatchType)
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
    -   file_name: src/mongo/db/matcher/expression_array.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/matcher/expression_array_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: vtable for mongo::ArrayMatchingMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: vtable for mongo::AllElemMatchOp
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MatchDetails::elemMatchKey() const
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: mongo::AllElemMatchOp::init(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LeafMatchExpression::matches(mongo::MatchableDocument
                const*, mongo::MatchDetails*) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: vtable for mongo::AndMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::ElemMatchValueMatchExpression::init(mongo::StringData
                const&, mongo::MatchExpression*)
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::equivalent(mongo::MatchExpression
                const*) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: vtable for mongo::MatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: vtable for mongo::ElemMatchObjectMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::ArrayMatchingMatchExpression::matchesSingleElement(mongo::BSONElement
                const&) const
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: vtable for mongo::ElemMatchValueMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::init(mongo::StringData
                const&, mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: typeinfo for mongo::ComparisonMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::LeafMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::ListOfMatchExpression::add(mongo::MatchExpression*)
            symbol_sources:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::MatchDetails::MatchDetails()
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::debugString(mongo::StringBuilderImpl<mongo::TrivialAllocator>&,
                int) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::AllElemMatchOp::add(mongo::ArrayMatchingMatchExpression*)
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::ElemMatchValueMatchExpression::~ElemMatchValueMatchExpression()
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::matchesSingleElement(mongo::BSONElement
                const&) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::ElemMatchValueMatchExpression::init(mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::MatchDetails::hasElemMatchKey() const
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: mongo::MatchExpression::matchesBSON(mongo::BSONObj const&,
                mongo::MatchDetails*) const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::SizeMatchExpression::equivalent(mongo::MatchExpression
                const*) const
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::ElemMatchObjectMatchExpression::init(mongo::StringData
                const&, mongo::MatchExpression*)
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::AllElemMatchOp::~AllElemMatchOp()
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: vtable for mongo::SizeMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::AllElemMatchOp::matchesSingleElement(mongo::BSONElement
                const&) const
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::ElemMatchValueMatchExpression::add(mongo::MatchExpression*)
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::SizeMatchExpression::init(mongo::StringData const&,
                int)
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::MatchExpression::toString() const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::MatchExpression::MatchExpression(mongo::MatchExpression::MatchType)
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
    -   file_name: src/mongo/db/matcher/expression_geo.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::GeoNearMatchExpression::init(mongo::StringData const&,
                mongo::NearQuery const&, mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser_geo.cpp
        -   symbol_name: vtable for mongo::GeoNearMatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_parser_geo.cpp
        -   symbol_name: vtable for mongo::GeoMatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_parser_geo.cpp
        -   symbol_name: mongo::GeoMatchExpression::init(mongo::StringData const&,
                mongo::GeoQuery const&, mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser_geo.cpp
        file_dependencies:
        -   symbol_name: mongo::LeafMatchExpression::initPath(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::GeoQuery::satisfiesPredicate(mongo::GeometryContainer
                const&) const
            symbol_sources:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::MatchExpression::toString() const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MatchExpression::_debugAddSpace(mongo::StringBuilderImpl<mongo::TrivialAllocator>&,
                int) const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: vtable for mongo::MatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for S2Cell
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: mongo::Point::Point()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::LeafMatchExpression::matches(mongo::MatchableDocument
                const*, mongo::MatchDetails*) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::LeafMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::LeafMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::GeometryContainer::parseFrom(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MatchExpression::matchesBSON(mongo::BSONObj const&,
                mongo::MatchDetails*) const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::MatchExpression::MatchExpression(mongo::MatchExpression::MatchType)
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
    -   file_name: src/mongo/db/matcher/expression_geo.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/matcher/expression_geo_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: vtable for mongo::MatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::GeoMatchExpression::init(mongo::StringData const&,
                mongo::GeoQuery const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_geo.cpp
        -   symbol_name: vtable for mongo::LeafMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: vtable for S2Cell
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::Point::Point()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::GeoQuery::parseFrom(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: vtable for mongo::GeoMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_geo.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::NearQuery::parseFrom(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::GeoNearMatchExpression::init(mongo::StringData const&,
                mongo::NearQuery const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_geo.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::GeoNearMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_geo.cpp
        -   symbol_name: mongo::MatchExpression::matchesBSON(mongo::BSONObj const&,
                mongo::MatchDetails*) const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::MatchExpression::MatchExpression(mongo::MatchExpression::MatchType)
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
    -   file_name: src/mongo/db/matcher/expression_leaf.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ExistsMatchExpression::init(mongo::StringData const&)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: vtable for mongo::InMatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::init(mongo::StringData
                const&, mongo::BSONElement const&)
            symbol_uses:
            - src/mongo/db/catalog/index_catalog.cpp
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::debugString(mongo::StringBuilderImpl<mongo::TrivialAllocator>&,
                int) const
            symbol_uses:
            - src/mongo/db/catalog/index_catalog.cpp
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::ArrayFilterEntries::addEquality(mongo::BSONElement
                const&)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: typeinfo for mongo::LeafMatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_text.cpp
            - src/mongo/db/matcher/expression_geo.cpp
        -   symbol_name: mongo::ModMatchExpression::init(mongo::StringData const&,
                int, int)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: vtable for mongo::ModMatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: vtable for mongo::ExistsMatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: vtable for mongo::RegexMatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: vtable for mongo::LeafMatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_text.cpp
            - src/mongo/db/matcher/expression_geo.cpp
            - src/mongo/db/matcher/expression_parser_geo.cpp
            - src/mongo/db/catalog/index_catalog.cpp
            - src/mongo/db/matcher/expression_parser.cpp
            - src/mongo/db/matcher/expression_parser_text.cpp
        -   symbol_name: mongo::ArrayFilterEntries::ArrayFilterEntries()
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::matchesSingleElement(mongo::BSONElement
                const&) const
            symbol_uses:
            - src/mongo/db/catalog/index_catalog.cpp
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::LeafMatchExpression::matches(mongo::MatchableDocument
                const*, mongo::MatchDetails*) const
            symbol_uses:
            - src/mongo/db/matcher/expression_geo.cpp
            - src/mongo/db/matcher/expression_text.cpp
            - src/mongo/db/catalog/index_catalog.cpp
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::equivalent(mongo::MatchExpression
                const*) const
            symbol_uses:
            - src/mongo/db/catalog/index_catalog.cpp
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: typeinfo for mongo::ComparisonMatchExpression
            symbol_uses:
            - src/mongo/db/catalog/index_catalog.cpp
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::TypeMatchExpression::init(mongo::StringData const&,
                int)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::InMatchExpression::init(mongo::StringData const&)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::ArrayFilterEntries::addRegex(mongo::RegexMatchExpression*)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::LeafMatchExpression::initPath(mongo::StringData const&)
            symbol_uses:
            - src/mongo/db/matcher/expression_text.cpp
            - src/mongo/db/matcher/expression_geo.cpp
        -   symbol_name: vtable for mongo::TypeMatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::RegexMatchExpression::init(mongo::StringData const&,
                mongo::BSONElement const&)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::RegexMatchExpression::init(mongo::StringData const&,
                mongo::StringData const&, mongo::StringData const&)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        file_dependencies:
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: pcrecpp::RE::no_arg
            symbol_sources:
            - src/third_party/pcre-8.30/pcrecpp.cc
        -   symbol_name: mongo::MatchExpression::toString() const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MatchExpression::_debugAddSpace(mongo::StringBuilderImpl<mongo::TrivialAllocator>&,
                int) const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::MatchDetails::setElemMatchKey(std::string const&)
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: vtable for mongo::MatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: pcrecpp::RE::PartialMatch(pcrecpp::StringPiece const&, pcrecpp::Arg
                const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&,
                pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg
                const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&,
                pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg const&, pcrecpp::Arg
                const&, pcrecpp::Arg const&) const
            symbol_sources:
            - src/third_party/pcre-8.30/pcrecpp.cc
        -   symbol_name: pcrecpp::RE::Init(std::string const&, pcrecpp::RE_Options
                const*)
            symbol_sources:
            - src/third_party/pcre-8.30/pcrecpp.cc
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::MatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::fassertFailed(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ElementPath::init(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: pcrecpp::RE::~RE()
            symbol_sources:
            - src/third_party/pcre-8.30/pcrecpp.cc
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MatchExpression::matchesBSON(mongo::BSONObj const&,
                mongo::MatchDetails*) const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::MatchExpression::MatchExpression(mongo::MatchExpression::MatchType)
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
    -   file_name: src/mongo/db/matcher/expression_leaf.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/matcher/expression_leaf_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::RegexMatchExpression::matchesSingleElement(mongo::BSONElement
                const&) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: vtable for mongo::ExistsMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ExistsMatchExpression::equivalent(mongo::MatchExpression
                const*) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ExistsMatchExpression::init(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::MatchDetails::elemMatchKey() const
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: mongo::InMatchExpression::matchesSingleElement(mongo::BSONElement
                const&) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LeafMatchExpression::matches(mongo::MatchableDocument
                const*, mongo::MatchDetails*) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::TypeMatchExpression::matchesSingleElement(mongo::BSONElement
                const&) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: vtable for mongo::InMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::equivalent(mongo::MatchExpression
                const*) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::TypeMatchExpression::equivalent(mongo::MatchExpression
                const*) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: vtable for mongo::MatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ModMatchExpression::equivalent(mongo::MatchExpression
                const*) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: vtable for mongo::RegexMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::init(mongo::StringData
                const&, mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: typeinfo for mongo::ComparisonMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ArrayFilterEntries::addEquality(mongo::BSONElement
                const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::LeafMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: pcrecpp::RE::~RE()
            symbol_sources:
            - src/third_party/pcre-8.30/pcrecpp.cc
        -   symbol_name: mongo::Status::operator!=(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::MatchDetails::MatchDetails()
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::debugString(mongo::StringBuilderImpl<mongo::TrivialAllocator>&,
                int) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::ArrayFilterEntries::ArrayFilterEntries()
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::TypeMatchExpression::init(mongo::StringData const&,
                int)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::ExistsMatchExpression::matchesSingleElement(mongo::BSONElement
                const&) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: vtable for mongo::TypeMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::matchesSingleElement(mongo::BSONElement
                const&) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::InMatchExpression::init(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::RegexMatchExpression::equivalent(mongo::MatchExpression
                const*) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::MatchDetails::hasElemMatchKey() const
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: mongo::ModMatchExpression::matchesSingleElement(mongo::BSONElement
                const&) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::MatchExpression::matchesBSON(mongo::BSONObj const&,
                mongo::MatchDetails*) const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ArrayFilterEntries::~ArrayFilterEntries()
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::BSONUndefined
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::ModMatchExpression::init(mongo::StringData const&,
                int, int)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::BSONNULL
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::RegexMatchExpression::init(mongo::StringData const&,
                mongo::StringData const&, mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: vtable for mongo::ModMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::MatchExpression::toString() const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::MatchExpression::MatchExpression(mongo::MatchExpression::MatchType)
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
    -   file_name: src/mongo/db/matcher/expression_parser.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::MatchExpressionParser::_parse(mongo::BSONObj const&,
                bool)
            symbol_uses:
            - src/mongo/dbtests/query_stage_fetch.cpp
            - src/mongo/db/exec/projection_exec.cpp
            - src/mongo/db/exec/stagedebug_cmd.cpp
            - src/mongo/db/matcher/expression_parser_tree.cpp
            - src/mongo/db/query/parsed_projection.cpp
            - src/mongo/dbtests/query_stage_collscan.cpp
            - src/mongo/dbtests/query_multi_plan_runner.cpp
            - src/mongo/db/matcher/matcher.cpp
            - src/mongo/dbtests/query_stage_tests.cpp
            - src/mongo/db/query/query_planner_test_lib.cpp
            - src/mongo/dbtests/query_stage_and.cpp
            - src/mongo/db/query/canonical_query.cpp
            - src/mongo/db/auth/authz_manager_external_state_mock.cpp
            - src/mongo/db/ops/modifier_pull.cpp
            - src/mongo/dbtests/query_single_solution_runner.cpp
        -   symbol_name: mongo::expressionParserGeoCallback
            symbol_uses:
            - src/mongo/db/matcher/expression_parser_geo.cpp
        -   symbol_name: mongo::expressionParserWhereCallback
            symbol_uses:
            - src/mongo/db/matcher/expression_where.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parseSub(char const*, mongo::BSONObj
                const&, mongo::AndMatchExpression*)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser_tree.cpp
        -   symbol_name: mongo::expressionParserTextCallback
            symbol_uses:
            - src/mongo/db/matcher/expression_parser_text.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parseRegexElement(char const*,
                mongo::BSONElement const&)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser_tree.cpp
        file_dependencies:
        -   symbol_name: vtable for mongo::ArrayMatchingMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: vtable for mongo::ExistsMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: vtable for mongo::AllElemMatchOp
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: vtable for mongo::AtomicMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ArrayFilterEntries::addRegex(mongo::RegexMatchExpression*)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::ExistsMatchExpression::init(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::BSONElement::getGtLtOp(int) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::AllElemMatchOp::init(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: vtable for mongo::NorMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LeafMatchExpression::matches(mongo::MatchableDocument
                const*, mongo::MatchDetails*) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: vtable for mongo::InMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: vtable for mongo::AndMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::equivalent(mongo::MatchExpression
                const*) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::MatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: vtable for mongo::ElemMatchObjectMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: vtable for mongo::ElemMatchValueMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: vtable for mongo::RegexMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::init(mongo::StringData
                const&, mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: typeinfo for mongo::ComparisonMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ListOfMatchExpression::~ListOfMatchExpression()
            symbol_sources:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MatchExpression::matchesBSON(mongo::BSONObj const&,
                mongo::MatchDetails*) const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: vtable for mongo::LeafMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::ArrayFilterEntries::addEquality(mongo::BSONElement
                const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::ListOfMatchExpression::add(mongo::MatchExpression*)
            symbol_sources:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::debugString(mongo::StringBuilderImpl<mongo::TrivialAllocator>&,
                int) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::ArrayFilterEntries::ArrayFilterEntries()
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: vtable for mongo::OrMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::AllElemMatchOp::add(mongo::ArrayMatchingMatchExpression*)
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::TypeMatchExpression::init(mongo::StringData const&,
                int)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::MatchExpression::toString() const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: vtable for mongo::TypeMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::RegexMatchExpression::init(mongo::StringData const&,
                mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::matchesSingleElement(mongo::BSONElement
                const&) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::ElemMatchValueMatchExpression::init(mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: vtable for mongo::FalseMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::InMatchExpression::init(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parseNot(char const*, mongo::BSONElement
                const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser_tree.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::ElemMatchObjectMatchExpression::init(mongo::StringData
                const&, mongo::MatchExpression*)
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::ModMatchExpression::init(mongo::StringData const&,
                int, int)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: vtable for mongo::SizeMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parseTreeList(mongo::BSONObj
                const&, mongo::ListOfMatchExpression*)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser_tree.cpp
        -   symbol_name: vtable for mongo::NotMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::RegexMatchExpression::init(mongo::StringData const&,
                mongo::StringData const&, mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::ElemMatchValueMatchExpression::add(mongo::MatchExpression*)
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::SizeMatchExpression::init(mongo::StringData const&,
                int)
            symbol_sources:
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: vtable for mongo::ModMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::MatchExpression::MatchExpression(mongo::MatchExpression::MatchType)
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
    -   file_name: src/mongo/db/matcher/expression_parser.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/matcher/expression_parser_array_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONNULL
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parse(mongo::BSONObj const&,
                bool)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::OID::init()
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/matcher/expression_parser_geo.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::GeoMatchExpression::init(mongo::StringData const&,
                mongo::GeoQuery const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_geo.cpp
        -   symbol_name: vtable for mongo::LeafMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::expressionParserGeoCallback
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: vtable for mongo::MatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for S2Cell
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: mongo::Point::Point()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::GeoQuery::parseFrom(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::_makeStringVector(int, ...)
            symbol_sources:
            - src/mongo/base/make_string_vector.cpp
        -   symbol_name: vtable for mongo::GeoMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_geo.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::NearQuery::parseFrom(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::GeoNearMatchExpression::init(mongo::StringData const&,
                mongo::NearQuery const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_geo.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::GeoNearMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_geo.cpp
        -   symbol_name: mongo::GlobalInitializerRegisterer::GlobalInitializerRegisterer(std::string
                const&, boost::function<mongo::Status (mongo::InitializerContext*)>
                const&, std::vector<std::string, std::allocator<std::string> > const&,
                std::vector<std::string, std::allocator<std::string> > const&)
            symbol_sources:
            - src/mongo/base/global_initializer_registerer.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::MatchExpression::MatchExpression(mongo::MatchExpression::MatchType)
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/db/matcher/expression_parser_geo_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parse(mongo::BSONObj const&,
                bool)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
    -   file_name: src/mongo/db/matcher/expression_parser_leaf_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parse(mongo::BSONObj const&,
                bool)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONUndefined
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::OID::init()
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::toString() const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/matcher/expression_parser_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parse(mongo::BSONObj const&,
                bool)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/db/matcher/expression_parser_text.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::expressionParserTextCallback
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::TextMatchExpression::init(std::string const&, std::string
                const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_text.cpp
        -   symbol_name: vtable for mongo::MatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::TextMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_text.cpp
        -   symbol_name: mongo::fts::FTSLanguage::make(mongo::StringData const&, mongo::fts::TextIndexVersion)
            symbol_sources:
            - src/mongo/db/fts/fts_language.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::_makeStringVector(int, ...)
            symbol_sources:
            - src/mongo/base/make_string_vector.cpp
        -   symbol_name: vtable for mongo::LeafMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::GlobalInitializerRegisterer::GlobalInitializerRegisterer(std::string
                const&, boost::function<mongo::Status (mongo::InitializerContext*)>
                const&, std::vector<std::string, std::allocator<std::string> > const&,
                std::vector<std::string, std::allocator<std::string> > const&)
            symbol_sources:
            - src/mongo/base/global_initializer_registerer.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::MatchExpression::MatchExpression(mongo::MatchExpression::MatchType)
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
    -   file_name: src/mongo/db/matcher/expression_parser_text_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parse(mongo::BSONObj const&,
                bool)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
    -   file_name: src/mongo/db/matcher/expression_parser_tree.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::MatchExpressionParser::_parseNot(char const*, mongo::BSONElement
                const&)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parseTreeList(mongo::BSONObj
                const&, mongo::ListOfMatchExpression*)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        file_dependencies:
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::NotMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parse(mongo::BSONObj const&,
                bool)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parseSub(char const*, mongo::BSONObj
                const&, mongo::AndMatchExpression*)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parseRegexElement(char const*,
                mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::AndMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ListOfMatchExpression::add(mongo::MatchExpression*)
            symbol_sources:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::MatchExpression::MatchExpression(mongo::MatchExpression::MatchType)
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
    -   file_name: src/mongo/db/matcher/expression_parser_tree_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parse(mongo::BSONObj const&,
                bool)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/matcher/expression_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::debugString(mongo::StringBuilderImpl<mongo::TrivialAllocator>&,
                int) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::init(mongo::StringData
                const&, mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::matchesSingleElement(mongo::BSONElement
                const&) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::LeafMatchExpression::matches(mongo::MatchableDocument
                const*, mongo::MatchDetails*) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: typeinfo for mongo::ComparisonMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MatchExpression::toString() const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::MatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::LeafMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::equivalent(mongo::MatchExpression
                const*) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MatchExpression::matchesBSON(mongo::BSONObj const&,
                mongo::MatchDetails*) const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::MatchExpression::MatchExpression(mongo::MatchExpression::MatchType)
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
    -   file_name: src/mongo/db/matcher/expression_text.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::TextMatchExpression::init(std::string const&, std::string
                const&)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser_text.cpp
        -   symbol_name: vtable for mongo::TextMatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_parser_text.cpp
        file_dependencies:
        -   symbol_name: mongo::LeafMatchExpression::initPath(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::MatchExpression::toString() const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::MatchExpression::_debugAddSpace(mongo::StringBuilderImpl<mongo::TrivialAllocator>&,
                int) const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: vtable for mongo::MatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::LeafMatchExpression::matches(mongo::MatchableDocument
                const*, mongo::MatchDetails*) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: typeinfo for mongo::LeafMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: vtable for mongo::LeafMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MatchExpression::matchesBSON(mongo::BSONObj const&,
                mongo::MatchDetails*) const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::MatchExpression::MatchExpression(mongo::MatchExpression::MatchType)
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
    -   file_name: src/mongo/db/matcher/expression_text.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/matcher/expression_tree.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: vtable for mongo::NorMatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: vtable for mongo::AndMatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
            - src/mongo/db/query/planner_access.cpp
            - src/mongo/db/matcher/expression_parser_tree.cpp
        -   symbol_name: mongo::ListOfMatchExpression::~ListOfMatchExpression()
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::ListOfMatchExpression::add(mongo::MatchExpression*)
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
            - src/mongo/db/query/planner_access.cpp
            - src/mongo/db/matcher/expression_parser_tree.cpp
        -   symbol_name: vtable for mongo::OrMatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
            - src/mongo/db/query/planner_access.cpp
        -   symbol_name: vtable for mongo::NotMatchExpression
            symbol_uses:
            - src/mongo/db/matcher/expression_parser.cpp
            - src/mongo/db/matcher/expression_parser_tree.cpp
        file_dependencies:
        -   symbol_name: mongo::MatchExpression::toString() const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::MatchExpression::_debugAddSpace(mongo::StringBuilderImpl<mongo::TrivialAllocator>&,
                int) const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: vtable for mongo::MatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::MatchDetails::resetOutput()
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::MatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MatchExpression::matchesBSON(mongo::BSONObj const&,
                mongo::MatchDetails*) const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::MatchExpression::MatchExpression(mongo::MatchExpression::MatchType)
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
    -   file_name: src/mongo/db/matcher/expression_tree.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/matcher/expression_tree_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ListOfMatchExpression::equivalent(mongo::MatchExpression
                const*) const
            symbol_sources:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MatchDetails::elemMatchKey() const
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: vtable for mongo::NorMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LeafMatchExpression::matches(mongo::MatchableDocument
                const*, mongo::MatchDetails*) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: vtable for mongo::AndMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::equivalent(mongo::MatchExpression
                const*) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: vtable for mongo::MatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: vtable for mongo::RegexMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::init(mongo::StringData
                const&, mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: typeinfo for mongo::ComparisonMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ListOfMatchExpression::~ListOfMatchExpression()
            symbol_sources:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::LeafMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::ListOfMatchExpression::add(mongo::MatchExpression*)
            symbol_sources:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::MatchDetails::MatchDetails()
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::debugString(mongo::StringBuilderImpl<mongo::TrivialAllocator>&,
                int) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: vtable for mongo::OrMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::MatchExpression::toString() const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::ComparisonMatchExpression::matchesSingleElement(mongo::BSONElement
                const&) const
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::MatchDetails::hasElemMatchKey() const
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: mongo::MatchExpression::matchesBSON(mongo::BSONObj const&,
                mongo::MatchDetails*) const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: vtable for mongo::NotMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::RegexMatchExpression::init(mongo::StringData const&,
                mongo::StringData const&, mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/matcher/expression_leaf.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MatchExpression::MatchExpression(mongo::MatchExpression::MatchType)
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
    -   file_name: src/mongo/db/matcher/expression_where.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::AuthorizationSession::getAuthenticatedUserNamesToken()
            symbol_sources:
            - src/mongo/db/auth/authorization_session.cpp
        -   symbol_name: typeinfo for mongo::MatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::MatchExpression::toString() const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::ScriptEngine::getPooledScope(std::string const&, std::string
                const&)
            symbol_sources:
            - src/mongo/scripting/engine.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MatchExpression::_debugAddSpace(mongo::StringBuilderImpl<mongo::TrivialAllocator>&,
                int) const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::ClientBasic::getCurrent()
            symbol_sources:
            - src/mongo/s/client_info.cpp
            - src/mongo/db/client.cpp
            - src/mongo/client/clientAndShell.cpp
        -   symbol_name: vtable for mongo::MatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::expressionParserWhereCallback
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::globalScriptEngine
            symbol_sources:
            - src/mongo/scripting/engine.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::_makeStringVector(int, ...)
            symbol_sources:
            - src/mongo/base/make_string_vector.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::ClientBasic::getAuthorizationSession() const
            symbol_sources:
            - src/mongo/db/client_basic.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::GlobalInitializerRegisterer::GlobalInitializerRegisterer(std::string
                const&, boost::function<mongo::Status (mongo::InitializerContext*)>
                const&, std::vector<std::string, std::allocator<std::string> > const&,
                std::vector<std::string, std::allocator<std::string> > const&)
            symbol_sources:
            - src/mongo/base/global_initializer_registerer.cpp
        -   symbol_name: mongo::MatchExpression::matchesBSON(mongo::BSONObj const&,
                mongo::MatchDetails*) const
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::MatchExpression::MatchExpression(mongo::MatchExpression::MatchType)
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
-   group_title: 'TODO: Name this group'
    group_description: This is the code to say "does this document match the expression"?
        This is built on the# expressions above.# Helper classes for managing document
        matching. Related to the expressions above.
    group_files:
    - src/mongo/db/matcher/matchable.cpp
    - src/mongo/db/matcher/matchable.h
    - src/mongo/db/matcher/path.cpp
    - src/mongo/db/matcher/path.h
    - src/mongo/db/matcher/path_internal.cpp
    - src/mongo/db/matcher/path_internal.h
    - src/mongo/db/matcher/path_test.cpp
    group_generated_data:
    -   file_name: src/mongo/db/matcher/matchable.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::BSONMatchableDocument::~BSONMatchableDocument()
            symbol_uses:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::BSONMatchableDocument::BSONMatchableDocument(mongo::BSONObj
                const&)
            symbol_uses:
            - src/mongo/db/matcher/expression.cpp
        file_dependencies:
        -   symbol_name: mongo::BSONElementIterator::BSONElementIterator()
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::BSONElementIterator::reset(mongo::ElementPath const*,
                mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::BSONElementIterator::~BSONElementIterator()
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::BSONElementIterator::BSONElementIterator(mongo::ElementPath
                const*, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
    -   file_name: src/mongo/db/matcher/matchable.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongorestore
        - mongodump
        - mongobridge
        - mongofiles
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongostat
        - mongosniff
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/matcher/path.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ElementIterator::Context::reset(mongo::BSONElement,
                mongo::BSONElement, bool)
            symbol_uses:
            - src/mongo/db/exec/and_hash.cpp
            - src/mongo/db/exec/fetch.cpp
            - src/mongo/db/exec/keep_mutations.cpp
            - src/mongo/db/exec/and_sorted.cpp
            - src/mongo/db/exec/index_scan.cpp
            - src/mongo/db/exec/text.cpp
            - src/mongo/db/exec/2dcommon.cpp
            - src/mongo/db/exec/collection_scan.cpp
            - src/mongo/db/exec/or.cpp
        -   symbol_name: mongo::ElementIterator::~ElementIterator()
            symbol_uses:
            - src/mongo/db/exec/and_hash.cpp
            - src/mongo/db/exec/fetch.cpp
            - src/mongo/db/exec/keep_mutations.cpp
            - src/mongo/db/exec/and_sorted.cpp
            - src/mongo/db/exec/index_scan.cpp
            - src/mongo/db/exec/text.cpp
            - src/mongo/db/exec/2dcommon.cpp
            - src/mongo/db/exec/collection_scan.cpp
            - src/mongo/db/exec/or.cpp
        -   symbol_name: typeinfo for mongo::ElementIterator
            symbol_uses:
            - src/mongo/db/exec/and_hash.cpp
            - src/mongo/db/exec/fetch.cpp
            - src/mongo/db/exec/keep_mutations.cpp
            - src/mongo/db/exec/and_sorted.cpp
            - src/mongo/db/exec/index_scan.cpp
            - src/mongo/db/exec/text.cpp
            - src/mongo/db/exec/2dcommon.cpp
            - src/mongo/db/exec/collection_scan.cpp
            - src/mongo/db/exec/or.cpp
        -   symbol_name: mongo::BSONElementIterator::~BSONElementIterator()
            symbol_uses:
            - src/mongo/db/matcher/matchable.cpp
        -   symbol_name: mongo::BSONElementIterator::BSONElementIterator()
            symbol_uses:
            - src/mongo/db/matcher/matchable.cpp
        -   symbol_name: mongo::BSONElementIterator::BSONElementIterator(mongo::ElementPath
                const*, mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/exec/and_hash.cpp
            - src/mongo/db/exec/fetch.cpp
            - src/mongo/db/exec/keep_mutations.cpp
            - src/mongo/db/matcher/matchable.cpp
            - src/mongo/db/exec/and_sorted.cpp
            - src/mongo/db/exec/index_scan.cpp
            - src/mongo/db/exec/text.cpp
            - src/mongo/db/exec/2dcommon.cpp
            - src/mongo/db/exec/collection_scan.cpp
            - src/mongo/db/exec/or.cpp
        -   symbol_name: mongo::BSONElementIterator::reset(mongo::ElementPath const*,
                mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/matcher/matchable.cpp
        -   symbol_name: mongo::ElementPath::init(mongo::StringData const&)
            symbol_uses:
            - src/mongo/db/matcher/expression_leaf.cpp
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::SimpleArrayElementIterator::SimpleArrayElementIterator(mongo::BSONElement
                const&, bool)
            symbol_uses:
            - src/mongo/db/exec/and_hash.cpp
            - src/mongo/db/exec/fetch.cpp
            - src/mongo/db/exec/keep_mutations.cpp
            - src/mongo/db/exec/and_sorted.cpp
            - src/mongo/db/exec/index_scan.cpp
            - src/mongo/db/exec/text.cpp
            - src/mongo/db/exec/2dcommon.cpp
            - src/mongo/db/exec/collection_scan.cpp
            - src/mongo/db/exec/or.cpp
        file_dependencies:
        -   symbol_name: mongo::getFieldDottedOrArray(mongo::BSONObj const&, mongo::FieldRef
                const&, unsigned long*)
            symbol_sources:
            - src/mongo/db/matcher/path_internal.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::parse(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::isAllDigits(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/matcher/path_internal.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::getPart(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
    -   file_name: src/mongo/db/matcher/path.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongorestore
        - mongodump
        - mongobridge
        - mongofiles
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongostat
        - mongosniff
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/matcher/path_internal.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::isAllDigits(mongo::StringData const&)
            symbol_uses:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::getFieldDottedOrArray(mongo::BSONObj const&, mongo::FieldRef
                const&, unsigned long*)
            symbol_uses:
            - src/mongo/db/matcher/path.cpp
        file_dependencies:
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::getPart(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/matcher/path_internal.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/matcher/path_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ElementIterator::Context::reset(mongo::BSONElement,
                mongo::BSONElement, bool)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::ElementIterator::~ElementIterator()
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::BSONElementIterator::BSONElementIterator(mongo::ElementPath
                const*, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::BSONElementIterator::~BSONElementIterator()
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::FieldRef::FieldRef()
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONElementIterator::next()
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::SimpleArrayElementIterator::next()
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::SimpleArrayElementIterator::more()
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: typeinfo for mongo::ElementIterator
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::BSONElementIterator::more()
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::SimpleArrayElementIterator
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ElementPath::init(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::SimpleArrayElementIterator::SimpleArrayElementIterator(mongo::BSONElement
                const&, bool)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
-   group_title: 'TODO: Name this group'
    group_description: Interface to actually test if a document matches.
    group_files:
    - src/mongo/db/matcher/matcher.cpp
    - src/mongo/db/matcher/matcher.h
    - src/mongo/db/matcher.h
    group_generated_data:
    -   file_name: src/mongo/db/matcher/matcher.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::Matcher2::matches(mongo::BSONObj const&, mongo::MatchDetails*)
                const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_match.cpp
            - src/mongo/db/curop.cpp
            - src/mongo/db/projection.cpp
            - src/mongo/db/instance.cpp
            - src/mongo/dbtests/matchertests.cpp
            - src/mongo/client/parallel.cpp
            - src/mongo/tools/restore.cpp
            - src/mongo/tools/tool.cpp
            - src/mongo/db/commands/apply_ops.cpp
        -   symbol_name: mongo::Matcher2::Matcher2(mongo::BSONObj const&, bool)
            symbol_uses:
            - src/mongo/db/pipeline/document_source_match.cpp
            - src/mongo/db/curop.cpp
            - src/mongo/db/projection.cpp
            - src/mongo/db/instance.cpp
            - src/mongo/dbtests/matchertests.cpp
            - src/mongo/client/parallel.cpp
            - src/mongo/tools/restore.cpp
            - src/mongo/tools/tool.cpp
            - src/mongo/db/commands/apply_ops.cpp
        file_dependencies:
        -   symbol_name: mongo::MatchExpressionParser::_parse(mongo::BSONObj const&,
                bool)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::toString() const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
    -   file_name: src/mongo/db/matcher/matcher.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongorestore
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongosniff
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/matcher.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongorestore
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongosniff
        file_interface: []
        file_dependencies: []
-   group_title: 'TODO: Name this group'
    group_description: Helper for requesting more details about what matched our query
        from the matcher system.
    group_files:
    - src/mongo/db/matcher/match_details.cpp
    - src/mongo/db/matcher/match_details.h
    group_generated_data:
    -   file_name: src/mongo/db/matcher/match_details.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::MatchDetails::elemMatchKey() const
            symbol_uses:
            - src/mongo/db/projection.cpp
            - src/mongo/db/ops/update.cpp
            - src/mongo/db/exec/projection_exec.cpp
            - src/mongo/dbtests/matchertests.cpp
        -   symbol_name: mongo::MatchDetails::setElemMatchKey(std::string const&)
            symbol_uses:
            - src/mongo/db/matcher/expression_leaf.cpp
            - src/mongo/db/matcher/expression_array.cpp
        -   symbol_name: mongo::MatchDetails::resetOutput()
            symbol_uses:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::MatchDetails::toString() const
            symbol_uses:
            - src/mongo/db/projection.cpp
        -   symbol_name: mongo::MatchDetails::MatchDetails()
            symbol_uses:
            - src/mongo/db/projection.cpp
            - src/mongo/db/ops/update.cpp
            - src/mongo/db/exec/projection_exec.cpp
            - src/mongo/dbtests/matchertests.cpp
        -   symbol_name: mongo::MatchDetails::hasElemMatchKey() const
            symbol_uses:
            - src/mongo/db/projection.cpp
            - src/mongo/db/ops/update.cpp
            - src/mongo/db/exec/projection_exec.cpp
            - src/mongo/dbtests/matchertests.cpp
        file_dependencies:
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
    -   file_name: src/mongo/db/matcher/match_details.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongorestore
        - mongodump
        - mongobridge
        - mongofiles
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongostat
        - mongosniff
        file_interface: []
        file_dependencies: []
-   group_title: 'TODO: Name this group'
    group_description: Planning/parsing/optimization for new query framework## not
        execution as well? (what are all these *runner.cpp files?)
    group_files:
    - src/mongo/db/query/cached_plan_runner.cpp
    - src/mongo/db/query/cached_plan_runner.h
    - src/mongo/db/query/canonical_query.cpp
    - src/mongo/db/query/canonical_query.h
    - src/mongo/db/query/canonical_query_test.cpp
    - src/mongo/db/query/eof_runner.cpp
    - src/mongo/db/query/eof_runner.h
    - src/mongo/db/query/explain_plan.cpp
    - src/mongo/db/query/explain_plan.h
    - src/mongo/db/query/find_constants.h
    - src/mongo/db/query/get_runner.cpp
    - src/mongo/db/query/get_runner.h
    - src/mongo/db/query/get_runner_test.cpp
    - src/mongo/db/query/idhack_runner.cpp
    - src/mongo/db/query/idhack_runner.h
    - src/mongo/db/query/index_bounds.cpp
    - src/mongo/db/query/index_bounds.h
    - src/mongo/db/query/index_bounds_builder.cpp
    - src/mongo/db/query/index_bounds_builder.h
    - src/mongo/db/query/index_bounds_builder_test.cpp
    - src/mongo/db/query/index_bounds_test.cpp
    - src/mongo/db/query/index_entry.h
    - src/mongo/db/query/index_tag.cpp
    - src/mongo/db/query/index_tag.h
    - src/mongo/db/query/indexability.h
    - src/mongo/db/query/internal_plans.h
    - src/mongo/db/query/internal_runner.cpp
    - src/mongo/db/query/internal_runner.h
    - src/mongo/db/query/interval.cpp
    - src/mongo/db/query/interval.h
    - src/mongo/db/query/interval_test.cpp
    - src/mongo/db/query/lite_parsed_query.cpp
    - src/mongo/db/query/lite_parsed_query.h
    - src/mongo/db/query/lite_parsed_query_test.cpp
    - src/mongo/db/query/multi_plan_runner.cpp
    - src/mongo/db/query/multi_plan_runner.h
    - src/mongo/db/query/new_find.cpp
    - src/mongo/db/query/new_find.h
    - src/mongo/db/query/parsed_projection.cpp
    - src/mongo/db/query/parsed_projection.h
    - src/mongo/db/query/parsed_projection_test.cpp
    - src/mongo/db/query/plan_cache.cpp
    - src/mongo/db/query/plan_cache.h
    - src/mongo/db/query/plan_cache_test.cpp
    - src/mongo/db/query/plan_enumerator.cpp
    - src/mongo/db/query/plan_enumerator.h
    - src/mongo/db/query/plan_executor.cpp
    - src/mongo/db/query/plan_executor.h
    - src/mongo/db/query/plan_ranker.cpp
    - src/mongo/db/query/plan_ranker.h
    - src/mongo/db/query/planner_access.cpp
    - src/mongo/db/query/planner_access.h
    - src/mongo/db/query/planner_analysis.cpp
    - src/mongo/db/query/planner_analysis.h
    - src/mongo/db/query/planner_ixselect.cpp
    - src/mongo/db/query/planner_ixselect.h
    - src/mongo/db/query/planner_ixselect_test.cpp
    - src/mongo/db/query/qlog.cpp
    - src/mongo/db/query/qlog.h
    - src/mongo/db/query/query_planner.cpp
    - src/mongo/db/query/query_planner.h
    - src/mongo/db/query/query_planner_common.h
    - src/mongo/db/query/query_planner_params.h
    - src/mongo/db/query/query_planner_test.cpp
    - src/mongo/db/query/query_planner_test_lib.cpp
    - src/mongo/db/query/query_planner_test_lib.h
    - src/mongo/db/query/query_settings.cpp
    - src/mongo/db/query/query_settings.h
    - src/mongo/db/query/query_solution.cpp
    - src/mongo/db/query/query_solution.h
    - src/mongo/db/query/runner.h
    - src/mongo/db/query/runner_yield_policy.h
    - src/mongo/db/query/single_solution_runner.cpp
    - src/mongo/db/query/single_solution_runner.h
    - src/mongo/db/query/stage_builder.cpp
    - src/mongo/db/query/stage_builder.h
    - src/mongo/db/query/stage_types.h
    - src/mongo/db/query/type_explain.cpp
    - src/mongo/db/query/type_explain.h
    group_generated_data:
    -   file_name: src/mongo/db/query/cached_plan_runner.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::CachedPlanRunner::setBackupPlan(mongo::QuerySolution*,
                mongo::PlanStage*, mongo::WorkingSet*)
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: mongo::CachedPlanRunner::CachedPlanRunner(mongo::Collection
                const*, mongo::CanonicalQuery*, mongo::QuerySolution*, mongo::PlanStage*,
                mongo::WorkingSet*)
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
        file_dependencies:
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::PlanExecutor::setYieldPolicy(mongo::Runner::YieldPolicy)
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::PlanExecutor::saveState()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::CollectionInfoCache::getPlanCache() const
            symbol_sources:
            - src/mongo/db/catalog/collection_info_cache.cpp
        -   symbol_name: mongo::PlanCache::feedback(mongo::CanonicalQuery const&,
                mongo::PlanCacheEntryFeedback*)
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::PlanExecutor::restoreState()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::PlanExecutor::getNext(mongo::BSONObj*, mongo::DiskLoc*)
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::TypeExplain::getNScanned() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::verboseQueryLogging
            symbol_sources:
            - src/mongo/db/query/qlog.cpp
        -   symbol_name: mongo::TypeExplain::setNScannedObjectsAllPlans(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::PlanExecutor::getStats() const
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::PlanExecutor::invalidate(mongo::DiskLoc const&, mongo::InvalidationType)
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::PlanExecutor::PlanExecutor(mongo::WorkingSet*, mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::TypeExplain::getNScannedObjects() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::PlanExecutor::~PlanExecutor()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::PlanExecutor::isEOF()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::PlanRanker::scoreTree(mongo::PlanStageStats const*)
            symbol_sources:
            - src/mongo/db/query/plan_ranker.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::TypeExplain::addToAllPlans(mongo::TypeExplain*)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::Status::toString() const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::getPlanInfo(mongo::QuerySolution const&, mongo::PlanInfo**)
            symbol_sources:
            - src/mongo/db/query/explain_plan.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::PlanExecutor::kill()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::TypeExplain::setNScannedAllPlans(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::explainPlan(mongo::PlanStageStats const&, mongo::TypeExplain**,
                bool)
            symbol_sources:
            - src/mongo/db/query/explain_plan.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/query/cached_plan_runner.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/canonical_query.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::CanonicalQuery::canonicalize(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, mongo::CanonicalQuery**)
            symbol_uses:
            - src/mongo/db/commands/index_filter_commands.cpp
            - src/mongo/db/pipeline/pipeline_d.cpp
            - src/mongo/db/commands/plan_cache_commands.cpp
            - src/mongo/db/query/get_runner.cpp
            - src/mongo/db/dbcommands.cpp
            - src/mongo/db/commands/mr.cpp
        -   symbol_name: mongo::CanonicalQuery::getPlanCacheKey() const
            symbol_uses:
            - src/mongo/db/query/query_settings.cpp
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::CanonicalQuery::toString() const
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
            - src/mongo/db/query/query_planner.cpp
            - src/mongo/db/query/new_find.cpp
        -   symbol_name: mongo::CanonicalQuery::canonicalize(mongo::QueryMessage const&,
                mongo::CanonicalQuery**)
            symbol_uses:
            - src/mongo/db/query/new_find.cpp
        -   symbol_name: mongo::CanonicalQuery::canonicalize(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, long long, long
                long, mongo::BSONObj const&, mongo::CanonicalQuery**)
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
            - src/mongo/db/fts/fts_command_mongod.cpp
            - src/mongo/db/commands/geonear.cpp
        -   symbol_name: mongo::CanonicalQuery::canonicalize(std::string const&, mongo::BSONObj
                const&, mongo::CanonicalQuery**)
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/db/ops/update.cpp
            - src/mongo/dbtests/oplogstarttests.cpp
            - src/mongo/dbtests/query_multi_plan_runner.cpp
            - src/mongo/dbtests/runner_registry.cpp
            - src/mongo/db/ops/update_driver.cpp
            - src/mongo/db/ops/delete.cpp
            - src/mongo/db/instance.cpp
            - src/mongo/db/query/get_runner.cpp
            - src/mongo/db/exec/sort.cpp
            - src/mongo/dbtests/query_single_solution_runner.cpp
            - src/mongo/db/dbhelpers.cpp
            - src/mongo/db/commands/group.cpp
        -   symbol_name: mongo::CanonicalQuery::sortTree(mongo::MatchExpression*)
            symbol_uses:
            - src/mongo/db/query/query_planner_test_lib.cpp
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: mongo::CanonicalQuery::isSimpleIdQuery(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
            - src/mongo/db/ops/update.cpp
            - src/mongo/db/instance.cpp
        file_dependencies:
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ParsedProjection::make(mongo::BSONObj const&, mongo::MatchExpression
                const*, mongo::ParsedProjection**)
            symbol_sources:
            - src/mongo/db/query/parsed_projection.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parse(mongo::BSONObj const&,
                bool)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LiteParsedQuery::make(std::string const&, int, int,
                int, mongo::BSONObj const&, mongo::BSONObj const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, mongo::BSONObj
                const&, bool, mongo::LiteParsedQuery**)
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LiteParsedQuery::isTextScoreMeta(mongo::BSONElement)
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::LiteParsedQuery::make(mongo::QueryMessage const&,
                mongo::LiteParsedQuery**)
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
    -   file_name: src/mongo/db/query/canonical_query.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/canonical_query_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::Status::operator!=(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::CanonicalQuery::isValid(mongo::MatchExpression*, mongo::LiteParsedQuery
                const&)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parse(mongo::BSONObj const&,
                bool)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::CanonicalQuery::canonicalize(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, mongo::CanonicalQuery**)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(std::string const&)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::LiteParsedQuery::make(std::string const&, int, int,
                int, mongo::BSONObj const&, mongo::BSONObj const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, mongo::BSONObj
                const&, bool, mongo::LiteParsedQuery**)
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CanonicalQuery::canonicalize(std::string const&, mongo::BSONObj
                const&, mongo::CanonicalQuery**)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::CanonicalQuery::getPlanCacheKey() const
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CanonicalQuery::normalizeTree(mongo::MatchExpression*)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::Status::toString() const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CanonicalQuery::toString() const
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/query/eof_runner.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::EOFRunner::EOFRunner(mongo::CanonicalQuery*, std::string
                const&)
            symbol_uses:
            - src/mongo/db/commands/collection_to_capped.cpp
            - src/mongo/db/repl/replication_server_status.cpp
            - src/mongo/db/commands/dbhash.cpp
            - src/mongo/db/catalog/database.cpp
            - src/mongo/db/commands/test_commands.cpp
            - src/mongo/db/catalog/index_create.cpp
            - src/mongo/dbtests/namespacetests.cpp
            - src/mongo/db/db.cpp
            - src/mongo/db/repl/rs_rollback.cpp
            - src/mongo/db/query/new_find.cpp
            - src/mongo/db/query/get_runner.cpp
            - src/mongo/db/repl/master_slave.cpp
            - src/mongo/db/dbcommands.cpp
            - src/mongo/db/catalog/index_catalog.cpp
            - src/mongo/db/dbhelpers.cpp
            - src/mongo/db/commands/validate.cpp
        file_dependencies:
        -   symbol_name: mongo::TypeExplain::setNChunkSkips(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::setIndexOnly(bool)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::setCursor(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::setNScannedObjectsAllPlans(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::setScanAndOrder(bool)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::setNYields(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::setN(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::setNScanned(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::addToAllPlans(mongo::TypeExplain*)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::setIsMultiKey(bool)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::TypeExplain()
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::setNScannedObjects(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::setNScannedAllPlans(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
    -   file_name: src/mongo/db/query/eof_runner.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/explain_plan.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::explainPlan(mongo::PlanStageStats const&, mongo::TypeExplain**,
                bool)
            symbol_uses:
            - src/mongo/db/query/cached_plan_runner.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/db/query/internal_runner.cpp
            - src/mongo/db/query/single_solution_runner.cpp
        -   symbol_name: mongo::statsToBSON(mongo::PlanStageStats const&, mongo::BSONObjBuilder*)
            symbol_uses:
            - src/mongo/db/commands/plan_cache_commands.cpp
        -   symbol_name: mongo::getPlanInfo(mongo::QuerySolution const&, mongo::PlanInfo**)
            symbol_uses:
            - src/mongo/db/query/cached_plan_runner.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/db/query/single_solution_runner.cpp
        file_dependencies:
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::TypeExplain::setNChunkSkips(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::TypeExplain::setIndexOnly(bool)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::setCursor(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::TypeExplain::getNScanned() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::setScanAndOrder(bool)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::addToClauses(mongo::TypeExplain*)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::setNYields(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::TypeExplain::setN(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::setNScanned(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::getNScannedObjects() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::invariantFailed(char const*, char const*, unsigned
                int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::TypeExplain::setIsMultiKey(bool)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::TypeExplain()
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::TypeExplain::setNScannedObjects(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::TypeExplain::setIndexBounds(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/query/explain_plan.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/find_constants.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/get_runner.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::getRunner(mongo::Collection*, mongo::CanonicalQuery*,
                mongo::Runner**, unsigned long)
            symbol_uses:
            - src/mongo/db/ops/update.cpp
        -   symbol_name: mongo::getRunner(mongo::Collection*, std::string const&,
                mongo::BSONObj const&, mongo::Runner**, mongo::CanonicalQuery**, unsigned
                long)
            symbol_uses:
            - src/mongo/db/ops/update.cpp
        -   symbol_name: mongo::ScopedRunnerRegistration::ScopedRunnerRegistration(mongo::Runner*)
            symbol_uses:
            - src/mongo/db/ops/delete.cpp
            - src/mongo/db/query/new_find.cpp
            - src/mongo/db/ops/update.cpp
            - src/mongo/db/dbcommands.cpp
            - src/mongo/db/ops/count.cpp
            - src/mongo/db/commands/mr.cpp
            - src/mongo/db/commands/distinct.cpp
            - src/mongo/db/commands/group.cpp
        -   symbol_name: mongo::getRunner(mongo::CanonicalQuery*, mongo::Runner**,
                unsigned long)
            symbol_uses:
            - src/mongo/dbtests/documentsourcetests.cpp
            - src/mongo/db/pipeline/pipeline_d.cpp
            - src/mongo/db/ops/delete.cpp
            - src/mongo/db/query/new_find.cpp
            - src/mongo/db/dbcommands.cpp
            - src/mongo/db/dbhelpers.cpp
            - src/mongo/db/fts/fts_command_mongod.cpp
            - src/mongo/db/commands/mr.cpp
            - src/mongo/db/commands/geonear.cpp
            - src/mongo/db/commands/group.cpp
        -   symbol_name: mongo::getRunnerCount(mongo::Collection*, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::Runner**)
            symbol_uses:
            - src/mongo/db/ops/count.cpp
        -   symbol_name: mongo::ScopedRunnerRegistration::~ScopedRunnerRegistration()
            symbol_uses:
            - src/mongo/db/ops/delete.cpp
            - src/mongo/db/query/new_find.cpp
            - src/mongo/db/ops/update.cpp
            - src/mongo/db/dbcommands.cpp
            - src/mongo/db/ops/count.cpp
            - src/mongo/db/commands/mr.cpp
            - src/mongo/db/commands/distinct.cpp
            - src/mongo/db/commands/group.cpp
        -   symbol_name: mongo::getRunnerDistinct(mongo::Collection*, mongo::BSONObj
                const&, std::string const&, mongo::Runner**)
            symbol_uses:
            - src/mongo/db/commands/distinct.cpp
        file_dependencies:
        -   symbol_name: typeinfo for mongo::ServerParameter
            symbol_sources:
            - src/mongo/db/server_parameters.cpp
        -   symbol_name: mongo::IDHackRunner::IDHackRunner(mongo::Collection*, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/query/idhack_runner.cpp
        -   symbol_name: mongo::CollectionCursorCache::registerRunner(mongo::Runner*)
            symbol_sources:
            - src/mongo/db/catalog/collection_cursor_cache.cpp
        -   symbol_name: mongo::IndexCatalog::IndexIterator::next()
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::CachedPlanRunner::setBackupPlan(mongo::QuerySolution*,
                mongo::PlanStage*, mongo::WorkingSet*)
            symbol_sources:
            - src/mongo/db/query/cached_plan_runner.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::QueryPlanner::planFromCache(mongo::CanonicalQuery
                const&, mongo::QueryPlannerParams const&, mongo::CachedSolution const&,
                mongo::QuerySolution**, mongo::QuerySolution**)
            symbol_sources:
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::CanonicalQuery::canonicalize(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, mongo::CanonicalQuery**)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::invariantFailed(char const*, char const*, unsigned
                int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: vtable for mongo::DistinctNode
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: mongo::PlanCache::shouldCacheQuery(mongo::CanonicalQuery
                const&)
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::Interval::reverse()
            symbol_sources:
            - src/mongo/db/query/interval.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CanonicalQuery::toString() const
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::CanonicalQuery::canonicalize(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, long long, long
                long, mongo::BSONObj const&, mongo::CanonicalQuery**)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::PlanCache::get(mongo::CanonicalQuery const&, mongo::CachedSolution**)
                const
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::StageBuilder::build(mongo::QuerySolution const&, mongo::PlanStage**,
                mongo::WorkingSet**)
            symbol_sources:
            - src/mongo/db/query/stage_builder.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::allValuesBounds(mongo::BSONObj
                const&, mongo::IndexBounds*)
            symbol_sources:
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::CachedSolution::~CachedSolution()
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::shardingState
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::MultiPlanRunner::MultiPlanRunner(mongo::Collection
                const*, mongo::CanonicalQuery*)
            symbol_sources:
            - src/mongo/db/query/multi_plan_runner.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ServerParameter::~ServerParameter()
            symbol_sources:
            - src/mongo/db/server_parameters.cpp
        -   symbol_name: mongo::ShardingState::getCollectionMetadata(std::string const&)
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ServerParameter::ServerParameter(mongo::ServerParameterSet*,
                std::string const&, bool, bool)
            symbol_sources:
            - src/mongo/db/server_parameters.cpp
        -   symbol_name: mongo::IDHackRunner::IDHackRunner(mongo::Collection const*,
                mongo::CanonicalQuery*)
            symbol_sources:
            - src/mongo/db/query/idhack_runner.cpp
        -   symbol_name: mongo::QueryPlanner::plan(mongo::CanonicalQuery const&, mongo::QueryPlannerParams
                const&, std::vector<mongo::QuerySolution*, std::allocator<mongo::QuerySolution*>
                >*)
            symbol_sources:
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: mongo::CanonicalQuery::canonicalize(std::string const&, mongo::BSONObj
                const&, mongo::CanonicalQuery**)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::EOFRunner::EOFRunner(mongo::CanonicalQuery*, std::string
                const&)
            symbol_sources:
            - src/mongo/db/query/eof_runner.cpp
        -   symbol_name: mongo::CollectionInfoCache::getQuerySettings() const
            symbol_sources:
            - src/mongo/db/catalog/collection_info_cache.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::allValues()
            symbol_sources:
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::ExportedServerParameter<bool>::setFromString(std::string
                const&)
            symbol_sources:
            - src/mongo/db/server_parameters.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::Interval::equals(mongo::Interval const&) const
            symbol_sources:
            - src/mongo/db/query/interval.cpp
        -   symbol_name: mongo::Collection::isCapped() const
            symbol_sources:
            - src/mongo/db/catalog/collection.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::AllowedIndices::~AllowedIndices()
            symbol_sources:
            - src/mongo/db/query/query_settings.cpp
        -   symbol_name: mongo::QueryPlannerAnalysis::analyzeDataAccess(mongo::CanonicalQuery
                const&, mongo::QueryPlannerParams const&, mongo::QuerySolutionNode*)
            symbol_sources:
            - src/mongo/db/query/planner_analysis.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::CollectionCursorCache::deregisterRunner(mongo::Runner*)
            symbol_sources:
            - src/mongo/db/catalog/collection_cursor_cache.cpp
        -   symbol_name: mongo::IndexCatalog::IndexIterator::more()
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::CollectionInfoCache::getPlanCache() const
            symbol_sources:
            - src/mongo/db/catalog/collection_info_cache.cpp
        -   symbol_name: mongo::IndexCatalog::findIdIndex() const
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::MultiPlanRunner::addPlan(mongo::QuerySolution*, mongo::PlanStage*,
                mongo::WorkingSet*)
            symbol_sources:
            - src/mongo/db/query/multi_plan_runner.cpp
        -   symbol_name: mongo::SingleSolutionRunner::SingleSolutionRunner(mongo::Collection
                const*, mongo::CanonicalQuery*, mongo::QuerySolution*, mongo::PlanStage*,
                mongo::WorkingSet*)
            symbol_sources:
            - src/mongo/db/query/single_solution_runner.cpp
        -   symbol_name: mongo::IndexCatalog::IndexIterator::IndexIterator(mongo::IndexCatalog
                const*, bool)
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: vtable for mongo::CountNode
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: mongo::CachedPlanRunner::CachedPlanRunner(mongo::Collection
                const*, mongo::CanonicalQuery*, mongo::QuerySolution*, mongo::PlanStage*,
                mongo::WorkingSet*)
            symbol_sources:
            - src/mongo/db/query/cached_plan_runner.cpp
        -   symbol_name: mongo::CanonicalQuery::isSimpleIdQuery(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::QuerySettings::getAllowedIndices(mongo::CanonicalQuery
                const&, mongo::AllowedIndices**) const
            symbol_sources:
            - src/mongo/db/query/query_settings.cpp
        -   symbol_name: mongo::IndexCatalog::isMultikey(mongo::IndexDescriptor const*)
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::ServerParameterSet::getGlobal()
            symbol_sources:
            - src/mongo/db/server_parameters.cpp
        -   symbol_name: mongo::storageGlobalParams
            symbol_sources:
            - src/mongo/db/storage_options.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/db/query/get_runner.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/get_runner_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::QuerySettings::setAllowedIndices(mongo::CanonicalQuery
                const&, std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj>
                > const&)
            symbol_sources:
            - src/mongo/db/query/query_settings.cpp
        -   symbol_name: mongo::QuerySettings::QuerySettings()
            symbol_sources:
            - src/mongo/db/query/query_settings.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::QuerySettings::~QuerySettings()
            symbol_sources:
            - src/mongo/db/query/query_settings.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::CanonicalQuery::canonicalize(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, mongo::CanonicalQuery**)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::CanonicalQuery::getPlanCacheKey() const
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::QuerySettings::getAllowedIndices(mongo::CanonicalQuery
                const&, mongo::AllowedIndices**) const
            symbol_sources:
            - src/mongo/db/query/query_settings.cpp
        -   symbol_name: mongo::filterAllowedIndexEntries(mongo::AllowedIndices const&,
                std::vector<mongo::IndexEntry, std::allocator<mongo::IndexEntry> >*)
            symbol_sources:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::AllowedIndices::~AllowedIndices()
            symbol_sources:
            - src/mongo/db/query/query_settings.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/query/idhack_runner.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::IDHackRunner::IDHackRunner(mongo::Collection*, mongo::BSONObj
                const&)
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: mongo::IDHackRunner::IDHackRunner(mongo::Collection const*,
                mongo::CanonicalQuery*)
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
        file_dependencies:
        -   symbol_name: mongo::ProjectionExec::ProjectionExec(mongo::BSONObj const&,
                mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/projection_exec.cpp
        -   symbol_name: mongo::TypeExplain::setIDHack(bool)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::IndexCatalog::getIndex(mongo::IndexDescriptor const*)
                const
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::ProjectionExec::transform(mongo::BSONObj const&, mongo::BSONObj*)
                const
            symbol_sources:
            - src/mongo/db/exec/projection_exec.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::TypeExplain::setN(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::DiskLoc::rec() const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::shardingState
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::ProjectionExec::~ProjectionExec()
            symbol_sources:
            - src/mongo/db/exec/projection_exec.cpp
        -   symbol_name: mongo::KeyPattern::KeyPattern(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/keypattern.cpp
        -   symbol_name: mongo::CollectionMetadata::keyBelongsToMe(mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ClientCursor::staticYield(int, mongo::StringData const&,
                mongo::Record const*)
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: mongo::TypeExplain::setNScanned(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::Record::likelyInPhysicalMemory(char const*)
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::ShardingState::needCollectionMetadata(std::string
                const&) const
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::ClientCursor::suggestYieldMicros()
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DiskLoc::obj() const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::ShardingState::getCollectionMetadata(std::string const&)
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::TypeExplain::TypeExplain()
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::TypeExplain::setNScannedObjects(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::KeyPattern::extractSingleKey(mongo::BSONObj const&)
                const
            symbol_sources:
            - src/mongo/db/keypattern.cpp
        -   symbol_name: mongo::IndexCatalog::findIdIndex() const
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
    -   file_name: src/mongo/db/query/idhack_runner.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/index_bounds.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::IndexBounds::toBSON() const
            symbol_uses:
            - src/mongo/db/exec/index_scan.cpp
        -   symbol_name: mongo::IndexBoundsChecker::IndexBoundsChecker(mongo::IndexBounds
                const*, mongo::BSONObj const&, int)
            symbol_uses:
            - src/mongo/db/exec/sort.cpp
            - src/mongo/db/exec/index_scan.cpp
            - src/mongo/db/exec/distinct_scan.cpp
        -   symbol_name: mongo::OrderedIntervalList::toString() const
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::IndexBounds::isValidFor(mongo::BSONObj const&, int)
            symbol_uses:
            - src/mongo/db/query/planner_access.cpp
            - src/mongo/db/query/planner_analysis.cpp
            - src/mongo/db/exec/2dcommon.cpp
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::OrderedIntervalList::isValidFor(int) const
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::IndexBoundsChecker::isValidKey(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/exec/sort.cpp
        -   symbol_name: mongo::IndexBoundsChecker::getStartKey(std::vector<mongo::BSONElement
                const*, std::allocator<mongo::BSONElement const*> >*, std::vector<bool,
                std::allocator<bool> >*)
            symbol_uses:
            - src/mongo/db/exec/index_scan.cpp
            - src/mongo/db/exec/distinct_scan.cpp
        -   symbol_name: mongo::IndexBoundsChecker::checkKey(mongo::BSONObj const&,
                int*, bool*, std::vector<mongo::BSONElement const*, std::allocator<mongo::BSONElement
                const*> >*, std::vector<bool, std::allocator<bool> >*)
            symbol_uses:
            - src/mongo/db/exec/index_scan.cpp
            - src/mongo/db/exec/distinct_scan.cpp
        -   symbol_name: mongo::IndexBounds::toString() const
            symbol_uses:
            - src/mongo/db/query/query_solution.cpp
            - src/mongo/db/query/planner_access.cpp
            - src/mongo/db/query/planner_analysis.cpp
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::IndexBounds::getInterval(unsigned long, unsigned long)
                const
            symbol_uses:
            - src/mongo/db/query/query_planner_test_lib.cpp
        file_dependencies:
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::BSONObj::clientReadable() const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Interval::Interval()
            symbol_sources:
            - src/mongo/db/query/interval.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/query/index_bounds.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/index_bounds_builder.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::IndexBoundsBuilder::allValuesBounds(mongo::BSONObj
                const&, mongo::IndexBounds*)
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
            - src/mongo/db/query/planner_access.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::allValuesForField(mongo::BSONElement
                const&, mongo::OrderedIntervalList*)
            symbol_uses:
            - src/mongo/db/query/planner_access.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::makeRangeInterval(std::string
                const&, std::string const&, bool, bool)
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::translateAndIntersect(mongo::MatchExpression
                const*, mongo::BSONElement const&, mongo::IndexEntry const&, mongo::OrderedIntervalList*,
                mongo::IndexBoundsBuilder::BoundsTightness*)
            symbol_uses:
            - src/mongo/db/query/planner_access.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::reverseInterval(mongo::Interval*)
            symbol_uses:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::allValues()
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
            - src/mongo/dbtests/query_stage_distinct.cpp
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::translateAndUnion(mongo::MatchExpression
                const*, mongo::BSONElement const&, mongo::IndexEntry const&, mongo::OrderedIntervalList*,
                mongo::IndexBoundsBuilder::BoundsTightness*)
            symbol_uses:
            - src/mongo/db/query/planner_access.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::makePointInterval(std::string
                const&)
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::translate(mongo::MatchExpression
                const*, mongo::BSONElement const&, mongo::IndexEntry const&, mongo::OrderedIntervalList*,
                mongo::IndexBoundsBuilder::BoundsTightness*)
            symbol_uses:
            - src/mongo/db/query/planner_access.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::alignBounds(mongo::IndexBounds*,
                mongo::BSONObj const&, int)
            symbol_uses:
            - src/mongo/db/query/planner_access.cpp
        file_dependencies:
        -   symbol_name: mongo::BSONObjBuilder::appendMaxForType(mongo::StringData
                const&, int)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: S2RegionCoverer::S2RegionCoverer()
            symbol_sources:
            - src/third_party/s2/s2regioncoverer.cc
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::IndexBounds::isValidFor(mongo::BSONObj const&, int)
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: S2::kAvgEdge
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: mongo::Interval::reverse()
            symbol_sources:
            - src/mongo/db/query/interval.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: S2CellId::kNumFaces
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S2RegionCoverer::set_max_level(int)
            symbol_sources:
            - src/third_party/s2/s2regioncoverer.cc
        -   symbol_name: mongo::Interval::Interval()
            symbol_sources:
            - src/mongo/db/query/interval.cpp
        -   symbol_name: mongo::OrderedIntervalList::toString() const
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: S2::kMaxCellLevel
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::OrderedIntervalList::isValidFor(int) const
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: S2CellId::ToString() const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: mongo::BSONElementHasher::hash64(mongo::BSONElement const&,
                int)
            symbol_sources:
            - src/mongo/db/hasher.cpp
        -   symbol_name: S2CellId::level() const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: mongo::GeoQuery::getRegion() const
            symbol_sources:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::Interval::compare(mongo::Interval const&) const
            symbol_sources:
            - src/mongo/db/query/interval.cpp
        -   symbol_name: mongo::Interval::intersect(mongo::Interval const&, mongo::Interval::IntervalComparison)
            symbol_sources:
            - src/mongo/db/query/interval.cpp
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: vtable for S2LatLngRect
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2RegionCoverer::set_min_level(int)
            symbol_sources:
            - src/third_party/s2/s2regioncoverer.cc
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S2RegionCoverer::~S2RegionCoverer()
            symbol_sources:
            - src/third_party/s2/s2regioncoverer.cc
        -   symbol_name: mongo::BSONObjBuilder::appendMinForType(mongo::StringData
                const&, int)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::IndexBounds::toString() const
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::verboseQueryLogging
            symbol_sources:
            - src/mongo/db/query/qlog.cpp
        -   symbol_name: S2CellId::kPosBits
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: S2LatLngRect::Area() const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2CellId::kMaxLevel
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2RegionCoverer::GetCovering(S2Region const&, std::vector<S2CellId,
                std::allocator<S2CellId> >*)
            symbol_sources:
            - src/third_party/s2/s2regioncoverer.cc
    -   file_name: src/mongo/db/query/index_bounds_builder.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/index_bounds_builder_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::IndexBoundsBuilder::translate(mongo::MatchExpression
                const*, mongo::BSONElement const&, mongo::IndexEntry const&, mongo::OrderedIntervalList*,
                mongo::IndexBoundsBuilder::BoundsTightness*)
            symbol_sources:
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::LT
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::Interval::compare(mongo::Interval const&) const
            symbol_sources:
            - src/mongo/db/query/interval.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::translateAndIntersect(mongo::MatchExpression
                const*, mongo::BSONElement const&, mongo::IndexEntry const&, mongo::OrderedIntervalList*,
                mongo::IndexBoundsBuilder::BoundsTightness*)
            symbol_sources:
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::simpleRegex(char const*, char
                const*, mongo::IndexBoundsBuilder::BoundsTightness*)
            symbol_sources:
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::translateAndUnion(mongo::MatchExpression
                const*, mongo::BSONElement const&, mongo::IndexEntry const&, mongo::OrderedIntervalList*,
                mongo::IndexBoundsBuilder::BoundsTightness*)
            symbol_sources:
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parse(mongo::BSONObj const&,
                bool)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Interval::Interval(mongo::BSONObj, bool, bool)
            symbol_sources:
            - src/mongo/db/query/interval.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/query/index_bounds_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::IndexBoundsChecker::IndexBoundsChecker(mongo::IndexBounds
                const*, mongo::BSONObj const&, int)
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::IndexBoundsChecker::getStartKey(std::vector<mongo::BSONElement
                const*, std::allocator<mongo::BSONElement const*> >*, std::vector<bool,
                std::allocator<bool> >*)
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::IndexBoundsChecker::checkKey(mongo::BSONObj const&,
                int*, bool*, std::vector<mongo::BSONElement const*, std::allocator<mongo::BSONElement
                const*> >*, std::vector<bool, std::allocator<bool> >*)
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::IndexBounds::isValidFor(mongo::BSONObj const&, int)
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Interval::Interval(mongo::BSONObj, bool, bool)
            symbol_sources:
            - src/mongo/db/query/interval.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/query/index_entry.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/index_tag.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::IndexTag::kNoIndex
            symbol_uses:
            - src/mongo/db/query/planner_access.cpp
        -   symbol_name: mongo::sortUsingTags(mongo::MatchExpression*)
            symbol_uses:
            - src/mongo/db/query/plan_enumerator.cpp
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: mongo::tagForSort(mongo::MatchExpression*)
            symbol_uses:
            - src/mongo/db/query/plan_enumerator.cpp
        file_dependencies:
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
    -   file_name: src/mongo/db/query/index_tag.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/indexability.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/internal_plans.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/internal_runner.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::InternalRunner::InternalRunner(mongo::Collection const*,
                mongo::PlanStage*, mongo::WorkingSet*)
            symbol_uses:
            - src/mongo/db/repl/replication_server_status.cpp
            - src/mongo/db/commands/dbhash.cpp
            - src/mongo/db/catalog/database.cpp
            - src/mongo/db/commands/test_commands.cpp
            - src/mongo/db/catalog/index_create.cpp
            - src/mongo/dbtests/namespacetests.cpp
            - src/mongo/db/db.cpp
            - src/mongo/db/repl/rs_rollback.cpp
            - src/mongo/db/query/new_find.cpp
            - src/mongo/db/commands/collection_to_capped.cpp
            - src/mongo/db/repl/master_slave.cpp
            - src/mongo/db/dbcommands.cpp
            - src/mongo/db/catalog/index_catalog.cpp
            - src/mongo/db/dbhelpers.cpp
            - src/mongo/db/commands/validate.cpp
            - src/mongo/db/index/haystack_access_method.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/s/d_migrate.cpp
        file_dependencies:
        -   symbol_name: mongo::PlanExecutor::setYieldPolicy(mongo::Runner::YieldPolicy)
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::CollectionCursorCache::deregisterRunner(mongo::Runner*)
            symbol_sources:
            - src/mongo/db/catalog/collection_cursor_cache.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::PlanExecutor::saveState()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::CollectionCursorCache::registerRunner(mongo::Runner*)
            symbol_sources:
            - src/mongo/db/catalog/collection_cursor_cache.cpp
        -   symbol_name: mongo::PlanExecutor::restoreState()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::PlanExecutor::getNext(mongo::BSONObj*, mongo::DiskLoc*)
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::TypeExplain::getNScanned() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::setNScannedObjectsAllPlans(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::PlanExecutor::getStats() const
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::PlanExecutor::~PlanExecutor()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::PlanExecutor::PlanExecutor(mongo::WorkingSet*, mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::TypeExplain::getNScannedObjects() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::PlanExecutor::invalidate(mongo::DiskLoc const&, mongo::InvalidationType)
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::PlanExecutor::isEOF()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::invariantFailed(char const*, char const*, unsigned
                int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::TypeExplain::addToAllPlans(mongo::TypeExplain*)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::PlanExecutor::kill()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::TypeExplain::setNScannedAllPlans(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::explainPlan(mongo::PlanStageStats const&, mongo::TypeExplain**,
                bool)
            symbol_sources:
            - src/mongo/db/query/explain_plan.cpp
    -   file_name: src/mongo/db/query/internal_runner.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/interval.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::Interval::reverse()
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
            - src/mongo/db/query/planner_access.cpp
            - src/mongo/db/query/planner_analysis.cpp
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::Interval::Interval(mongo::BSONObj, bool, bool)
            symbol_uses:
            - src/mongo/db/exec/2dcommon.cpp
            - src/mongo/db/query/query_planner_test_lib.cpp
        -   symbol_name: mongo::Interval::Interval()
            symbol_uses:
            - src/mongo/db/query/index_bounds.cpp
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::Interval::compare(mongo::Interval const&) const
            symbol_uses:
            - src/mongo/db/query/query_planner_test_lib.cpp
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::Interval::intersect(mongo::Interval const&, mongo::Interval::IntervalComparison)
            symbol_uses:
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::Interval::equals(mongo::Interval const&) const
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
        file_dependencies:
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/query/interval.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/interval_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Interval::compare(mongo::Interval const&) const
            symbol_sources:
            - src/mongo/db/query/interval.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::Interval::intersect(mongo::Interval const&, mongo::Interval::IntervalComparison)
            symbol_sources:
            - src/mongo/db/query/interval.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::Interval::combine(mongo::Interval const&, mongo::Interval::IntervalComparison)
            symbol_sources:
            - src/mongo/db/query/interval.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::Interval::isEmpty() const
            symbol_sources:
            - src/mongo/db/query/interval.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Interval::Interval(mongo::BSONObj, bool, bool)
            symbol_sources:
            - src/mongo/db/query/interval.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/query/lite_parsed_query.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::LiteParsedQuery::isTextScoreMeta(mongo::BSONElement)
            symbol_uses:
            - src/mongo/db/exec/sort.cpp
            - src/mongo/client/parallel.cpp
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::LiteParsedQuery::parseMaxTimeMSQuery(mongo::BSONObj
                const&)
            symbol_uses:
            - src/mongo/s/strategy.cpp
        -   symbol_name: mongo::LiteParsedQuery::metaDiskLoc
            symbol_uses:
            - src/mongo/db/exec/projection_exec.cpp
            - src/mongo/db/query/parsed_projection.cpp
        -   symbol_name: mongo::LiteParsedQuery::make(std::string const&, int, int,
                int, mongo::BSONObj const&, mongo::BSONObj const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, mongo::BSONObj
                const&, bool, mongo::LiteParsedQuery**)
            symbol_uses:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::LiteParsedQuery::normalizeSortOrder(mongo::BSONObj
                const&)
            symbol_uses:
            - src/mongo/db/query/query_solution.cpp
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: mongo::LiteParsedQuery::make(mongo::QueryMessage const&,
                mongo::LiteParsedQuery**)
            symbol_uses:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::LiteParsedQuery::cmdOptionMaxTimeMS
            symbol_uses:
            - src/mongo/s/commands_public.cpp
            - src/mongo/db/dbcommands.cpp
            - src/mongo/s/chunk.cpp
            - src/mongo/db/pipeline/pipeline.cpp
        -   symbol_name: mongo::LiteParsedQuery::metaGeoNearPoint
            symbol_uses:
            - src/mongo/db/exec/projection_exec.cpp
            - src/mongo/db/query/parsed_projection.cpp
            - src/mongo/db/commands/geonear.cpp
        -   symbol_name: mongo::LiteParsedQuery::metaGeoNearDistance
            symbol_uses:
            - src/mongo/db/exec/projection_exec.cpp
            - src/mongo/db/query/parsed_projection.cpp
            - src/mongo/db/commands/geonear.cpp
        -   symbol_name: mongo::LiteParsedQuery::parseMaxTimeMSCommand(mongo::BSONObj
                const&)
            symbol_uses:
            - src/mongo/s/commands_admin.cpp
            - src/mongo/db/dbcommands.cpp
        -   symbol_name: mongo::LiteParsedQuery::metaIndexKey
            symbol_uses:
            - src/mongo/db/exec/projection_exec.cpp
            - src/mongo/db/query/parsed_projection.cpp
        -   symbol_name: mongo::LiteParsedQuery::metaTextScore
            symbol_uses:
            - src/mongo/db/exec/projection_exec.cpp
            - src/mongo/db/fts/fts_command_mongod.cpp
            - src/mongo/db/query/parsed_projection.cpp
        file_dependencies:
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::isFieldNamePrefixOf(mongo::BSONObj const&)
                const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/query/lite_parsed_query.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/lite_parsed_query_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::LiteParsedQuery::isTextScoreMeta(mongo::BSONElement)
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::LiteParsedQuery::make(std::string const&, int, int,
                int, mongo::BSONObj const&, mongo::BSONObj const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, mongo::BSONObj
                const&, bool, mongo::LiteParsedQuery**)
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::LiteParsedQuery::isValidSortOrder(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::operator!=(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LiteParsedQuery::normalizeSortOrder(mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/query/multi_plan_runner.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::MultiPlanRunner::getNext(mongo::BSONObj*, mongo::DiskLoc*)
            symbol_uses:
            - src/mongo/dbtests/query_multi_plan_runner.cpp
        -   symbol_name: mongo::MultiPlanRunner::MultiPlanRunner(mongo::Collection
                const*, mongo::CanonicalQuery*)
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
            - src/mongo/dbtests/query_multi_plan_runner.cpp
        -   symbol_name: mongo::MultiPlanRunner::~MultiPlanRunner()
            symbol_uses:
            - src/mongo/dbtests/query_multi_plan_runner.cpp
        -   symbol_name: mongo::MultiPlanRunner::pickBestPlan(unsigned long*)
            symbol_uses:
            - src/mongo/dbtests/query_multi_plan_runner.cpp
        -   symbol_name: mongo::MultiPlanRunner::addPlan(mongo::QuerySolution*, mongo::PlanStage*,
                mongo::WorkingSet*)
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
            - src/mongo/dbtests/query_multi_plan_runner.cpp
        file_dependencies:
        -   symbol_name: mongo::PlanExecutor::setYieldPolicy(mongo::Runner::YieldPolicy)
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::ElapsedTracker::ElapsedTracker(int, int)
            symbol_sources:
            - src/mongo/util/elapsed_tracker.cpp
        -   symbol_name: mongo::TypeExplain::getNScanned() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::Record::likelyInPhysicalMemory(char const*)
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::PlanExecutor::isEOF()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::WorkingSet::flagForReview(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::PlanCache::shouldCacheQuery(mongo::CanonicalQuery
                const&)
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ElapsedTracker::intervalHasElapsed()
            symbol_sources:
            - src/mongo/util/elapsed_tracker.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::PlanRanker::pickBestPlan(std::vector<mongo::CandidatePlan,
                std::allocator<mongo::CandidatePlan> > const&, mongo::PlanRankingDecision*)
            symbol_sources:
            - src/mongo/db/query/plan_ranker.cpp
        -   symbol_name: mongo::WorkingSet::~WorkingSet()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::WorkingSetCommon::fetchAndInvalidateLoc(mongo::WorkingSetMember*)
            symbol_sources:
            - src/mongo/db/exec/working_set_common.cpp
        -   symbol_name: mongo::PlanExecutor::invalidate(mongo::DiskLoc const&, mongo::InvalidationType)
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::TypeExplain::getNScannedObjects() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::PlanCache::remove(mongo::CanonicalQuery const&)
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::PlanExecutor::kill()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::TypeExplain::setNScannedAllPlans(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::Status::operator!=(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::Record::touch(bool) const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::TypeExplain::setNScannedObjectsAllPlans(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::PlanExecutor::getStats() const
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::PlanExecutor::~PlanExecutor()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::WorkingSetMember::hasObj() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::TypeExplain::addToAllPlans(mongo::TypeExplain*)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::PlanCache::add(mongo::CanonicalQuery const&, std::vector<mongo::QuerySolution*,
                std::allocator<mongo::QuerySolution*> > const&, mongo::PlanRankingDecision*)
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::CollectionCursorCache::deregisterRunner(mongo::Runner*)
            symbol_sources:
            - src/mongo/db/catalog/collection_cursor_cache.cpp
        -   symbol_name: mongo::PlanExecutor::saveState()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::CollectionInfoCache::getPlanCache() const
            symbol_sources:
            - src/mongo/db/catalog/collection_info_cache.cpp
        -   symbol_name: mongo::PlanExecutor::restoreState()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::PlanExecutor::getNext(mongo::BSONObj*, mongo::DiskLoc*)
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::ElapsedTracker::resetLastTime()
            symbol_sources:
            - src/mongo/util/elapsed_tracker.cpp
        -   symbol_name: mongo::DiskLoc::rec() const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::verboseQueryLogging
            symbol_sources:
            - src/mongo/db/query/qlog.cpp
        -   symbol_name: mongo::WorkingSetMember::hasLoc() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::WorkingSet::free(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::PlanExecutor::PlanExecutor(mongo::WorkingSet*, mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::PlanExecutor::getWorkingSet()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::ClientCursor::staticYield(int, mongo::StringData const&,
                mongo::Record const*)
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: mongo::getPlanInfo(mongo::QuerySolution const&, mongo::PlanInfo**)
            symbol_sources:
            - src/mongo/db/query/explain_plan.cpp
        -   symbol_name: mongo::explainPlan(mongo::PlanStageStats const&, mongo::TypeExplain**,
                bool)
            symbol_sources:
            - src/mongo/db/query/explain_plan.cpp
        -   symbol_name: mongo::ClientCursor::suggestYieldMicros()
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
    -   file_name: src/mongo/db/query/multi_plan_runner.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/new_find.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::MaxBytesToReturnToClientAtOnce
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
            - src/mongo/db/commands/pipeline_command.cpp
        -   symbol_name: mongo::newGetMore(char const*, int, long long, mongo::CurOp&,
                int, bool&, bool*)
            symbol_uses:
            - src/mongo/db/instance.cpp
        -   symbol_name: mongo::newRunQuery(mongo::Message&, mongo::QueryMessage&,
                mongo::CurOp&, mongo::Message&)
            symbol_uses:
            - src/mongo/dbtests/querytests.cpp
            - src/mongo/db/instance.cpp
        file_dependencies:
        -   symbol_name: mongo::TypeExplain::getScanAndOrder() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::SingleSolutionRunner::SingleSolutionRunner(mongo::Collection
                const*, mongo::CanonicalQuery*, mongo::QuerySolution*, mongo::PlanStage*,
                mongo::WorkingSet*)
            symbol_sources:
            - src/mongo/db/query/single_solution_runner.cpp
        -   symbol_name: mongo::ClientCursor::updateSlaveLocation(mongo::CurOp&)
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: mongo::TypeExplain::isScanAndOrderSet() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::Client::ReadContext::ReadContext(std::string const&,
                std::string const&)
            symbol_sources:
            - src/mongo/db/client.cpp
        -   symbol_name: mongo::CurOp::setMaxTimeMicros(unsigned long long)
            symbol_sources:
            - src/mongo/db/curop.cpp
        -   symbol_name: mongo::killCurrentOp
            symbol_sources:
            - src/mongo/db/instance.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::TypeExplain::getNScanned() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::CurOp::ensureStarted()
            symbol_sources:
            - src/mongo/db/curop.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Command::appendCommandStatus(mongo::BSONObjBuilder&,
                mongo::Status const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::Collection::numRecords() const
            symbol_sources:
            - src/mongo/db/catalog/collection.cpp
        -   symbol_name: mongo::KillCurrentOp::checkForInterrupt(bool)
            symbol_sources:
            - src/mongo/db/kill_current_op.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CanonicalQuery::toString() const
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::Status::toString() const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::CanonicalQuery::canonicalize(mongo::QueryMessage const&,
                mongo::CanonicalQuery**)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::TypeExplain::isIDHackSet() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::_runCommands(char const*, mongo::BSONObj&, mongo::_BufBuilder<mongo::TrivialAllocator>&,
                mongo::BSONObjBuilder&, bool, int)
            symbol_sources:
            - src/mongo/db/dbcommands.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::OplogStart::OplogStart(std::string const&, mongo::MatchExpression*,
                mongo::WorkingSet*)
            symbol_sources:
            - src/mongo/db/exec/oplogstart.cpp
        -   symbol_name: mongo::shardingState
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::WorkingSet::WorkingSet()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ShardingState::getCollectionMetadata(std::string const&)
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::DBException::convertExceptionCode(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ClientCursorPin::ClientCursorPin(mongo::Collection
                const*, long long)
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: mongo::DBException::traceIfNeeded(mongo::DBException const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ScopedRunnerRegistration::~ScopedRunnerRegistration()
            symbol_sources:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: mongo::ShardingState::getVersion(std::string const&) const
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::EOFRunner::EOFRunner(mongo::CanonicalQuery*, std::string
                const&)
            symbol_sources:
            - src/mongo/db/query/eof_runner.cpp
        -   symbol_name: mongo::TypeExplain::setMillis(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::ScopedRunnerRegistration::ScopedRunnerRegistration(mongo::Runner*)
            symbol_sources:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: mongo::InternalRunner::InternalRunner(mongo::Collection const*,
                mongo::PlanStage*, mongo::WorkingSet*)
            symbol_sources:
            - src/mongo/db/query/internal_runner.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::Client::Context::~Context()
            symbol_sources:
            - src/mongo/db/client.cpp
        -   symbol_name: mongo::DBException::toString() const
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::replVerifyReadsOk(mongo::LiteParsedQuery const*)
            symbol_sources:
            - src/mongo/db/repl/repl_reads_ok.cpp
        -   symbol_name: mongo::CollectionScan::CollectionScan(mongo::CollectionScanParams
                const&, mongo::WorkingSet*, mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/collection_scan.cpp
        -   symbol_name: mongo::ClientCursor::setIdleTime(unsigned int)
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: mongo::CurOp::getRemainingMaxTimeMicros() const
            symbol_sources:
            - src/mongo/db/curop.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::OID const&)
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::TypeExplain::getIDHack() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::getHostNameCached()
            symbol_sources:
            - src/mongo/util/net/sock.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::ClientCursorPin::c() const
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: mongo::curTimeMicros64()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::TypeExplain::setServer(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::verboseQueryLogging
            symbol_sources:
            - src/mongo/db/query/qlog.cpp
        -   symbol_name: vtable for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::getRunner(mongo::CanonicalQuery*, mongo::Runner**,
                unsigned long)
            symbol_sources:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: mongo::ClientCursor::ClientCursor(mongo::Collection const*,
                mongo::Runner*, int, mongo::BSONObj)
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: mongo::TypeExplain::setN(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::ClientCursorPin::deleteUnderlying()
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: mongo::ShardingState::needCollectionMetadata(std::string
                const&) const
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::ClientCursorPin::~ClientCursorPin()
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: mongo::TypeExplain::isNScannedSet() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::storageGlobalParams
            symbol_sources:
            - src/mongo/db/storage_options.cpp
        -   symbol_name: mongo::serverGlobalParams
            symbol_sources:
            - src/mongo/db/server_options.cpp
        -   symbol_name: mongo::causedBy(std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
    -   file_name: src/mongo/db/query/new_find.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/parsed_projection.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ParsedProjection::make(mongo::BSONObj const&, mongo::MatchExpression
                const*, mongo::ParsedProjection**)
            symbol_uses:
            - src/mongo/db/query/canonical_query.cpp
        file_dependencies:
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::LiteParsedQuery::metaGeoNearDistance
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parse(mongo::BSONObj const&,
                bool)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LiteParsedQuery::metaTextScore
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::LiteParsedQuery::metaGeoNearPoint
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LiteParsedQuery::metaIndexKey
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LiteParsedQuery::metaDiskLoc
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/db/query/parsed_projection.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/parsed_projection_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ParsedProjection::make(mongo::BSONObj const&, mongo::MatchExpression
                const*, mongo::ParsedProjection**)
            symbol_sources:
            - src/mongo/db/query/parsed_projection.cpp
        -   symbol_name: vtable for mongo::FalseMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parse(mongo::BSONObj const&,
                bool)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MatchExpression::MatchExpression(mongo::MatchExpression::MatchType)
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
    -   file_name: src/mongo/db/query/plan_cache.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::PlanCache::notifyOfWriteOp()
            symbol_uses:
            - src/mongo/db/catalog/collection_info_cache.cpp
        -   symbol_name: mongo::PlanCache::shouldCacheQuery(mongo::CanonicalQuery
                const&)
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: mongo::PlanCache::add(mongo::CanonicalQuery const&, std::vector<mongo::QuerySolution*,
                std::allocator<mongo::QuerySolution*> > const&, mongo::PlanRankingDecision*)
            symbol_uses:
            - src/mongo/db/query/multi_plan_runner.cpp
        -   symbol_name: mongo::CachedSolution::~CachedSolution()
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: mongo::PlanCache::remove(mongo::CanonicalQuery const&)
            symbol_uses:
            - src/mongo/db/commands/index_filter_commands.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/db/commands/plan_cache_commands.cpp
        -   symbol_name: mongo::SolutionCacheData::toString() const
            symbol_uses:
            - src/mongo/db/commands/plan_cache_commands.cpp
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: mongo::PlanCache::feedback(mongo::CanonicalQuery const&,
                mongo::PlanCacheEntryFeedback*)
            symbol_uses:
            - src/mongo/db/query/cached_plan_runner.cpp
        -   symbol_name: mongo::PlanCacheIndexTree::setIndexEntry(mongo::IndexEntry
                const&)
            symbol_uses:
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: mongo::PlanCache::~PlanCache()
            symbol_uses:
            - src/mongo/db/catalog/collection_info_cache.cpp
            - src/mongo/db/catalog/collection.cpp
        -   symbol_name: mongo::PlanCache::clear()
            symbol_uses:
            - src/mongo/db/catalog/collection_info_cache.cpp
            - src/mongo/db/commands/plan_cache_commands.cpp
        -   symbol_name: mongo::PlanCache::get(mongo::CanonicalQuery const&, mongo::CachedSolution**)
                const
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: mongo::PlanCache::getEntry(mongo::CanonicalQuery const&,
                mongo::PlanCacheEntry**) const
            symbol_uses:
            - src/mongo/db/commands/plan_cache_commands.cpp
        -   symbol_name: mongo::PlanCache::PlanCache(std::string const&)
            symbol_uses:
            - src/mongo/db/catalog/collection_info_cache.cpp
        -   symbol_name: mongo::PlanCache::getAllEntries() const
            symbol_uses:
            - src/mongo/db/commands/plan_cache_commands.cpp
        -   symbol_name: mongo::PlanCacheEntry::~PlanCacheEntry()
            symbol_uses:
            - src/mongo/db/commands/plan_cache_commands.cpp
        file_dependencies:
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::invariantFailed(char const*, char const*, unsigned
                int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CanonicalQuery::getPlanCacheKey() const
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/query/plan_cache.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/plan_cache_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::PlanCacheEntry::PlanCacheEntry(std::vector<mongo::QuerySolution*,
                std::allocator<mongo::QuerySolution*> > const&, mongo::PlanRankingDecision*)
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::QueryPlanner::planFromCache(mongo::CanonicalQuery
                const&, mongo::QueryPlannerParams const&, mongo::CachedSolution const&,
                mongo::QuerySolution**, mongo::QuerySolution**)
            symbol_sources:
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: mongo::QueryPlannerTestLib::solutionMatches(mongo::BSONObj
                const&, mongo::QuerySolutionNode const*)
            symbol_sources:
            - src/mongo/db/query/query_planner_test_lib.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::PlanCache::notifyOfWriteOp()
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::fromjson(std::string const&)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::PlanCache::shouldCacheQuery(mongo::CanonicalQuery
                const&)
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CanonicalQuery::toString() const
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::PlanCache::clear()
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::PlanCacheEntry::~PlanCacheEntry()
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::PlanCache::add(mongo::CanonicalQuery const&, std::vector<mongo::QuerySolution*,
                std::allocator<mongo::QuerySolution*> > const&, mongo::PlanRankingDecision*)
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::PlanCache::~PlanCache()
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::CachedSolution::~CachedSolution()
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::PlanCache::PlanCache()
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::SolutionCacheData::clone() const
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::Status::operator!=(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::CanonicalQuery::canonicalize(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, long long, long
                long, mongo::BSONObj const&, mongo::BSONObj const&, mongo::BSONObj
                const&, bool, mongo::CanonicalQuery**)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::QueryPlanner::plan(mongo::CanonicalQuery const&, mongo::QueryPlannerParams
                const&, std::vector<mongo::QuerySolution*, std::allocator<mongo::QuerySolution*>
                >*)
            symbol_sources:
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::PlanCache::size() const
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::PlanCache::kPlanCacheMaxWriteOperations
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::CachedSolution::CachedSolution(std::string const&,
                mongo::PlanCacheEntry const&)
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::CanonicalQuery::canonicalize(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, mongo::CanonicalQuery**)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::CanonicalQuery::canonicalize(std::string const&, mongo::BSONObj
                const&, mongo::CanonicalQuery**)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
    -   file_name: src/mongo/db/query/plan_enumerator.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::PlanEnumerator::~PlanEnumerator()
            symbol_uses:
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: mongo::PlanEnumerator::getNext(mongo::MatchExpression**)
            symbol_uses:
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: mongo::PlanEnumerator::init()
            symbol_uses:
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: mongo::PlanEnumerator::PlanEnumerator(mongo::PlanEnumeratorParams
                const&)
            symbol_uses:
            - src/mongo/db/query/query_planner.cpp
        file_dependencies:
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::sortUsingTags(mongo::MatchExpression*)
            symbol_sources:
            - src/mongo/db/query/index_tag.cpp
        -   symbol_name: mongo::tagForSort(mongo::MatchExpression*)
            symbol_sources:
            - src/mongo/db/query/index_tag.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::verboseQueryLogging
            symbol_sources:
            - src/mongo/db/query/qlog.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
    -   file_name: src/mongo/db/query/plan_enumerator.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/plan_executor.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::PlanExecutor::setYieldPolicy(mongo::Runner::YieldPolicy)
            symbol_uses:
            - src/mongo/db/query/cached_plan_runner.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/db/query/internal_runner.cpp
            - src/mongo/db/query/single_solution_runner.cpp
        -   symbol_name: mongo::PlanExecutor::PlanExecutor(mongo::WorkingSet*, mongo::PlanStage*)
            symbol_uses:
            - src/mongo/dbtests/query_stage_tests.cpp
            - src/mongo/dbtests/query_stage_sort.cpp
            - src/mongo/db/query/cached_plan_runner.cpp
            - src/mongo/db/query/single_solution_runner.cpp
            - src/mongo/db/exec/stagedebug_cmd.cpp
            - src/mongo/dbtests/query_stage_merge_sort.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/db/query/internal_runner.cpp
            - src/mongo/dbtests/query_stage_collscan.cpp
        -   symbol_name: mongo::PlanExecutor::saveState()
            symbol_uses:
            - src/mongo/db/query/cached_plan_runner.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/db/query/internal_runner.cpp
            - src/mongo/db/query/single_solution_runner.cpp
        -   symbol_name: mongo::PlanExecutor::restoreState()
            symbol_uses:
            - src/mongo/db/query/cached_plan_runner.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/db/query/internal_runner.cpp
            - src/mongo/db/query/single_solution_runner.cpp
        -   symbol_name: mongo::PlanExecutor::getNext(mongo::BSONObj*, mongo::DiskLoc*)
            symbol_uses:
            - src/mongo/dbtests/query_stage_tests.cpp
            - src/mongo/dbtests/query_stage_sort.cpp
            - src/mongo/db/query/cached_plan_runner.cpp
            - src/mongo/db/query/single_solution_runner.cpp
            - src/mongo/db/exec/stagedebug_cmd.cpp
            - src/mongo/dbtests/query_stage_merge_sort.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/db/query/internal_runner.cpp
            - src/mongo/dbtests/query_stage_collscan.cpp
        -   symbol_name: mongo::PlanExecutor::kill()
            symbol_uses:
            - src/mongo/db/query/cached_plan_runner.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/db/query/internal_runner.cpp
            - src/mongo/db/query/single_solution_runner.cpp
        -   symbol_name: mongo::PlanExecutor::getWorkingSet()
            symbol_uses:
            - src/mongo/db/query/multi_plan_runner.cpp
        -   symbol_name: mongo::PlanExecutor::invalidate(mongo::DiskLoc const&, mongo::InvalidationType)
            symbol_uses:
            - src/mongo/db/query/cached_plan_runner.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/db/query/internal_runner.cpp
            - src/mongo/db/query/single_solution_runner.cpp
        -   symbol_name: mongo::PlanExecutor::isEOF()
            symbol_uses:
            - src/mongo/db/query/cached_plan_runner.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/db/query/internal_runner.cpp
            - src/mongo/db/query/single_solution_runner.cpp
        -   symbol_name: mongo::PlanExecutor::getStats() const
            symbol_uses:
            - src/mongo/db/query/cached_plan_runner.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/db/query/internal_runner.cpp
            - src/mongo/db/query/single_solution_runner.cpp
        -   symbol_name: mongo::PlanExecutor::~PlanExecutor()
            symbol_uses:
            - src/mongo/dbtests/query_stage_tests.cpp
            - src/mongo/dbtests/query_stage_sort.cpp
            - src/mongo/db/query/cached_plan_runner.cpp
            - src/mongo/db/query/single_solution_runner.cpp
            - src/mongo/db/exec/stagedebug_cmd.cpp
            - src/mongo/dbtests/query_stage_merge_sort.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/db/query/internal_runner.cpp
            - src/mongo/dbtests/query_stage_collscan.cpp
        file_dependencies:
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CollectionCursorCache::deregisterRunner(mongo::Runner*)
            symbol_sources:
            - src/mongo/db/catalog/collection_cursor_cache.cpp
        -   symbol_name: mongo::DiskLoc::rec() const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::ElapsedTracker::ElapsedTracker(int, int)
            symbol_sources:
            - src/mongo/util/elapsed_tracker.cpp
        -   symbol_name: mongo::WorkingSet::~WorkingSet()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ElapsedTracker::resetLastTime()
            symbol_sources:
            - src/mongo/util/elapsed_tracker.cpp
        -   symbol_name: mongo::Record::touch(bool) const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::WorkingSetMember::hasLoc() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::ElapsedTracker::intervalHasElapsed()
            symbol_sources:
            - src/mongo/util/elapsed_tracker.cpp
        -   symbol_name: mongo::WorkingSet::free(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::Record::likelyInPhysicalMemory(char const*)
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::invariantFailed(char const*, char const*, unsigned
                int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetMember::hasObj() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::ClientCursor::staticYield(int, mongo::StringData const&,
                mongo::Record const*)
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::ClientCursor::suggestYieldMicros()
            symbol_sources:
            - src/mongo/db/clientcursor.cpp
    -   file_name: src/mongo/db/query/plan_executor.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/plan_ranker.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::PlanRanker::pickBestPlan(std::vector<mongo::CandidatePlan,
                std::allocator<mongo::CandidatePlan> > const&, mongo::PlanRankingDecision*)
            symbol_uses:
            - src/mongo/db/query/multi_plan_runner.cpp
        -   symbol_name: mongo::PlanRanker::scoreTree(mongo::PlanStageStats const*)
            symbol_uses:
            - src/mongo/db/query/cached_plan_runner.cpp
        file_dependencies:
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::verboseQueryLogging
            symbol_sources:
            - src/mongo/db/query/qlog.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::invariantFailed(char const*, char const*, unsigned
                int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
    -   file_name: src/mongo/db/query/plan_ranker.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/planner_access.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::QueryPlannerAccess::makeIndexScan(mongo::IndexEntry
                const&, mongo::CanonicalQuery const&, mongo::QueryPlannerParams const&,
                mongo::BSONObj const&, mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: mongo::QueryPlannerAccess::buildIndexedDataAccess(mongo::CanonicalQuery
                const&, mongo::MatchExpression*, bool, std::vector<mongo::IndexEntry,
                std::allocator<mongo::IndexEntry> > const&)
            symbol_uses:
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: mongo::QueryPlannerAccess::scanWholeIndex(mongo::IndexEntry
                const&, mongo::CanonicalQuery const&, mongo::QueryPlannerParams const&,
                int)
            symbol_uses:
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: mongo::QueryPlannerAccess::makeCollectionScan(mongo::CanonicalQuery
                const&, bool, mongo::QueryPlannerParams const&)
            symbol_uses:
            - src/mongo/db/query/query_planner.cpp
        file_dependencies:
        -   symbol_name: mongo::CollectionScanNode::CollectionScanNode()
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::translate(mongo::MatchExpression
                const*, mongo::BSONElement const&, mongo::IndexEntry const&, mongo::OrderedIntervalList*,
                mongo::IndexBoundsBuilder::BoundsTightness*)
            symbol_sources:
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::IndexBounds::isValidFor(mongo::BSONObj const&, int)
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::AndSortedNode::AndSortedNode()
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: vtable for S2Cell
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: vtable for mongo::AndMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::Interval::reverse()
            symbol_sources:
            - src/mongo/db/query/interval.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::alignBounds(mongo::IndexBounds*,
                mongo::BSONObj const&, int)
            symbol_sources:
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::IndexTag::kNoIndex
            symbol_sources:
            - src/mongo/db/query/index_tag.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::OrNode::OrNode()
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: vtable for mongo::GeoNear2DSphereNode
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::allValuesBounds(mongo::BSONObj
                const&, mongo::IndexBounds*)
            symbol_sources:
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::allValuesForField(mongo::BSONElement
                const&, mongo::OrderedIntervalList*)
            symbol_sources:
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::FetchNode::FetchNode()
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: mongo::ListOfMatchExpression::add(mongo::MatchExpression*)
            symbol_sources:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: vtable for mongo::OrMatchExpression
            symbol_sources:
            - src/mongo/db/matcher/expression_tree.cpp
        -   symbol_name: mongo::AndHashNode::AndHashNode()
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::MergeSortNode::MergeSortNode()
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: vtable for mongo::Geo2DNode
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::IndexScanNode::IndexScanNode()
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: mongo::IndexBounds::toString() const
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: vtable for mongo::TextNode
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: mongo::verboseQueryLogging
            symbol_sources:
            - src/mongo/db/query/qlog.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::translateAndIntersect(mongo::MatchExpression
                const*, mongo::BSONElement const&, mongo::IndexEntry const&, mongo::OrderedIntervalList*,
                mongo::IndexBoundsBuilder::BoundsTightness*)
            symbol_sources:
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::translateAndUnion(mongo::MatchExpression
                const*, mongo::BSONElement const&, mongo::IndexEntry const&, mongo::OrderedIntervalList*,
                mongo::IndexBoundsBuilder::BoundsTightness*)
            symbol_sources:
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::Point::Point()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::MatchExpression::MatchExpression(mongo::MatchExpression::MatchType)
            symbol_sources:
            - src/mongo/db/matcher/expression.cpp
    -   file_name: src/mongo/db/query/planner_access.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/planner_analysis.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::QueryPlannerAnalysis::analyzeDataAccess(mongo::CanonicalQuery
                const&, mongo::QueryPlannerParams const&, mongo::QuerySolutionNode*)
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
            - src/mongo/db/query/query_planner.cpp
        file_dependencies:
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FetchNode::FetchNode()
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: mongo::IndexScanNode::IndexScanNode()
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: vtable for mongo::KeepMutationsNode
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::IndexBounds::isValidFor(mongo::BSONObj const&, int)
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::verboseQueryLogging
            symbol_sources:
            - src/mongo/db/query/qlog.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: vtable for mongo::SortNode
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MergeSortNode::MergeSortNode()
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: vtable for mongo::LimitNode
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: vtable for mongo::SkipNode
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::ProjectionNode
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: mongo::IndexBounds::toString() const
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::Interval::reverse()
            symbol_sources:
            - src/mongo/db/query/interval.cpp
        -   symbol_name: vtable for mongo::ShardingFilterNode
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::QuerySolutionNode::toString() const
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/query/planner_analysis.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/planner_ixselect.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::QueryPlannerIXSelect::findRelevantIndices(std::tr1::unordered_set<std::string,
                std::tr1::hash<std::string>, std::equal_to<std::string>, std::allocator<std::string>,
                false> const&, std::vector<mongo::IndexEntry, std::allocator<mongo::IndexEntry>
                > const&, std::vector<mongo::IndexEntry, std::allocator<mongo::IndexEntry>
                >*)
            symbol_uses:
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: mongo::QueryPlannerIXSelect::getFields(mongo::MatchExpression*,
                std::string, std::tr1::unordered_set<std::string, std::tr1::hash<std::string>,
                std::equal_to<std::string>, std::allocator<std::string>, false>*)
            symbol_uses:
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: mongo::QueryPlannerIXSelect::rateIndices(mongo::MatchExpression*,
                std::string, std::vector<mongo::IndexEntry, std::allocator<mongo::IndexEntry>
                > const&)
            symbol_uses:
            - src/mongo/db/query/query_planner.cpp
        file_dependencies:
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::GeoHashConverter::GeoHashConverter(mongo::GeoHashConverter::Parameters
                const&)
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::GeometryContainer::hasFlatRegion() const
            symbol_sources:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::GeometryContainer::hasS2Region() const
            symbol_sources:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/query/planner_ixselect.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/planner_ixselect_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::QueryPlannerIXSelect::rateIndices(mongo::MatchExpression*,
                std::string, std::vector<mongo::IndexEntry, std::allocator<mongo::IndexEntry>
                > const&)
            symbol_sources:
            - src/mongo/db/query/planner_ixselect.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parse(mongo::BSONObj const&,
                bool)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::QueryPlannerIXSelect::getFields(mongo::MatchExpression*,
                std::string, std::tr1::unordered_set<std::string, std::tr1::hash<std::string>,
                std::equal_to<std::string>, std::allocator<std::string>, false>*)
            symbol_sources:
            - src/mongo/db/query/planner_ixselect.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::StringSplitter::split(std::string const&, std::string
                const&)
            symbol_sources:
            - src/mongo/util/text.cpp
    -   file_name: src/mongo/db/query/qlog.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::verboseQueryLogging
            symbol_uses:
            - src/mongo/db/query/planner_analysis.cpp
            - src/mongo/db/query/planner_access.cpp
            - src/mongo/db/query/plan_enumerator.cpp
            - src/mongo/db/query/new_find.cpp
            - src/mongo/db/query/cached_plan_runner.cpp
            - src/mongo/db/query/plan_ranker.cpp
            - src/mongo/db/query/index_bounds_builder.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/db/query/query_planner.cpp
        file_dependencies:
        -   symbol_name: typeinfo for mongo::ServerParameter
            symbol_sources:
            - src/mongo/db/server_parameters.cpp
        -   symbol_name: mongo::ServerParameter::ServerParameter(mongo::ServerParameterSet*,
                std::string const&, bool, bool)
            symbol_sources:
            - src/mongo/db/server_parameters.cpp
        -   symbol_name: mongo::ServerParameter::~ServerParameter()
            symbol_sources:
            - src/mongo/db/server_parameters.cpp
        -   symbol_name: mongo::ServerParameterSet::getGlobal()
            symbol_sources:
            - src/mongo/db/server_parameters.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ExportedServerParameter<bool>::setFromString(std::string
                const&)
            symbol_sources:
            - src/mongo/db/server_parameters.cpp
    -   file_name: src/mongo/db/query/qlog.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/query_planner.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::QueryPlanner::planFromCache(mongo::CanonicalQuery
                const&, mongo::QueryPlannerParams const&, mongo::CachedSolution const&,
                mongo::QuerySolution**, mongo::QuerySolution**)
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: mongo::QueryPlanner::plan(mongo::CanonicalQuery const&, mongo::QueryPlannerParams
                const&, std::vector<mongo::QuerySolution*, std::allocator<mongo::QuerySolution*>
                >*)
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
            - src/mongo/db/exec/sort.cpp
        file_dependencies:
        -   symbol_name: mongo::PlanEnumerator::~PlanEnumerator()
            symbol_sources:
            - src/mongo/db/query/plan_enumerator.cpp
        -   symbol_name: mongo::verboseQueryLogging
            symbol_sources:
            - src/mongo/db/query/qlog.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::SolutionCacheData::toString() const
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::QueryPlannerAccess::scanWholeIndex(mongo::IndexEntry
                const&, mongo::CanonicalQuery const&, mongo::QueryPlannerParams const&,
                int)
            symbol_sources:
            - src/mongo/db/query/planner_access.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for S2Cell
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: mongo::QueryPlannerAccess::makeCollectionScan(mongo::CanonicalQuery
                const&, bool, mongo::QueryPlannerParams const&)
            symbol_sources:
            - src/mongo/db/query/planner_access.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::PlanEnumerator::getNext(mongo::MatchExpression**)
            symbol_sources:
            - src/mongo/db/query/plan_enumerator.cpp
        -   symbol_name: mongo::PlanCache::shouldCacheQuery(mongo::CanonicalQuery
                const&)
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::QueryPlannerIXSelect::findRelevantIndices(std::tr1::unordered_set<std::string,
                std::tr1::hash<std::string>, std::equal_to<std::string>, std::allocator<std::string>,
                false> const&, std::vector<mongo::IndexEntry, std::allocator<mongo::IndexEntry>
                > const&, std::vector<mongo::IndexEntry, std::allocator<mongo::IndexEntry>
                >*)
            symbol_sources:
            - src/mongo/db/query/planner_ixselect.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LiteParsedQuery::normalizeSortOrder(mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::CanonicalQuery::toString() const
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::QueryPlannerAccess::makeIndexScan(mongo::IndexEntry
                const&, mongo::CanonicalQuery const&, mongo::QueryPlannerParams const&,
                mongo::BSONObj const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/query/planner_access.cpp
        -   symbol_name: vtable for mongo::GeoNear2DNode
            symbol_sources:
            - src/mongo/db/query/query_solution.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::PlanCacheIndexTree::setIndexEntry(mongo::IndexEntry
                const&)
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::CanonicalQuery::sortTree(mongo::MatchExpression*)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::sortUsingTags(mongo::MatchExpression*)
            symbol_sources:
            - src/mongo/db/query/index_tag.cpp
        -   symbol_name: mongo::QueryPlannerIXSelect::getFields(mongo::MatchExpression*,
                std::string, std::tr1::unordered_set<std::string, std::tr1::hash<std::string>,
                std::equal_to<std::string>, std::allocator<std::string>, false>*)
            symbol_sources:
            - src/mongo/db/query/planner_ixselect.cpp
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::QueryPlannerAccess::buildIndexedDataAccess(mongo::CanonicalQuery
                const&, mongo::MatchExpression*, bool, std::vector<mongo::IndexEntry,
                std::allocator<mongo::IndexEntry> > const&)
            symbol_sources:
            - src/mongo/db/query/planner_access.cpp
        -   symbol_name: mongo::QueryPlannerAnalysis::analyzeDataAccess(mongo::CanonicalQuery
                const&, mongo::QueryPlannerParams const&, mongo::QuerySolutionNode*)
            symbol_sources:
            - src/mongo/db/query/planner_analysis.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::QueryPlannerIXSelect::rateIndices(mongo::MatchExpression*,
                std::string, std::vector<mongo::IndexEntry, std::allocator<mongo::IndexEntry>
                > const&)
            symbol_sources:
            - src/mongo/db/query/planner_ixselect.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::Point::Point()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::PlanEnumerator::init()
            symbol_sources:
            - src/mongo/db/query/plan_enumerator.cpp
        -   symbol_name: mongo::PlanEnumerator::PlanEnumerator(mongo::PlanEnumeratorParams
                const&)
            symbol_sources:
            - src/mongo/db/query/plan_enumerator.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/db/query/query_planner.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/query_planner_common.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/query_planner_params.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/query_planner_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::QueryPlanner::plan(mongo::CanonicalQuery const&, mongo::QueryPlannerParams
                const&, std::vector<mongo::QuerySolution*, std::allocator<mongo::QuerySolution*>
                >*)
            symbol_sources:
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::QueryPlannerTestLib::solutionMatches(mongo::BSONObj
                const&, mongo::QuerySolutionNode const*)
            symbol_sources:
            - src/mongo/db/query/query_planner_test_lib.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(std::string const&)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::CanonicalQuery::canonicalize(std::string const&, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::BSONObj const&, long long, long
                long, mongo::BSONObj const&, mongo::BSONObj const&, mongo::BSONObj
                const&, bool, mongo::CanonicalQuery**)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::CanonicalQuery::canonicalize(std::string const&, mongo::BSONObj
                const&, mongo::CanonicalQuery**)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::QueryPlanner::tagAccordingToCache(mongo::MatchExpression*,
                mongo::PlanCacheIndexTree const*, std::map<mongo::BSONObj, unsigned
                long, std::less<mongo::BSONObj>, std::allocator<std::pair<mongo::BSONObj
                const, unsigned long> > > const&)
            symbol_sources:
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::PlanCacheIndexTree::setIndexEntry(mongo::IndexEntry
                const&)
            symbol_sources:
            - src/mongo/db/query/plan_cache.cpp
        -   symbol_name: mongo::Status::operator!=(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::QueryPlanner::cacheDataFromTaggedTree(mongo::MatchExpression
                const*, std::vector<mongo::IndexEntry, std::allocator<mongo::IndexEntry>
                > const&, mongo::PlanCacheIndexTree**)
            symbol_sources:
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/query/query_planner_test_lib.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Interval::compare(mongo::Interval const&) const
            symbol_sources:
            - src/mongo/db/query/interval.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parse(mongo::BSONObj const&,
                bool)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::IndexBounds::getInterval(unsigned long, unsigned long)
                const
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CanonicalQuery::sortTree(mongo::MatchExpression*)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Interval::Interval(mongo::BSONObj, bool, bool)
            symbol_sources:
            - src/mongo/db/query/interval.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/query/query_planner_test_lib.h
        file_executables: []
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/query_settings.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::QuerySettings::clearAllowedIndices()
            symbol_uses:
            - src/mongo/db/commands/index_filter_commands.cpp
        -   symbol_name: mongo::AllowedIndexEntry::~AllowedIndexEntry()
            symbol_uses:
            - src/mongo/db/commands/index_filter_commands.cpp
        -   symbol_name: mongo::AllowedIndices::~AllowedIndices()
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: mongo::QuerySettings::setAllowedIndices(mongo::CanonicalQuery
                const&, std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj>
                > const&)
            symbol_uses:
            - src/mongo/db/commands/index_filter_commands.cpp
        -   symbol_name: mongo::QuerySettings::QuerySettings()
            symbol_uses:
            - src/mongo/db/catalog/collection_info_cache.cpp
        -   symbol_name: mongo::QuerySettings::~QuerySettings()
            symbol_uses:
            - src/mongo/db/catalog/collection.cpp
        -   symbol_name: mongo::QuerySettings::removeAllowedIndices(mongo::CanonicalQuery
                const&)
            symbol_uses:
            - src/mongo/db/commands/index_filter_commands.cpp
        -   symbol_name: mongo::QuerySettings::getAllAllowedIndices() const
            symbol_uses:
            - src/mongo/db/commands/index_filter_commands.cpp
        -   symbol_name: mongo::QuerySettings::getAllowedIndices(mongo::CanonicalQuery
                const&, mongo::AllowedIndices**) const
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
        file_dependencies:
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::invariantFailed(char const*, char const*, unsigned
                int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CanonicalQuery::getPlanCacheKey() const
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/query/query_settings.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/query_solution.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::CollectionScanNode::CollectionScanNode()
            symbol_uses:
            - src/mongo/db/query/planner_access.cpp
        -   symbol_name: vtable for mongo::Geo2DNode
            symbol_uses:
            - src/mongo/db/query/planner_access.cpp
        -   symbol_name: mongo::OrNode::OrNode()
            symbol_uses:
            - src/mongo/db/query/planner_access.cpp
        -   symbol_name: vtable for mongo::SkipNode
            symbol_uses:
            - src/mongo/db/query/planner_analysis.cpp
        -   symbol_name: vtable for mongo::CountNode
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: vtable for mongo::ProjectionNode
            symbol_uses:
            - src/mongo/db/query/planner_analysis.cpp
        -   symbol_name: mongo::AndHashNode::AndHashNode()
            symbol_uses:
            - src/mongo/db/query/planner_access.cpp
        -   symbol_name: mongo::QuerySolutionNode::toString() const
            symbol_uses:
            - src/mongo/db/query/planner_analysis.cpp
        -   symbol_name: vtable for mongo::GeoNear2DNode
            symbol_uses:
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: vtable for mongo::DistinctNode
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: mongo::MergeSortNode::MergeSortNode()
            symbol_uses:
            - src/mongo/db/query/planner_access.cpp
            - src/mongo/db/query/planner_analysis.cpp
        -   symbol_name: mongo::AndSortedNode::AndSortedNode()
            symbol_uses:
            - src/mongo/db/query/planner_access.cpp
        -   symbol_name: vtable for mongo::ShardingFilterNode
            symbol_uses:
            - src/mongo/db/query/planner_analysis.cpp
        -   symbol_name: vtable for mongo::LimitNode
            symbol_uses:
            - src/mongo/db/query/planner_analysis.cpp
        -   symbol_name: vtable for mongo::KeepMutationsNode
            symbol_uses:
            - src/mongo/db/query/planner_analysis.cpp
        -   symbol_name: vtable for mongo::GeoNear2DSphereNode
            symbol_uses:
            - src/mongo/db/query/planner_access.cpp
        -   symbol_name: mongo::FetchNode::FetchNode()
            symbol_uses:
            - src/mongo/db/query/planner_access.cpp
            - src/mongo/db/query/planner_analysis.cpp
        -   symbol_name: mongo::IndexScanNode::IndexScanNode()
            symbol_uses:
            - src/mongo/db/query/planner_access.cpp
            - src/mongo/db/query/planner_analysis.cpp
        -   symbol_name: vtable for mongo::SortNode
            symbol_uses:
            - src/mongo/db/query/planner_analysis.cpp
        -   symbol_name: vtable for mongo::TextNode
            symbol_uses:
            - src/mongo/db/query/planner_access.cpp
        file_dependencies:
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for S2Cell
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::IndexBounds::toString() const
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LiteParsedQuery::normalizeSortOrder(mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/query/query_solution.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/runner.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/runner_yield_policy.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/single_solution_runner.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::SingleSolutionRunner::SingleSolutionRunner(mongo::Collection
                const*, mongo::CanonicalQuery*, mongo::QuerySolution*, mongo::PlanStage*,
                mongo::WorkingSet*)
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
            - src/mongo/dbtests/runner_registry.cpp
            - src/mongo/dbtests/query_single_solution_runner.cpp
            - src/mongo/db/query/new_find.cpp
        file_dependencies:
        -   symbol_name: mongo::PlanExecutor::setYieldPolicy(mongo::Runner::YieldPolicy)
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::PlanExecutor::saveState()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::PlanExecutor::restoreState()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::PlanExecutor::getNext(mongo::BSONObj*, mongo::DiskLoc*)
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::TypeExplain::getNScanned() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::TypeExplain::setNScannedObjectsAllPlans(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::PlanExecutor::getStats() const
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::PlanExecutor::invalidate(mongo::DiskLoc const&, mongo::InvalidationType)
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::PlanExecutor::PlanExecutor(mongo::WorkingSet*, mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::TypeExplain::getNScannedObjects() const
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::PlanExecutor::~PlanExecutor()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::PlanExecutor::isEOF()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::TypeExplain::addToAllPlans(mongo::TypeExplain*)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::getPlanInfo(mongo::QuerySolution const&, mongo::PlanInfo**)
            symbol_sources:
            - src/mongo/db/query/explain_plan.cpp
        -   symbol_name: mongo::PlanExecutor::kill()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::TypeExplain::setNScannedAllPlans(long long)
            symbol_sources:
            - src/mongo/db/query/type_explain.cpp
        -   symbol_name: mongo::explainPlan(mongo::PlanStageStats const&, mongo::TypeExplain**,
                bool)
            symbol_sources:
            - src/mongo/db/query/explain_plan.cpp
    -   file_name: src/mongo/db/query/single_solution_runner.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/stage_builder.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::StageBuilder::build(mongo::QuerySolution const&, mongo::PlanStage**,
                mongo::WorkingSet**)
            symbol_uses:
            - src/mongo/db/query/get_runner.cpp
        file_dependencies:
        -   symbol_name: mongo::KeepMutationsStage::KeepMutationsStage(mongo::MatchExpression
                const*, mongo::WorkingSet*, mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/exec/keep_mutations.cpp
        -   symbol_name: mongo::IndexCatalog::findIndexByType(std::string const&,
                std::vector<mongo::IndexDescriptor*, std::allocator<mongo::IndexDescriptor*>
                >&) const
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::MergeSortStage::addChild(mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/exec/merge_sort.cpp
        -   symbol_name: mongo::OrStage::OrStage(mongo::WorkingSet*, bool, mongo::MatchExpression
                const*)
            symbol_sources:
            - src/mongo/db/exec/or.cpp
        -   symbol_name: mongo::AndSortedStage::AndSortedStage(mongo::WorkingSet*,
                mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/and_sorted.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::fts::FTSLanguage::str() const
            symbol_sources:
            - src/mongo/db/fts/fts_language.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for S2Cell
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::TwoDNear::TwoDNear(mongo::TwoDNearParams const&, mongo::WorkingSet*)
            symbol_sources:
            - src/mongo/db/exec/2dnear.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::SortStage::SortStage(mongo::SortStageParams const&,
                mongo::WorkingSet*, mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/exec/sort.cpp
        -   symbol_name: mongo::AndSortedStage::addChild(mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/exec/and_sorted.cpp
        -   symbol_name: mongo::Count::Count(mongo::CountParams const&, mongo::WorkingSet*)
            symbol_sources:
            - src/mongo/db/exec/count.cpp
        -   symbol_name: mongo::WorkingSet::~WorkingSet()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::FetchStage::FetchStage(mongo::WorkingSet*, mongo::PlanStage*,
                mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/fetch.cpp
        -   symbol_name: mongo::ProjectionStage::ProjectionStage(mongo::BSONObj, mongo::MatchExpression
                const*, mongo::WorkingSet*, mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/exec/projection.cpp
        -   symbol_name: mongo::shardingState
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::WorkingSet::WorkingSet()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ShardingState::getCollectionMetadata(std::string const&)
            symbol_sources:
            - src/mongo/s/d_state.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LimitStage::LimitStage(int, mongo::WorkingSet*, mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/exec/limit.cpp
        -   symbol_name: mongo::IndexCatalog::findIndexByKeyPattern(mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::fts::FTSSpec::getIndexPrefix(mongo::BSONObj const&,
                mongo::BSONObj*) const
            symbol_sources:
            - src/mongo/db/fts/fts_spec.cpp
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::DistinctScan::DistinctScan(mongo::DistinctParams const&,
                mongo::WorkingSet*)
            symbol_sources:
            - src/mongo/db/exec/distinct_scan.cpp
        -   symbol_name: mongo::CollectionScan::CollectionScan(mongo::CollectionScanParams
                const&, mongo::WorkingSet*, mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/collection_scan.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::S2NearStage::S2NearStage(mongo::S2NearParams const&,
                mongo::WorkingSet*)
            symbol_sources:
            - src/mongo/db/exec/s2near.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::IndexCatalog::getIndex(mongo::IndexDescriptor const*)
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::OrStage::addChild(mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/exec/or.cpp
        -   symbol_name: mongo::AndHashStage::AndHashStage(mongo::WorkingSet*, mongo::MatchExpression
                const*)
            symbol_sources:
            - src/mongo/db/exec/and_hash.cpp
        -   symbol_name: mongo::IndexScan::IndexScan(mongo::IndexScanParams const&,
                mongo::WorkingSet*, mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/index_scan.cpp
        -   symbol_name: mongo::fts::FTSQuery::parse(std::string const&, mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/db/fts/fts_query.cpp
        -   symbol_name: mongo::ShardFilterStage::ShardFilterStage(boost::shared_ptr<mongo::CollectionMetadata
                const> const&, mongo::WorkingSet*, mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/exec/shard_filter.cpp
        -   symbol_name: mongo::AndHashStage::addChild(mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/exec/and_hash.cpp
        -   symbol_name: mongo::SkipStage::SkipStage(int, mongo::WorkingSet*, mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/exec/skip.cpp
        -   symbol_name: mongo::Point::Point()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::TwoD::TwoD(mongo::TwoDParams const&, mongo::WorkingSet*)
            symbol_sources:
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::MergeSortStage::MergeSortStage(mongo::MergeSortStageParams
                const&, mongo::WorkingSet*)
            symbol_sources:
            - src/mongo/db/exec/merge_sort.cpp
        -   symbol_name: mongo::TextStage::TextStage(mongo::TextStageParams const&,
                mongo::WorkingSet*, mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/text.cpp
    -   file_name: src/mongo/db/query/stage_builder.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/stage_types.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/type_explain.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::TypeExplain::setIndexOnly(bool)
            symbol_uses:
            - src/mongo/db/query/eof_runner.cpp
            - src/mongo/db/query/explain_plan.cpp
        -   symbol_name: mongo::TypeExplain::scanAndOrder
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
        -   symbol_name: mongo::TypeExplain::getAllPlansAt(unsigned long) const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
        -   symbol_name: mongo::TypeExplain::clauses
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
        -   symbol_name: mongo::TypeExplain::sizeAllPlans() const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
        -   symbol_name: mongo::TypeExplain::isIDHackSet() const
            symbol_uses:
            - src/mongo/db/query/new_find.cpp
        -   symbol_name: mongo::TypeExplain::setNChunkSkips(long long)
            symbol_uses:
            - src/mongo/db/query/eof_runner.cpp
            - src/mongo/db/query/explain_plan.cpp
        -   symbol_name: mongo::TypeExplain::isIndexBoundsSet() const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
        -   symbol_name: mongo::TypeExplain::sizeClauses() const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
        -   symbol_name: mongo::TypeExplain::isMultiKey
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
        -   symbol_name: mongo::TypeExplain::setIndexBounds(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/query/explain_plan.cpp
        -   symbol_name: mongo::TypeExplain::setIDHack(bool)
            symbol_uses:
            - src/mongo/db/query/idhack_runner.cpp
        -   symbol_name: mongo::TypeExplain::setMillis(long long)
            symbol_uses:
            - src/mongo/db/query/new_find.cpp
        -   symbol_name: mongo::TypeExplain::setScanAndOrder(bool)
            symbol_uses:
            - src/mongo/db/query/eof_runner.cpp
            - src/mongo/db/query/explain_plan.cpp
        -   symbol_name: mongo::TypeExplain::getCursor() const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
            - src/mongo/db/commands/distinct.cpp
        -   symbol_name: mongo::TypeExplain::getIDHack() const
            symbol_uses:
            - src/mongo/db/query/new_find.cpp
        -   symbol_name: mongo::TypeExplain::getScanAndOrder() const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
            - src/mongo/db/query/new_find.cpp
        -   symbol_name: mongo::TypeExplain::TypeExplain()
            symbol_uses:
            - src/mongo/db/query/eof_runner.cpp
            - src/mongo/db/query/idhack_runner.cpp
            - src/mongo/db/query/explain_plan.cpp
        -   symbol_name: mongo::TypeExplain::setNScannedObjects(long long)
            symbol_uses:
            - src/mongo/db/query/eof_runner.cpp
            - src/mongo/db/query/idhack_runner.cpp
            - src/mongo/db/query/explain_plan.cpp
        -   symbol_name: mongo::TypeExplain::getNScannedObjects() const
            symbol_uses:
            - src/mongo/db/commands/geonear.cpp
            - src/mongo/db/query/explain_plan.cpp
            - src/mongo/db/query/cached_plan_runner.cpp
            - src/mongo/db/commands/distinct.cpp
            - src/mongo/db/query/single_solution_runner.cpp
            - src/mongo/db/fts/fts_command_mongod.cpp
            - src/mongo/db/query/internal_runner.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
        -   symbol_name: mongo::TypeExplain::setNScanned(long long)
            symbol_uses:
            - src/mongo/db/query/eof_runner.cpp
            - src/mongo/db/query/idhack_runner.cpp
            - src/mongo/db/query/explain_plan.cpp
        -   symbol_name: mongo::TypeExplain::isAllPlansSet() const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
        -   symbol_name: mongo::TypeExplain::getNScanned() const
            symbol_uses:
            - src/mongo/db/commands/geonear.cpp
            - src/mongo/db/query/explain_plan.cpp
            - src/mongo/db/query/new_find.cpp
            - src/mongo/db/query/cached_plan_runner.cpp
            - src/mongo/db/commands/distinct.cpp
            - src/mongo/db/query/single_solution_runner.cpp
            - src/mongo/db/fts/fts_command_mongod.cpp
            - src/mongo/db/query/internal_runner.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
        -   symbol_name: mongo::TypeExplain::isIsMultiKeySet() const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
        -   symbol_name: mongo::TypeExplain::indexBounds
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
        -   symbol_name: mongo::TypeExplain::addToAllPlans(mongo::TypeExplain*)
            symbol_uses:
            - src/mongo/db/query/cached_plan_runner.cpp
            - src/mongo/db/query/eof_runner.cpp
            - src/mongo/db/query/internal_runner.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/db/query/single_solution_runner.cpp
        -   symbol_name: mongo::TypeExplain::setCursor(mongo::StringData const&)
            symbol_uses:
            - src/mongo/db/query/eof_runner.cpp
            - src/mongo/db/query/explain_plan.cpp
        -   symbol_name: mongo::TypeExplain::setIsMultiKey(bool)
            symbol_uses:
            - src/mongo/db/query/eof_runner.cpp
            - src/mongo/db/query/explain_plan.cpp
        -   symbol_name: mongo::TypeExplain::isNScannedSet() const
            symbol_uses:
            - src/mongo/db/query/new_find.cpp
        -   symbol_name: mongo::TypeExplain::isScanAndOrderSet() const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
            - src/mongo/db/query/new_find.cpp
        -   symbol_name: mongo::TypeExplain::isClausesSet() const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
        -   symbol_name: mongo::TypeExplain::getN() const
            symbol_uses:
            - src/mongo/db/commands/distinct.cpp
        -   symbol_name: mongo::TypeExplain::getIsMultiKey() const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
        -   symbol_name: mongo::TypeExplain::setNScannedAllPlans(long long)
            symbol_uses:
            - src/mongo/db/query/cached_plan_runner.cpp
            - src/mongo/db/query/eof_runner.cpp
            - src/mongo/db/query/internal_runner.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/db/query/single_solution_runner.cpp
        -   symbol_name: mongo::TypeExplain::getClausesAt(unsigned long) const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
        -   symbol_name: mongo::TypeExplain::setNScannedObjectsAllPlans(long long)
            symbol_uses:
            - src/mongo/db/query/cached_plan_runner.cpp
            - src/mongo/db/query/eof_runner.cpp
            - src/mongo/db/query/internal_runner.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/db/query/single_solution_runner.cpp
        -   symbol_name: mongo::TypeExplain::isCursorSet() const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
            - src/mongo/db/commands/distinct.cpp
        -   symbol_name: mongo::TypeExplain::getIndexBounds() const
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
        -   symbol_name: mongo::TypeExplain::allPlans
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
        -   symbol_name: mongo::TypeExplain::addToClauses(mongo::TypeExplain*)
            symbol_uses:
            - src/mongo/db/query/explain_plan.cpp
        -   symbol_name: mongo::TypeExplain::setServer(mongo::StringData const&)
            symbol_uses:
            - src/mongo/db/query/new_find.cpp
        -   symbol_name: mongo::TypeExplain::cursor
            symbol_uses:
            - src/mongo/db/pipeline/document_source_cursor.cpp
        -   symbol_name: mongo::TypeExplain::setNYields(long long)
            symbol_uses:
            - src/mongo/db/query/eof_runner.cpp
            - src/mongo/db/query/explain_plan.cpp
        -   symbol_name: mongo::TypeExplain::setN(long long)
            symbol_uses:
            - src/mongo/db/query/eof_runner.cpp
            - src/mongo/db/query/idhack_runner.cpp
            - src/mongo/db/query/explain_plan.cpp
            - src/mongo/db/query/new_find.cpp
        file_dependencies:
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<std::string>
                const&, std::string*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<bool>
                const&, bool*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<long
                long> const&, long long*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::FieldParser::extract(mongo::BSONObj, mongo::BSONField<mongo::BSONObj>
                const&, mongo::BSONObj*, std::string*)
            symbol_sources:
            - src/mongo/db/field_parser.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/query/type_explain.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
-   group_title: 'TODO: Name this group'
    group_description: Key value store utility class with limited size and an LRU
        replacement policy.
    group_files:
    - src/mongo/db/query/lru_key_value.h
    - src/mongo/db/query/lru_key_value_test.cpp
    group_generated_data:
    -   file_name: src/mongo/db/query/lru_key_value.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/query/lru_key_value_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::Status const&)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::Status::operator==(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::invariantFailed(char const*, char const*, unsigned
                int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::operator!=(mongo::Status const&) const
            symbol_sources:
            - src/mongo/base/status.cpp
-   group_title: 'TODO: Name this group'
    group_description: Executor for new query framework## oh. what is the relationship
        between 'runners' and e.g. 'index_scan'## here?
    group_files:
    - src/mongo/db/exec/2d.cpp
    - src/mongo/db/exec/2d.h
    - src/mongo/db/exec/2dcommon.cpp
    - src/mongo/db/exec/2dcommon.h
    - src/mongo/db/exec/2dnear.cpp
    - src/mongo/db/exec/2dnear.h
    - src/mongo/db/exec/and_common-inl.h
    - src/mongo/db/exec/and_hash.cpp
    - src/mongo/db/exec/and_hash.h
    - src/mongo/db/exec/and_sorted.cpp
    - src/mongo/db/exec/and_sorted.h
    - src/mongo/db/exec/collection_scan.cpp
    - src/mongo/db/exec/collection_scan.h
    - src/mongo/db/exec/collection_scan_common.h
    - src/mongo/db/exec/count.cpp
    - src/mongo/db/exec/count.h
    - src/mongo/db/exec/distinct_scan.cpp
    - src/mongo/db/exec/distinct_scan.h
    - src/mongo/db/exec/fetch.cpp
    - src/mongo/db/exec/fetch.h
    - src/mongo/db/exec/filter.h
    - src/mongo/db/exec/index_scan.cpp
    - src/mongo/db/exec/index_scan.h
    - src/mongo/db/exec/keep_mutations.cpp
    - src/mongo/db/exec/keep_mutations.h
    - src/mongo/db/exec/limit.cpp
    - src/mongo/db/exec/limit.h
    - src/mongo/db/exec/merge_sort.cpp
    - src/mongo/db/exec/merge_sort.h
    - src/mongo/db/exec/mock_stage.cpp
    - src/mongo/db/exec/mock_stage.h
    - src/mongo/db/exec/oplogstart.cpp
    - src/mongo/db/exec/oplogstart.h
    - src/mongo/db/exec/or.cpp
    - src/mongo/db/exec/or.h
    - src/mongo/db/exec/plan_stage.h
    - src/mongo/db/exec/plan_stats.h
    - src/mongo/db/exec/projection.cpp
    - src/mongo/db/exec/projection.h
    - src/mongo/db/exec/projection_exec.cpp
    - src/mongo/db/exec/projection_exec.h
    - src/mongo/db/exec/projection_exec_test.cpp
    - src/mongo/db/exec/s2near.cpp
    - src/mongo/db/exec/s2near.h
    - src/mongo/db/exec/shard_filter.cpp
    - src/mongo/db/exec/shard_filter.h
    - src/mongo/db/exec/skip.cpp
    - src/mongo/db/exec/skip.h
    - src/mongo/db/exec/sort.cpp
    - src/mongo/db/exec/sort.h
    - src/mongo/db/exec/sort_test.cpp
    - src/mongo/db/exec/stagedebug_cmd.cpp
    - src/mongo/db/exec/text.cpp
    - src/mongo/db/exec/text.h
    - src/mongo/db/exec/working_set.cpp
    - src/mongo/db/exec/working_set.h
    - src/mongo/db/exec/working_set_common.cpp
    - src/mongo/db/exec/working_set_common.h
    - src/mongo/db/exec/working_set_computed_data.h
    - src/mongo/db/exec/working_set_test.cpp
    - src/mongo/dbtests/query_stage_distinct.cpp
    - src/mongo/dbtests/query_stage_keep.cpp
    group_generated_data:
    -   file_name: src/mongo/db/exec/2d.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::TwoD::TwoD(mongo::TwoDParams const&, mongo::WorkingSet*)
            symbol_uses:
            - src/mongo/db/query/stage_builder.cpp
        file_dependencies:
        -   symbol_name: mongo::Polygon::Polygon()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: vtable for mongo::twod_exec::GeoBrowse
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::invalidate(mongo::DiskLoc const&)
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::explainDetails(mongo::BSONObjBuilder&)
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::moreToDo()
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::Box::inside(mongo::Point, double) const
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::current()
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: typeinfo for mongo::twod_exec::GeoBrowse
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::twod_exec::GeoAccumulator::getPointsFor(mongo::BSONObj
                const&, mongo::BSONObj const&, std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj>
                >&, bool)
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::currLoc()
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::GeoHash::GeoHash()
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::WorkingSet::allocate()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::WorkingSet::flagForReview(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::twod_exec::GeoAccumulator::add(mongo::twod_exec::GeoIndexEntry
                const&)
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::checkLocation()
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::advance()
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::Polygon::contains(mongo::Point const&) const
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::WorkingSet::~WorkingSet()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::Box::onBoundary(mongo::Point, double)
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::WorkingSetCommon::fetchAndInvalidateLoc(mongo::WorkingSetMember*)
            symbol_sources:
            - src/mongo/db/exec/working_set_common.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::addSpecific(mongo::twod_exec::GeoIndexEntry
                const&, mongo::Point const&, bool, double, bool)
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::noteLocation()
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::Box::maxDim() const
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::Box::intersects(mongo::Box const&) const
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Box::center() const
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::GeoBrowse(mongo::TwoDAccessMethod*,
                std::string, mongo::MatchExpression*)
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::DiskLoc::obj() const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::twod_exec::GeoAccumulator::~GeoAccumulator()
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::fillStack(int, int, bool)
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::nscanned()
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::IndexCatalog::findIndexByKeyPattern(mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::Polygon::bounds()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::GeoHashConverter::hash(double, double) const
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::distanceWithin(mongo::Point const&, mongo::Point const&,
                double)
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::GeoHashConverter::hash(mongo::Point const&) const
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::distance(mongo::Point const&, mongo::Point const&)
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::checkEarthBounds(mongo::Point const&)
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::Polygon::contains(mongo::Point const&, double) const
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::IndexCatalog::getIndex(mongo::IndexDescriptor const*)
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::spheredist_deg(mongo::Point const&, mongo::Point const&)
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::Box::fudge(double)
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::Point::Point(double, double)
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::currKey() const
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::Box::truncate(double, double)
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::GeoHash::GeoHash(mongo::GeoHash const&)
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::GeoHash::operator=(mongo::GeoHash const&)
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::ok()
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::Point::Point()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::_current()
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::Box::Box()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
    -   file_name: src/mongo/db/exec/2d.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/2dcommon.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: vtable for mongo::twod_exec::GeoBrowse
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::invalidate(mongo::DiskLoc const&)
            symbol_uses:
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::checkLocation()
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::addSpecific(mongo::twod_exec::GeoIndexEntry
                const&, mongo::Point const&, bool, double, bool)
            symbol_uses:
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::GeoBrowse(mongo::TwoDAccessMethod*,
                std::string, mongo::MatchExpression*)
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::fillStack(int, int, bool)
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::currLoc()
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::_current()
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::current()
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::ok()
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::twod_exec::GeoAccumulator::add(mongo::twod_exec::GeoIndexEntry
                const&)
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::advance()
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::noteLocation()
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: typeinfo for mongo::twod_exec::GeoBrowse
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::nscanned()
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::twod_exec::GeoAccumulator::getPointsFor(mongo::BSONObj
                const&, mongo::BSONObj const&, std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj>
                >&, bool)
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::currKey() const
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::explainDetails(mongo::BSONObjBuilder&)
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::twod_exec::GeoAccumulator::~GeoAccumulator()
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::moreToDo()
            symbol_uses:
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/2d.cpp
        file_dependencies:
        -   symbol_name: mongo::Point::Point(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::reverseInterval(mongo::Interval*)
            symbol_sources:
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::Box::Box(mongo::Point, mongo::Point)
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::ElementIterator::Context::reset(mongo::BSONElement,
                mongo::BSONElement, bool)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::ElementIterator::~ElementIterator()
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::IndexBounds::isValidFor(mongo::BSONObj const&, int)
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::GeoHash::GeoHash()
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::GeoHash::up() const
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::GeoHash::appendToBuilder(mongo::BSONObjBuilder*, char
                const*) const
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::GeoHash::atMaxY() const
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::GeoHash::atMinX() const
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Interval::Interval(mongo::BSONObj, bool, bool)
            symbol_sources:
            - src/mongo/db/query/interval.cpp
        -   symbol_name: mongo::WorkingSet::~WorkingSet()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::GeoHash::GeoHash(mongo::BSONElement const&, unsigned
                int)
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::GeoHash::operator+(std::string const&) const
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::TwoDAccessMethod::getKeys(mongo::BSONObj const&, std::vector<mongo::BSONObj,
                std::allocator<mongo::BSONObj> >&) const
            symbol_sources:
            - src/mongo/db/index/2d_access_method.cpp
        -   symbol_name: mongo::WorkingSet::WorkingSet()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::GeoHashConverter::sizeEdge(mongo::GeoHash const&)
                const
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::GeoHash::constrains() const
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::GeoHashConverter::unhashToPoint(mongo::GeoHash const&)
                const
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::BSONElementIterator::BSONElementIterator(mongo::ElementPath
                const*, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::GeoHash::GeoHash(unsigned int, unsigned int, unsigned
                int)
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::GeoHash::move(int, int)
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::allValues()
            symbol_sources:
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: typeinfo for mongo::ElementIterator
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::GeoHash::canRefine() const
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::GeoHashConverter::unhashToPoint(mongo::BSONElement
                const&) const
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::GeoHash::operator!=(mongo::GeoHash const&) const
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::GeoHash::atMinY() const
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::FieldRef::equalsDottedField(mongo::StringData const&)
                const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::Point::Point(double, double)
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::IndexScan::IndexScan(mongo::IndexScanParams const&,
                mongo::WorkingSet*, mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/index_scan.cpp
        -   symbol_name: mongo::DiskLoc::rec() const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::GeoHash::GeoHash(mongo::GeoHash const&)
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::GeoHash::hasPrefix(mongo::GeoHash const&) const
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::GeoHash::operator=(mongo::GeoHash const&)
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::WorkingSet::free(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::GeoHashConverter::hash(mongo::BSONObj const&) const
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::DiskLoc::obj() const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::GeoHash::atMaxX() const
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::Box::Box()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::SimpleArrayElementIterator::SimpleArrayElementIterator(mongo::BSONElement
                const&, bool)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
    -   file_name: src/mongo/db/exec/2dcommon.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/2dnear.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::TwoDNear::TwoDNear(mongo::TwoDNearParams const&, mongo::WorkingSet*)
            symbol_uses:
            - src/mongo/db/query/stage_builder.cpp
        file_dependencies:
        -   symbol_name: vtable for mongo::twod_exec::GeoBrowse
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::Point::Point(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::explainDetails(mongo::BSONObjBuilder&)
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::moreToDo()
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::current()
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::twod_exec::GeoBrowse
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::twod_exec::GeoAccumulator::getPointsFor(mongo::BSONObj
                const&, mongo::BSONObj const&, std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj>
                >&, bool)
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::currLoc()
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::ok()
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: vtable for S2Cell
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: mongo::WorkingSet::allocate()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::twod_exec::GeoAccumulator::add(mongo::twod_exec::GeoIndexEntry
                const&)
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::checkLocation()
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::advance()
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::WorkingSet::~WorkingSet()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::Box::Box(double, double, double)
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::WorkingSetCommon::fetchAndInvalidateLoc(mongo::WorkingSetMember*)
            symbol_sources:
            - src/mongo/db/exec/working_set_common.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::noteLocation()
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::Box::intersects(mongo::Box const&) const
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::GeoHashConverter::sizeEdge(mongo::GeoHash const&)
                const
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetMember::addComputed(mongo::WorkingSetComputedData*)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::GeoHash::constrains() const
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::GeoBrowse(mongo::TwoDAccessMethod*,
                std::string, mongo::MatchExpression*)
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::twod_exec::GeoAccumulator::~GeoAccumulator()
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::fillStack(int, int, bool)
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::nscanned()
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::IndexCatalog::findIndexByKeyPattern(mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::_current()
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::GeoHashConverter::hash(double, double) const
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: mongo::distanceWithin(mongo::Point const&, mongo::Point const&,
                double)
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::distance(mongo::Point const&, mongo::Point const&)
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::checkEarthBounds(mongo::Point const&)
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::IndexCatalog::getIndex(mongo::IndexDescriptor const*)
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::spheredist_deg(mongo::Point const&, mongo::Point const&)
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::twod_exec::GeoBrowse::currKey() const
            symbol_sources:
            - src/mongo/db/exec/2dcommon.cpp
        -   symbol_name: mongo::GeoHash::GeoHash(mongo::GeoHash const&)
            symbol_sources:
            - src/mongo/db/geo/hash.cpp
        -   symbol_name: mongo::WorkingSetMember::hasLoc() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::Point::Point()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::DiskLoc::obj() const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::Box::Box()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
    -   file_name: src/mongo/db/exec/2dnear.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/and_common-inl.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/and_hash.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::AndHashStage::AndHashStage(mongo::WorkingSet*, mongo::MatchExpression
                const*)
            symbol_uses:
            - src/mongo/db/query/stage_builder.cpp
            - src/mongo/dbtests/query_stage_and.cpp
            - src/mongo/db/exec/stagedebug_cmd.cpp
        -   symbol_name: mongo::AndHashStage::addChild(mongo::PlanStage*)
            symbol_uses:
            - src/mongo/db/query/stage_builder.cpp
            - src/mongo/dbtests/query_stage_and.cpp
            - src/mongo/db/exec/stagedebug_cmd.cpp
        file_dependencies:
        -   symbol_name: mongo::ElementIterator::Context::reset(mongo::BSONElement,
                mongo::BSONElement, bool)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::BSONElementIterator::BSONElementIterator(mongo::ElementPath
                const*, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::ElementIterator::~ElementIterator()
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetCommon::fetchAndInvalidateLoc(mongo::WorkingSetMember*)
            symbol_sources:
            - src/mongo/db/exec/working_set_common.cpp
        -   symbol_name: mongo::WorkingSetMember::hasLoc() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::WorkingSet::free(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: typeinfo for mongo::ElementIterator
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetMember::hasComputed(mongo::WorkingSetComputedDataType)
                const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetMember::hasObj() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSet::flagForReview(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::WorkingSetMember::addComputed(mongo::WorkingSetComputedData*)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetMember::getComputed(mongo::WorkingSetComputedDataType)
                const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::SimpleArrayElementIterator::SimpleArrayElementIterator(mongo::BSONElement
                const&, bool)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::FieldRef::equalsDottedField(mongo::StringData const&)
                const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
    -   file_name: src/mongo/db/exec/and_hash.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/and_sorted.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::AndSortedStage::AndSortedStage(mongo::WorkingSet*,
                mongo::MatchExpression const*)
            symbol_uses:
            - src/mongo/db/query/stage_builder.cpp
            - src/mongo/dbtests/query_stage_and.cpp
            - src/mongo/db/exec/stagedebug_cmd.cpp
        -   symbol_name: mongo::AndSortedStage::addChild(mongo::PlanStage*)
            symbol_uses:
            - src/mongo/db/query/stage_builder.cpp
            - src/mongo/dbtests/query_stage_and.cpp
            - src/mongo/db/exec/stagedebug_cmd.cpp
        file_dependencies:
        -   symbol_name: mongo::ElementIterator::Context::reset(mongo::BSONElement,
                mongo::BSONElement, bool)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::BSONElementIterator::BSONElementIterator(mongo::ElementPath
                const*, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::ElementIterator::~ElementIterator()
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetCommon::fetchAndInvalidateLoc(mongo::WorkingSetMember*)
            symbol_sources:
            - src/mongo/db/exec/working_set_common.cpp
        -   symbol_name: mongo::WorkingSetMember::hasLoc() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::WorkingSet::free(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: typeinfo for mongo::ElementIterator
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetMember::hasComputed(mongo::WorkingSetComputedDataType)
                const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetMember::hasObj() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSet::flagForReview(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::WorkingSetMember::addComputed(mongo::WorkingSetComputedData*)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetMember::getComputed(mongo::WorkingSetComputedDataType)
                const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::SimpleArrayElementIterator::SimpleArrayElementIterator(mongo::BSONElement
                const&, bool)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::FieldRef::equalsDottedField(mongo::StringData const&)
                const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
    -   file_name: src/mongo/db/exec/and_sorted.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/collection_scan.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::CollectionScan::CollectionScan(mongo::CollectionScanParams
                const&, mongo::WorkingSet*, mongo::MatchExpression const*)
            symbol_uses:
            - src/mongo/db/repl/replication_server_status.cpp
            - src/mongo/db/commands/dbhash.cpp
            - src/mongo/db/exec/oplogstart.cpp
            - src/mongo/dbtests/namespacetests.cpp
            - src/mongo/dbtests/runner_registry.cpp
            - src/mongo/db/query/new_find.cpp
            - src/mongo/db/catalog/index_create.cpp
            - src/mongo/dbtests/query_stage_keep.cpp
            - src/mongo/db/catalog/index_catalog.cpp
            - src/mongo/db/exec/stagedebug_cmd.cpp
            - src/mongo/db/commands/validate.cpp
            - src/mongo/dbtests/query_stage_collscan.cpp
            - src/mongo/db/commands/test_commands.cpp
            - src/mongo/dbtests/query_multi_plan_runner.cpp
            - src/mongo/db/repl/rs_rollback.cpp
            - src/mongo/db/dbcommands.cpp
            - src/mongo/db/catalog/database.cpp
            - src/mongo/db/commands/collection_to_capped.cpp
            - src/mongo/db/repl/master_slave.cpp
            - src/mongo/db/db.cpp
            - src/mongo/db/query/stage_builder.cpp
            - src/mongo/db/dbhelpers.cpp
            - src/mongo/dbtests/query_single_solution_runner.cpp
        file_dependencies:
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ElementIterator::Context::reset(mongo::BSONElement,
                mongo::BSONElement, bool)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::ElementIterator::~ElementIterator()
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::BSONElementIterator::BSONElementIterator(mongo::ElementPath
                const*, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::Collection::getIterator(mongo::DiskLoc const&, bool,
                mongo::CollectionScanParams::Direction const&) const
            symbol_sources:
            - src/mongo/db/catalog/collection.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::WorkingSet::free(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: typeinfo for mongo::ElementIterator
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSet::allocate()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::WorkingSetMember::hasObj() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::SimpleArrayElementIterator::SimpleArrayElementIterator(mongo::BSONElement
                const&, bool)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::DiskLoc::obj() const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::FieldRef::equalsDottedField(mongo::StringData const&)
                const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
    -   file_name: src/mongo/db/exec/collection_scan.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/collection_scan_common.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/count.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::Count::Count(mongo::CountParams const&, mongo::WorkingSet*)
            symbol_uses:
            - src/mongo/db/query/stage_builder.cpp
        file_dependencies:
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BtreeIndexCursor::pointsAt(mongo::BtreeIndexCursor
                const&)
            symbol_sources:
            - src/mongo/db/index/btree_index_cursor.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::IndexCatalog::isMultikey(mongo::IndexDescriptor const*)
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::BtreeIndexCursor::seek(mongo::BSONObj const&, bool)
            symbol_sources:
            - src/mongo/db/index/btree_index_cursor.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::IndexCatalog::getIndex(mongo::IndexDescriptor const*)
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
    -   file_name: src/mongo/db/exec/count.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/distinct_scan.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::DistinctScan::DistinctScan(mongo::DistinctParams const&,
                mongo::WorkingSet*)
            symbol_uses:
            - src/mongo/dbtests/query_stage_distinct.cpp
            - src/mongo/db/query/stage_builder.cpp
        file_dependencies:
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::IndexBoundsChecker::IndexBoundsChecker(mongo::IndexBounds
                const*, mongo::BSONObj const&, int)
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::BtreeIndexCursor::seek(std::vector<mongo::BSONElement
                const*, std::allocator<mongo::BSONElement const*> > const&, std::vector<bool,
                std::allocator<bool> > const&)
            symbol_sources:
            - src/mongo/db/index/btree_index_cursor.cpp
        -   symbol_name: mongo::IndexBoundsChecker::getStartKey(std::vector<mongo::BSONElement
                const*, std::allocator<mongo::BSONElement const*> >*, std::vector<bool,
                std::allocator<bool> >*)
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::IndexBoundsChecker::checkKey(mongo::BSONObj const&,
                int*, bool*, std::vector<mongo::BSONElement const*, std::allocator<mongo::BSONElement
                const*> >*, std::vector<bool, std::allocator<bool> >*)
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSet::allocate()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::BtreeIndexCursor::skip(mongo::BSONObj const&, int,
                bool, std::vector<mongo::BSONElement const*, std::allocator<mongo::BSONElement
                const*> > const&, std::vector<bool, std::allocator<bool> > const&)
            symbol_sources:
            - src/mongo/db/index/btree_index_cursor.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::IndexCatalog::getIndex(mongo::IndexDescriptor const*)
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
    -   file_name: src/mongo/db/exec/distinct_scan.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/fetch.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::FetchStage::FetchStage(mongo::WorkingSet*, mongo::PlanStage*,
                mongo::MatchExpression const*)
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/mongo/db/commands/dbhash.cpp
            - src/mongo/dbtests/query_stage_merge_sort.cpp
            - src/mongo/dbtests/query_stage_sort.cpp
            - src/mongo/dbtests/query_multi_plan_runner.cpp
            - src/mongo/dbtests/query_stage_fetch.cpp
            - src/mongo/db/dbcommands.cpp
            - src/mongo/db/exec/stagedebug_cmd.cpp
            - src/mongo/db/dbhelpers.cpp
            - src/mongo/db/query/stage_builder.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/db/index/haystack_access_method.cpp
            - src/mongo/dbtests/query_single_solution_runner.cpp
            - src/mongo/s/d_migrate.cpp
        file_dependencies:
        -   symbol_name: mongo::getGlobalFailPointRegistry()
            symbol_sources:
            - src/mongo/util/fail_point_service.cpp
        -   symbol_name: mongo::ElementIterator::Context::reset(mongo::BSONElement,
                mongo::BSONElement, bool)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::BSONElementIterator::BSONElementIterator(mongo::ElementPath
                const*, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::ElementIterator::~ElementIterator()
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetCommon::fetchAndInvalidateLoc(mongo::WorkingSetMember*)
            symbol_sources:
            - src/mongo/db/exec/working_set_common.cpp
        -   symbol_name: mongo::DiskLoc::rec() const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::StaticObserver::_destroyingStatics
            symbol_sources:
            - src/mongo/util/util.cpp
        -   symbol_name: mongo::WorkingSetMember::hasLoc() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::WorkingSet::free(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: typeinfo for mongo::ElementIterator
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::FailPoint::slowShouldFailOpenBlock()
            symbol_sources:
            - src/mongo/util/fail_point.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FailPoint::FailPoint()
            symbol_sources:
            - src/mongo/util/fail_point.cpp
        -   symbol_name: mongo::Record::likelyInPhysicalMemory(char const*)
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::FailPoint::shouldFailCloseBlock()
            symbol_sources:
            - src/mongo/util/fail_point.cpp
        -   symbol_name: mongo::WorkingSetMember::hasObj() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::_makeStringVector(int, ...)
            symbol_sources:
            - src/mongo/base/make_string_vector.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::SimpleArrayElementIterator::SimpleArrayElementIterator(mongo::BSONElement
                const&, bool)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::GlobalInitializerRegisterer::GlobalInitializerRegisterer(std::string
                const&, boost::function<mongo::Status (mongo::InitializerContext*)>
                const&, std::vector<std::string, std::allocator<std::string> > const&,
                std::vector<std::string, std::allocator<std::string> > const&)
            symbol_sources:
            - src/mongo/base/global_initializer_registerer.cpp
        -   symbol_name: mongo::FailPointRegistry::addFailPoint(std::string const&,
                mongo::FailPoint*)
            symbol_sources:
            - src/mongo/util/fail_point_registry.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::FieldRef::equalsDottedField(mongo::StringData const&)
                const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
    -   file_name: src/mongo/db/exec/fetch.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/filter.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/index_scan.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::IndexScan::IndexScan(mongo::IndexScanParams const&,
                mongo::WorkingSet*, mongo::MatchExpression const*)
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/mongo/db/commands/dbhash.cpp
            - src/mongo/dbtests/query_stage_merge_sort.cpp
            - src/mongo/dbtests/query_multi_plan_runner.cpp
            - src/mongo/dbtests/query_stage_and.cpp
            - src/mongo/dbtests/query_stage_tests.cpp
            - src/mongo/db/exec/text.cpp
            - src/mongo/db/query/stage_builder.cpp
            - src/mongo/db/exec/2dcommon.cpp
            - src/mongo/db/exec/stagedebug_cmd.cpp
            - src/mongo/db/dbhelpers.cpp
            - src/mongo/db/dbcommands.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/db/index/haystack_access_method.cpp
            - src/mongo/dbtests/query_single_solution_runner.cpp
            - src/mongo/s/d_migrate.cpp
        file_dependencies:
        -   symbol_name: mongo::BtreeIndexCursor::seek(std::vector<mongo::BSONElement
                const*, std::allocator<mongo::BSONElement const*> > const&, std::vector<bool,
                std::allocator<bool> > const&)
            symbol_sources:
            - src/mongo/db/index/btree_index_cursor.cpp
        -   symbol_name: mongo::ElementIterator::Context::reset(mongo::BSONElement,
                mongo::BSONElement, bool)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::ElementIterator::~ElementIterator()
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::IndexBounds::toBSON() const
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::WorkingSet::allocate()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::Status::toString() const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::IndexBoundsChecker::IndexBoundsChecker(mongo::IndexBounds
                const*, mongo::BSONObj const&, int)
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::IndexCatalog::getIndex(mongo::IndexDescriptor const*)
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::BSONElementIterator::BSONElementIterator(mongo::ElementPath
                const*, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: typeinfo for mongo::ElementIterator
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::WorkingSetMember::addComputed(mongo::WorkingSetComputedData*)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::WorkingSetMember::hasObj() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::FieldRef::equalsDottedField(mongo::StringData const&)
                const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::IndexBoundsChecker::getStartKey(std::vector<mongo::BSONElement
                const*, std::allocator<mongo::BSONElement const*> >*, std::vector<bool,
                std::allocator<bool> >*)
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::IndexBoundsChecker::checkKey(mongo::BSONObj const&,
                int*, bool*, std::vector<mongo::BSONElement const*, std::allocator<mongo::BSONElement
                const*> >*, std::vector<bool, std::allocator<bool> >*)
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::WorkingSet::free(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::IndexCatalog::isMultikey(mongo::IndexDescriptor const*)
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::BtreeIndexCursor::skip(mongo::BSONObj const&, int,
                bool, std::vector<mongo::BSONElement const*, std::allocator<mongo::BSONElement
                const*> > const&, std::vector<bool, std::allocator<bool> > const&)
            symbol_sources:
            - src/mongo/db/index/btree_index_cursor.cpp
        -   symbol_name: mongo::SimpleArrayElementIterator::SimpleArrayElementIterator(mongo::BSONElement
                const&, bool)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
    -   file_name: src/mongo/db/exec/index_scan.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/keep_mutations.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::KeepMutationsStage::KeepMutationsStage(mongo::MatchExpression
                const*, mongo::WorkingSet*, mongo::PlanStage*)
            symbol_uses:
            - src/mongo/dbtests/query_stage_keep.cpp
            - src/mongo/db/query/stage_builder.cpp
        file_dependencies:
        -   symbol_name: mongo::ElementIterator::Context::reset(mongo::BSONElement,
                mongo::BSONElement, bool)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::BSONElementIterator::BSONElementIterator(mongo::ElementPath
                const*, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::ElementIterator::~ElementIterator()
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::WorkingSetMember::hasObj() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::WorkingSet::getFlagged() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::WorkingSet::free(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: typeinfo for mongo::ElementIterator
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::SimpleArrayElementIterator::SimpleArrayElementIterator(mongo::BSONElement
                const&, bool)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::invariantFailed(char const*, char const*, unsigned
                int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::FieldRef::equalsDottedField(mongo::StringData const&)
                const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
    -   file_name: src/mongo/db/exec/keep_mutations.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/limit.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::LimitStage::LimitStage(int, mongo::WorkingSet*, mongo::PlanStage*)
            symbol_uses:
            - src/mongo/dbtests/query_stage_limit_skip.cpp
            - src/mongo/db/query/stage_builder.cpp
            - src/mongo/db/exec/stagedebug_cmd.cpp
        file_dependencies: []
    -   file_name: src/mongo/db/exec/limit.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/merge_sort.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::MergeSortStage::addChild(mongo::PlanStage*)
            symbol_uses:
            - src/mongo/dbtests/query_stage_merge_sort.cpp
            - src/mongo/db/query/stage_builder.cpp
            - src/mongo/db/exec/stagedebug_cmd.cpp
        -   symbol_name: mongo::MergeSortStage::MergeSortStage(mongo::MergeSortStageParams
                const&, mongo::WorkingSet*)
            symbol_uses:
            - src/mongo/dbtests/query_stage_merge_sort.cpp
            - src/mongo/db/query/stage_builder.cpp
            - src/mongo/db/exec/stagedebug_cmd.cpp
        file_dependencies:
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetCommon::fetchAndInvalidateLoc(mongo::WorkingSetMember*)
            symbol_sources:
            - src/mongo/db/exec/working_set_common.cpp
        -   symbol_name: mongo::WorkingSetMember::hasLoc() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::WorkingSet::isFlagged(unsigned long) const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSet::flagForReview(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::WorkingSetMember::getFieldDotted(std::string const&,
                mongo::BSONElement*) const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSet::free(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/exec/merge_sort.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/mock_stage.cpp
        file_executables:
        - test
        file_interface:
        -   symbol_name: mongo::MockStage::pushBack(mongo::WorkingSetMember const&)
            symbol_uses:
            - src/mongo/dbtests/query_stage_limit_skip.cpp
            - src/mongo/dbtests/query_stage_sort.cpp
            - src/mongo/dbtests/query_stage_fetch.cpp
        -   symbol_name: mongo::MockStage::MockStage(mongo::WorkingSet*)
            symbol_uses:
            - src/mongo/dbtests/query_stage_limit_skip.cpp
            - src/mongo/dbtests/query_stage_sort.cpp
            - src/mongo/dbtests/query_stage_fetch.cpp
        -   symbol_name: mongo::MockStage::pushBack(mongo::PlanStage::StageState)
            symbol_uses:
            - src/mongo/dbtests/query_stage_limit_skip.cpp
        file_dependencies:
        -   symbol_name: mongo::WorkingSetCommon::initFrom(mongo::WorkingSetMember*,
                mongo::WorkingSetMember const&)
            symbol_sources:
            - src/mongo/db/exec/working_set_common.cpp
        -   symbol_name: mongo::WorkingSet::allocate()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
    -   file_name: src/mongo/db/exec/mock_stage.h
        file_executables:
        - test
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/oplogstart.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::OplogStart::_backwardsScanTime
            symbol_uses:
            - src/mongo/dbtests/oplogstarttests.cpp
        -   symbol_name: mongo::OplogStart::OplogStart(std::string const&, mongo::MatchExpression*,
                mongo::WorkingSet*)
            symbol_uses:
            - src/mongo/dbtests/oplogstarttests.cpp
            - src/mongo/db/query/new_find.cpp
        file_dependencies:
        -   symbol_name: mongo::curTimeMicros64()
            symbol_sources:
            - src/mongo/util/time_support.cpp
        -   symbol_name: mongo::NamespaceIndex::details(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/structure/catalog/namespace_index.cpp
        -   symbol_name: mongo::DiskLoc::rec() const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::Record::_accessing() const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::WorkingSetMember::hasLoc() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::WorkingSet::free(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::WorkingSet::allocate()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::WorkingSetMember::hasObj() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CollectionScan::CollectionScan(mongo::CollectionScanParams
                const&, mongo::WorkingSet*, mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/collection_scan.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::DiskLoc::ext() const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::Timer::_countsPerSecond
            symbol_sources:
            - src/mongo/util/timer.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::DiskLoc::obj() const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
    -   file_name: src/mongo/db/exec/oplogstart.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/or.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::OrStage::OrStage(mongo::WorkingSet*, bool, mongo::MatchExpression
                const*)
            symbol_uses:
            - src/mongo/db/query/stage_builder.cpp
            - src/mongo/db/exec/stagedebug_cmd.cpp
        -   symbol_name: mongo::OrStage::addChild(mongo::PlanStage*)
            symbol_uses:
            - src/mongo/db/query/stage_builder.cpp
            - src/mongo/db/exec/stagedebug_cmd.cpp
        file_dependencies:
        -   symbol_name: mongo::ElementIterator::Context::reset(mongo::BSONElement,
                mongo::BSONElement, bool)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::BSONElementIterator::BSONElementIterator(mongo::ElementPath
                const*, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::ElementIterator::~ElementIterator()
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::WorkingSetMember::hasObj() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::WorkingSetMember::hasLoc() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::WorkingSet::free(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: typeinfo for mongo::ElementIterator
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::SimpleArrayElementIterator::SimpleArrayElementIterator(mongo::BSONElement
                const&, bool)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::FieldRef::equalsDottedField(mongo::StringData const&)
                const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
    -   file_name: src/mongo/db/exec/or.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/plan_stage.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/plan_stats.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/projection.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ProjectionStage::ProjectionStage(mongo::BSONObj, mongo::MatchExpression
                const*, mongo::WorkingSet*, mongo::PlanStage*)
            symbol_uses:
            - src/mongo/db/query/stage_builder.cpp
        file_dependencies:
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::ProjectionExec::ProjectionExec(mongo::BSONObj const&,
                mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/projection_exec.cpp
        -   symbol_name: mongo::ProjectionExec::transform(mongo::WorkingSetMember*)
                const
            symbol_sources:
            - src/mongo/db/exec/projection_exec.cpp
        -   symbol_name: mongo::ProjectionExec::~ProjectionExec()
            symbol_sources:
            - src/mongo/db/exec/projection_exec.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::Status::toString() const
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/db/exec/projection.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/projection_exec.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ProjectionExec::~ProjectionExec()
            symbol_uses:
            - src/mongo/db/query/idhack_runner.cpp
            - src/mongo/db/exec/projection.cpp
        -   symbol_name: mongo::ProjectionExec::transform(mongo::WorkingSetMember*)
                const
            symbol_uses:
            - src/mongo/db/exec/projection.cpp
        -   symbol_name: mongo::ProjectionExec::transform(mongo::BSONObj const&, mongo::BSONObj*)
                const
            symbol_uses:
            - src/mongo/db/query/idhack_runner.cpp
        -   symbol_name: mongo::ProjectionExec::ProjectionExec(mongo::BSONObj const&,
                mongo::MatchExpression const*)
            symbol_uses:
            - src/mongo/db/query/idhack_runner.cpp
            - src/mongo/db/exec/projection.cpp
        file_dependencies:
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::LiteParsedQuery::metaGeoNearDistance
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::WorkingSetMember::hasObj() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MatchDetails::elemMatchKey() const
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parse(mongo::BSONObj const&,
                bool)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetMember::hasComputed(mongo::WorkingSetComputedDataType)
                const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::LiteParsedQuery::metaTextScore
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::BSONObj::couldBeArray() const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::LiteParsedQuery::metaGeoNearPoint
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::StringData::Hasher::operator()(mongo::StringData const&)
                const
            symbol_sources:
            - src/mongo/base/string_data.cpp
        -   symbol_name: mongo::MatchDetails::MatchDetails()
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: mongo::LiteParsedQuery::metaIndexKey
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::WorkingSetMember::getFieldDotted(std::string const&,
                mongo::BSONElement*) const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::LiteParsedQuery::metaDiskLoc
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::MatchDetails::hasElemMatchKey() const
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetMember::getComputed(mongo::WorkingSetComputedDataType)
                const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
    -   file_name: src/mongo/db/exec/projection_exec.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/projection_exec_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::WorkingSetMember::WorkingSetMember()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::ProjectionExec::ProjectionExec(mongo::BSONObj const&,
                mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/projection_exec.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ProjectionExec::~ProjectionExec()
            symbol_sources:
            - src/mongo/db/exec/projection_exec.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parse(mongo::BSONObj const&,
                bool)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::ProjectionExec::transform(mongo::WorkingSetMember*)
                const
            symbol_sources:
            - src/mongo/db/exec/projection_exec.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::WorkingSetMember::~WorkingSetMember()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::toString() const
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/exec/s2near.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::S2NearStage::S2NearStage(mongo::S2NearParams const&,
                mongo::WorkingSet*)
            symbol_uses:
            - src/mongo/db/query/stage_builder.cpp
        file_dependencies:
        -   symbol_name: S2RegionCoverer::S2RegionCoverer()
            symbol_sources:
            - src/third_party/s2/s2regioncoverer.cc
        -   symbol_name: S2RegionIntersection::~S2RegionIntersection()
            symbol_sources:
            - src/third_party/s2/s2regionintersection.cc
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::makePointInterval(std::string
                const&)
            symbol_sources:
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for S2Cell
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: S2::kAvgEdge
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: vtable for S2Cap
            symbol_sources:
            - src/third_party/s2/s2cap.cc
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: S2CellId::kNumFaces
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::FetchStage::FetchStage(mongo::WorkingSet*, mongo::PlanStage*,
                mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/fetch.cpp
        -   symbol_name: mongo::WorkingSetCommon::fetchAndInvalidateLoc(mongo::WorkingSetMember*)
            symbol_sources:
            - src/mongo/db/exec/working_set_common.cpp
        -   symbol_name: S2RegionCoverer::set_max_level(int)
            symbol_sources:
            - src/third_party/s2/s2regioncoverer.cc
        -   symbol_name: S2Cap::Complement() const
            symbol_sources:
            - src/third_party/s2/s2cap.cc
        -   symbol_name: mongo::OrderedIntervalList::toString() const
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: S2RegionCoverer::set_min_level(int)
            symbol_sources:
            - src/third_party/s2/s2regioncoverer.cc
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: S2::kMaxCellLevel
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::OrderedIntervalList::isValidFor(int) const
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: S2CellId::ToString() const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::IndexCatalog::findIndexByKeyPattern(mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: S2CellId::level() const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: S2Cap::FromAxisAngle(Vector3<double> const&, S1Angle const&)
            symbol_sources:
            - src/third_party/s2/s2cap.cc
        -   symbol_name: S2RegionIntersection::Init(std::vector<S2Region*, std::allocator<S2Region*>
                >*)
            symbol_sources:
            - src/third_party/s2/s2regionintersection.cc
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::WorkingSetMember::addComputed(mongo::WorkingSetComputedData*)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::WorkingSetMember::hasObj() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: vtable for S2LatLngRect
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: mongo::IndexBoundsBuilder::makeRangeInterval(std::string
                const&, std::string const&, bool, bool)
            symbol_sources:
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: S2RegionIntersection::S2RegionIntersection()
            symbol_sources:
            - src/third_party/s2/s2regionintersection.cc
        -   symbol_name: S2RegionCoverer::~S2RegionCoverer()
            symbol_sources:
            - src/third_party/s2/s2regioncoverer.cc
        -   symbol_name: S2RegionIntersection::Release(std::vector<S2Region*, std::allocator<S2Region*>
                >*)
            symbol_sources:
            - src/third_party/s2/s2regionintersection.cc
        -   symbol_name: mongo::IndexScan::IndexScan(mongo::IndexScanParams const&,
                mongo::WorkingSet*, mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/index_scan.cpp
        -   symbol_name: mongo::WorkingSetMember::hasLoc() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::S2SearchUtil::distanceBetween(Vector3<double> const&,
                mongo::BSONObj const&, double*)
            symbol_sources:
            - src/mongo/db/geo/s2common.cpp
        -   symbol_name: mongo::Point::Point()
            symbol_sources:
            - src/mongo/db/geo/shapes.cpp
        -   symbol_name: mongo::BSONObj::getFieldsDotted(mongo::StringData const&,
                std::set<mongo::BSONElement, mongo::BSONElementCmpWithoutField, std::allocator<mongo::BSONElement>
                >&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: S2CellId::kPosBits
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2LatLngRect::Area() const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2CellId::kMaxLevel
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2RegionCoverer::GetCovering(S2Region const&, std::vector<S2CellId,
                std::allocator<S2CellId> >*)
            symbol_sources:
            - src/third_party/s2/s2regioncoverer.cc
    -   file_name: src/mongo/db/exec/s2near.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/shard_filter.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::ShardFilterStage::ShardFilterStage(boost::shared_ptr<mongo::CollectionMetadata
                const> const&, mongo::WorkingSet*, mongo::PlanStage*)
            symbol_uses:
            - src/mongo/db/query/stage_builder.cpp
        file_dependencies:
        -   symbol_name: mongo::CollectionMetadata::keyBelongsToMe(mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/s/collection_metadata.cpp
        -   symbol_name: mongo::WorkingSet::free(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::KeyPattern::extractSingleKey(mongo::BSONObj const&)
                const
            symbol_sources:
            - src/mongo/db/keypattern.cpp
        -   symbol_name: mongo::KeyPattern::KeyPattern(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/keypattern.cpp
    -   file_name: src/mongo/db/exec/shard_filter.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/skip.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::SkipStage::SkipStage(int, mongo::WorkingSet*, mongo::PlanStage*)
            symbol_uses:
            - src/mongo/dbtests/query_stage_limit_skip.cpp
            - src/mongo/db/query/stage_builder.cpp
            - src/mongo/db/exec/stagedebug_cmd.cpp
        file_dependencies:
        -   symbol_name: mongo::WorkingSet::free(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
    -   file_name: src/mongo/db/exec/skip.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/sort.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::SortStage::SortStage(mongo::SortStageParams const&,
                mongo::WorkingSet*, mongo::PlanStage*)
            symbol_uses:
            - src/mongo/dbtests/query_stage_sort.cpp
            - src/mongo/db/query/stage_builder.cpp
        file_dependencies:
        -   symbol_name: mongo::QueryPlanner::plan(mongo::CanonicalQuery const&, mongo::QueryPlannerParams
                const&, std::vector<mongo::QuerySolution*, std::allocator<mongo::QuerySolution*>
                >*)
            symbol_sources:
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: mongo::IndexBoundsChecker::IndexBoundsChecker(mongo::IndexBounds
                const*, mongo::BSONObj const&, int)
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetCommon::fetchAndInvalidateLoc(mongo::WorkingSetMember*)
            symbol_sources:
            - src/mongo/db/exec/working_set_common.cpp
        -   symbol_name: mongo::BtreeKeyGenerator::getKeys(mongo::BSONObj const&,
                std::set<mongo::BSONObj, mongo::BSONObjCmp, std::allocator<mongo::BSONObj>
                >*) const
            symbol_sources:
            - src/mongo/db/index/btree_key_generator.cpp
        -   symbol_name: mongo::WorkingSetMember::hasLoc() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::LiteParsedQuery::isTextScoreMeta(mongo::BSONElement)
            symbol_sources:
            - src/mongo/db/query/lite_parsed_query.cpp
        -   symbol_name: mongo::WorkingSet::free(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetMember::hasComputed(mongo::WorkingSetComputedDataType)
                const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::WorkingSetMember::hasObj() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::CanonicalQuery::canonicalize(std::string const&, mongo::BSONObj
                const&, mongo::CanonicalQuery**)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BtreeKeyGeneratorV1::BtreeKeyGeneratorV1(std::vector<char
                const*, std::allocator<char const*> >, std::vector<mongo::BSONElement,
                std::allocator<mongo::BSONElement> >, bool)
            symbol_sources:
            - src/mongo/db/index/btree_key_generator.cpp
        -   symbol_name: mongo::IndexBoundsChecker::isValidKey(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/query/index_bounds.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetMember::getComputed(mongo::WorkingSetComputedDataType)
                const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/exec/sort.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/sort_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::unittest::Test::tearDown()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::WorkingSet::~WorkingSet()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::WorkingSetMember::WorkingSetMember()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MockStage::pushBack(mongo::WorkingSetMember const&)
            symbol_sources:
            - src/mongo/db/exec/mock_stage.cpp
        -   symbol_name: mongo::SortStage::~SortStage()
            symbol_sources:
            - src/mongo/db/exec/sort.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::fromjson(char const*, int*)
            symbol_sources:
            - src/mongo/db/json.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::MockStage::MockStage(mongo::WorkingSet*)
            symbol_sources:
            - src/mongo/db/exec/mock_stage.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::SortStage::work(unsigned long*)
            symbol_sources:
            - src/mongo/db/exec/sort.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::WorkingSet::WorkingSet()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::WorkingSetMember::~WorkingSetMember()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::SortStage::isEOF()
            symbol_sources:
            - src/mongo/db/exec/sort.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Test::setUp()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::SortStage::SortStage(mongo::SortStageParams const&,
                mongo::WorkingSet*, mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/exec/sort.cpp
    -   file_name: src/mongo/db/exec/stagedebug_cmd.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::IndexCatalog::findIndexByType(std::string const&,
                std::vector<mongo::IndexDescriptor*, std::allocator<mongo::IndexDescriptor*>
                >&) const
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::OrStage::OrStage(mongo::WorkingSet*, bool, mongo::MatchExpression
                const*)
            symbol_sources:
            - src/mongo/db/exec/or.cpp
        -   symbol_name: mongo::AndSortedStage::AndSortedStage(mongo::WorkingSet*,
                mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/and_sorted.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Privilege::Privilege(mongo::ResourcePattern const&,
                mongo::ActionSet const&)
            symbol_sources:
            - src/mongo/db/auth/privilege.cpp
        -   symbol_name: mongo::fts::FTSLanguage::str() const
            symbol_sources:
            - src/mongo/db/fts/fts_language.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: typeinfo for mongo::FTSAccessMethod
            symbol_sources:
            - src/mongo/db/index/fts_access_method.cpp
        -   symbol_name: mongo::Command::parseNs(std::string const&, mongo::BSONObj
                const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: vtable for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::AndSortedStage::addChild(mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/exec/and_sorted.cpp
        -   symbol_name: mongo::WorkingSet::~WorkingSet()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::FetchStage::FetchStage(mongo::WorkingSet*, mongo::PlanStage*,
                mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/fetch.cpp
        -   symbol_name: mongo::MergeSortStage::addChild(mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/exec/merge_sort.cpp
        -   symbol_name: mongo::ActionSet::addAction(mongo::ActionType const&)
            symbol_sources:
            - src/mongo/db/auth/action_set.cpp
        -   symbol_name: typeinfo for mongo::Command
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::WorkingSet::WorkingSet()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Command::Command(mongo::StringData, bool, mongo::StringData)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::LimitStage::LimitStage(int, mongo::WorkingSet*, mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/exec/limit.cpp
        -   symbol_name: mongo::Command::parseResourcePattern(std::string const&,
                mongo::BSONObj const&) const
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::IndexCatalog::findIndexByKeyPattern(mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::Command::checkAuthForCommand(mongo::ClientBasic*,
                std::string const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::fts::FTSSpec::getIndexPrefix(mongo::BSONObj const&,
                mongo::BSONObj*) const
            symbol_sources:
            - src/mongo/db/fts/fts_spec.cpp
        -   symbol_name: mongo::MatchExpressionParser::_parse(mongo::BSONObj const&,
                bool)
            symbol_sources:
            - src/mongo/db/matcher/expression_parser.cpp
        -   symbol_name: mongo::PlanExecutor::~PlanExecutor()
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::CollectionScan::CollectionScan(mongo::CollectionScanParams
                const&, mongo::WorkingSet*, mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/collection_scan.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::IndexCatalog::getIndex(mongo::IndexDescriptor const*)
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::ActionType::find
            symbol_sources:
            - build/darwin/cpppath__usr_local_Cellar_openssl_1.0.1e_include/libpath__usr_local_Cellar_openssl_1.0.1e_lib/ssl/mongo/db/auth/action_type.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::OrStage::addChild(mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/exec/or.cpp
        -   symbol_name: mongo::AndHashStage::AndHashStage(mongo::WorkingSet*, mongo::MatchExpression
                const*)
            symbol_sources:
            - src/mongo/db/exec/and_hash.cpp
        -   symbol_name: mongo::PlanExecutor::getNext(mongo::BSONObj*, mongo::DiskLoc*)
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::IndexScan::IndexScan(mongo::IndexScanParams const&,
                mongo::WorkingSet*, mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/index_scan.cpp
        -   symbol_name: mongo::fts::FTSQuery::parse(std::string const&, mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/db/fts/fts_query.cpp
        -   symbol_name: mongo::PlanExecutor::PlanExecutor(mongo::WorkingSet*, mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/query/plan_executor.cpp
        -   symbol_name: mongo::AndHashStage::addChild(mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/exec/and_hash.cpp
        -   symbol_name: mongo::SkipStage::SkipStage(int, mongo::WorkingSet*, mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/exec/skip.cpp
        -   symbol_name: mongo::Command::redactForLogging(mongo::mutablebson::Document*)
            symbol_sources:
            - src/mongo/db/commands.cpp
        -   symbol_name: mongo::MergeSortStage::MergeSortStage(mongo::MergeSortStageParams
                const&, mongo::WorkingSet*)
            symbol_sources:
            - src/mongo/db/exec/merge_sort.cpp
        -   symbol_name: mongo::TextStage::TextStage(mongo::TextStageParams const&,
                mongo::WorkingSet*, mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/text.cpp
        -   symbol_name: mongo::Command::stopIndexBuilds(std::string const&, mongo::BSONObj
                const&)
            symbol_sources:
            - src/mongo/db/commands.cpp
    -   file_name: src/mongo/db/exec/text.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::TextStage::TextStage(mongo::TextStageParams const&,
                mongo::WorkingSet*, mongo::MatchExpression const*)
            symbol_uses:
            - src/mongo/db/query/stage_builder.cpp
            - src/mongo/db/exec/stagedebug_cmd.cpp
        file_dependencies:
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::IndexCatalog::findIndexByType(std::string const&,
                std::vector<mongo::IndexDescriptor*, std::allocator<mongo::IndexDescriptor*>
                >&) const
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ElementIterator::Context::reset(mongo::BSONElement,
                mongo::BSONElement, bool)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::BSONElementIterator::BSONElementIterator(mongo::ElementPath
                const*, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::ElementIterator::~ElementIterator()
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::fts::Stemmer::~Stemmer()
            symbol_sources:
            - src/mongo/db/fts/stemmer.cpp
        -   symbol_name: mongo::IndexScan::IndexScan(mongo::IndexScanParams const&,
                mongo::WorkingSet*, mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/index_scan.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetMember::hasLoc() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::fts::FTSMatcher::phrasesMatch(mongo::BSONObj const&)
                const
            symbol_sources:
            - src/mongo/db/fts/fts_matcher.cpp
        -   symbol_name: mongo::fts::FTSIndexFormat::getIndexKey(double, std::string
                const&, mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/fts/fts_index_format.cpp
        -   symbol_name: mongo::fts::FTSMatcher::FTSMatcher(mongo::fts::FTSQuery const&,
                mongo::fts::FTSSpec const&)
            symbol_sources:
            - src/mongo/db/fts/fts_matcher.cpp
        -   symbol_name: typeinfo for mongo::ElementIterator
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::fts::MAX_WEIGHT
            symbol_sources:
            - src/mongo/db/fts/fts_spec.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::fts::FTSMatcher::hasNegativeTerm(mongo::BSONObj const&)
                const
            symbol_sources:
            - src/mongo/db/fts/fts_matcher.cpp
        -   symbol_name: mongo::WorkingSetMember::addComputed(mongo::WorkingSetComputedData*)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::WorkingSet::allocate()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::invariantFailed(char const*, char const*, unsigned
                int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::DiskLoc::obj() const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::WorkingSet::free(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::SimpleArrayElementIterator::SimpleArrayElementIterator(mongo::BSONElement
                const&, bool)
            symbol_sources:
            - src/mongo/db/matcher/path.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::FieldRef::equalsDottedField(mongo::StringData const&)
                const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
    -   file_name: src/mongo/db/exec/text.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/working_set.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::WorkingSetMember::WorkingSetMember()
            symbol_uses:
            - src/mongo/dbtests/query_stage_limit_skip.cpp
            - src/mongo/dbtests/query_stage_sort.cpp
            - src/mongo/dbtests/query_stage_fetch.cpp
        -   symbol_name: mongo::WorkingSetMember::~WorkingSetMember()
            symbol_uses:
            - src/mongo/dbtests/query_stage_limit_skip.cpp
            - src/mongo/dbtests/query_stage_sort.cpp
            - src/mongo/dbtests/query_stage_fetch.cpp
        -   symbol_name: mongo::WorkingSet::isFlagged(unsigned long) const
            symbol_uses:
            - src/mongo/db/exec/merge_sort.cpp
            - src/mongo/dbtests/query_stage_keep.cpp
        -   symbol_name: mongo::WorkingSet::allocate()
            symbol_uses:
            - src/mongo/dbtests/query_stage_keep.cpp
            - src/mongo/db/exec/oplogstart.cpp
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/index_scan.cpp
            - src/mongo/db/exec/text.cpp
            - src/mongo/db/exec/collection_scan.cpp
            - src/mongo/db/exec/mock_stage.cpp
            - src/mongo/db/exec/distinct_scan.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::WorkingSet::flagForReview(unsigned long const&)
            symbol_uses:
            - src/mongo/db/exec/and_hash.cpp
            - src/mongo/dbtests/query_stage_keep.cpp
            - src/mongo/db/exec/and_sorted.cpp
            - src/mongo/db/exec/merge_sort.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::WorkingSet::~WorkingSet()
            symbol_uses:
            - src/mongo/dbtests/query_stage_keep.cpp
            - src/mongo/db/query/plan_executor.cpp
            - src/mongo/dbtests/query_stage_merge_sort.cpp
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/dbtests/query_multi_plan_runner.cpp
            - src/mongo/dbtests/runner_registry.cpp
            - src/mongo/dbtests/query_stage_and.cpp
            - src/mongo/dbtests/query_stage_fetch.cpp
            - src/mongo/db/query/stage_builder.cpp
            - src/mongo/dbtests/query_single_solution_runner.cpp
            - src/mongo/db/exec/2dcommon.cpp
            - src/mongo/db/exec/stagedebug_cmd.cpp
            - src/mongo/dbtests/query_stage_distinct.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/dbtests/query_stage_limit_skip.cpp
            - src/mongo/dbtests/query_stage_sort.cpp
            - src/mongo/dbtests/query_stage_collscan.cpp
            - src/mongo/dbtests/oplogstarttests.cpp
            - src/mongo/db/exec/2d.cpp
        -   symbol_name: mongo::WorkingSet::free(unsigned long const&)
            symbol_uses:
            - src/mongo/db/exec/and_hash.cpp
            - src/mongo/db/exec/fetch.cpp
            - src/mongo/db/exec/keep_mutations.cpp
            - src/mongo/db/query/plan_executor.cpp
            - src/mongo/db/exec/oplogstart.cpp
            - src/mongo/db/exec/and_sorted.cpp
            - src/mongo/db/exec/merge_sort.cpp
            - src/mongo/db/exec/index_scan.cpp
            - src/mongo/db/exec/shard_filter.cpp
            - src/mongo/db/exec/text.cpp
            - src/mongo/db/exec/sort.cpp
            - src/mongo/db/exec/skip.cpp
            - src/mongo/db/exec/2dcommon.cpp
            - src/mongo/db/exec/collection_scan.cpp
            - src/mongo/db/exec/or.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
        -   symbol_name: mongo::WorkingSetMember::hasComputed(mongo::WorkingSetComputedDataType)
                const
            symbol_uses:
            - src/mongo/db/exec/and_sorted.cpp
            - src/mongo/db/exec/and_hash.cpp
            - src/mongo/db/exec/sort.cpp
            - src/mongo/db/exec/working_set_common.cpp
            - src/mongo/db/exec/projection_exec.cpp
        -   symbol_name: mongo::WorkingSet::WorkingSet()
            symbol_uses:
            - src/mongo/db/repl/replication_server_status.cpp
            - src/mongo/db/commands/dbhash.cpp
            - src/mongo/db/commands/test_commands.cpp
            - src/mongo/dbtests/namespacetests.cpp
            - src/mongo/dbtests/runner_registry.cpp
            - src/mongo/db/query/new_find.cpp
            - src/mongo/db/catalog/index_create.cpp
            - src/mongo/dbtests/query_stage_keep.cpp
            - src/mongo/dbtests/query_stage_distinct.cpp
            - src/mongo/db/catalog/index_catalog.cpp
            - src/mongo/db/exec/stagedebug_cmd.cpp
            - src/mongo/dbtests/query_stage_merge_sort.cpp
            - src/mongo/db/commands/validate.cpp
            - src/mongo/dbtests/query_stage_sort.cpp
            - src/mongo/dbtests/query_stage_collscan.cpp
            - src/mongo/dbtests/oplogstarttests.cpp
            - src/mongo/dbtests/query_multi_plan_runner.cpp
            - src/mongo/db/repl/rs_rollback.cpp
            - src/mongo/dbtests/query_stage_tests.cpp
            - src/mongo/db/dbcommands.cpp
            - src/mongo/db/catalog/database.cpp
            - src/mongo/dbtests/query_stage_and.cpp
            - src/mongo/db/commands/collection_to_capped.cpp
            - src/mongo/db/exec/2dcommon.cpp
            - src/mongo/s/d_split.cpp
            - src/mongo/dbtests/query_stage_fetch.cpp
            - src/mongo/db/index/haystack_access_method.cpp
            - src/mongo/s/d_migrate.cpp
            - src/mongo/db/repl/master_slave.cpp
            - src/mongo/db/db.cpp
            - src/mongo/dbtests/query_stage_limit_skip.cpp
            - src/mongo/db/query/stage_builder.cpp
            - src/mongo/db/dbhelpers.cpp
            - src/mongo/dbtests/query_single_solution_runner.cpp
        -   symbol_name: mongo::WorkingSetMember::addComputed(mongo::WorkingSetComputedData*)
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/mongo/db/exec/and_hash.cpp
            - src/mongo/db/exec/working_set_common.cpp
            - src/mongo/db/exec/and_sorted.cpp
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/index_scan.cpp
            - src/mongo/db/exec/text.cpp
        -   symbol_name: mongo::WorkingSetMember::hasObj() const
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/mongo/db/exec/and_hash.cpp
            - src/mongo/db/exec/fetch.cpp
            - src/mongo/db/exec/keep_mutations.cpp
            - src/mongo/db/query/plan_executor.cpp
            - src/mongo/db/exec/oplogstart.cpp
            - src/mongo/db/exec/and_sorted.cpp
            - src/mongo/db/exec/index_scan.cpp
            - src/mongo/dbtests/query_stage_fetch.cpp
            - src/mongo/db/exec/projection_exec.cpp
            - src/mongo/db/exec/sort.cpp
            - src/mongo/db/exec/collection_scan.cpp
            - src/mongo/db/exec/or.cpp
            - src/mongo/dbtests/query_stage_sort.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
        -   symbol_name: mongo::WorkingSetMember::getFieldDotted(std::string const&,
                mongo::BSONElement*) const
            symbol_uses:
            - src/mongo/db/exec/merge_sort.cpp
            - src/mongo/dbtests/query_stage_and.cpp
            - src/mongo/dbtests/query_stage_fetch.cpp
            - src/mongo/db/exec/projection_exec.cpp
            - src/mongo/dbtests/query_stage_merge_sort.cpp
        -   symbol_name: mongo::WorkingSetMember::getComputed(mongo::WorkingSetComputedDataType)
                const
            symbol_uses:
            - src/mongo/db/exec/and_sorted.cpp
            - src/mongo/db/exec/and_hash.cpp
            - src/mongo/db/exec/sort.cpp
            - src/mongo/db/exec/working_set_common.cpp
            - src/mongo/db/exec/projection_exec.cpp
        -   symbol_name: mongo::WorkingSet::getFlagged() const
            symbol_uses:
            - src/mongo/db/exec/keep_mutations.cpp
            - src/mongo/dbtests/query_stage_and.cpp
        -   symbol_name: mongo::WorkingSetMember::hasLoc() const
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/mongo/db/exec/and_hash.cpp
            - src/mongo/db/exec/fetch.cpp
            - src/mongo/db/exec/working_set_common.cpp
            - src/mongo/db/exec/oplogstart.cpp
            - src/mongo/db/exec/and_sorted.cpp
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/merge_sort.cpp
            - src/mongo/dbtests/query_stage_collscan.cpp
            - src/mongo/db/exec/text.cpp
            - src/mongo/db/exec/sort.cpp
            - src/mongo/db/exec/or.cpp
            - src/mongo/dbtests/query_stage_sort.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/db/query/plan_executor.cpp
        file_dependencies:
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::invariantFailed(char const*, char const*, unsigned
                int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/exec/working_set.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/working_set_common.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::WorkingSetCommon::initFrom(mongo::WorkingSetMember*,
                mongo::WorkingSetMember const&)
            symbol_uses:
            - src/mongo/db/exec/mock_stage.cpp
        -   symbol_name: mongo::WorkingSetCommon::fetchAndInvalidateLoc(mongo::WorkingSetMember*)
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/mongo/db/exec/and_hash.cpp
            - src/mongo/db/exec/fetch.cpp
            - src/mongo/db/exec/and_sorted.cpp
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/exec/merge_sort.cpp
            - src/mongo/db/exec/sort.cpp
            - src/mongo/db/query/multi_plan_runner.cpp
            - src/mongo/db/exec/2d.cpp
        file_dependencies:
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetMember::hasLoc() const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetMember::hasComputed(mongo::WorkingSetComputedDataType)
                const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::WorkingSetMember::addComputed(mongo::WorkingSetComputedData*)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetMember::getComputed(mongo::WorkingSetComputedDataType)
                const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::DiskLoc::obj() const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/exec/working_set_common.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/working_set_computed_data.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/exec/working_set_test.cpp
        file_executables: []
        file_interface: []
        file_dependencies:
        -   symbol_name: typeinfo for mongo::unittest::Test
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::WorkingSet::~WorkingSet()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::unittest::Test::Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Test::~Test()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::WorkingSet::WorkingSet()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::WorkingSet::allocate()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::unittest::Test::run()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::WorkingSetMember::getFieldDotted(std::string const&,
                mongo::BSONElement*) const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::getSuite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/dbtests/query_stage_distinct.cpp
        file_executables:
        - test
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::Client::ReadContext::ReadContext(std::string const&,
                std::string const&)
            symbol_sources:
            - src/mongo/db/client.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Lock::DBWrite::~DBWrite()
            symbol_sources:
            - src/mongo/db/d_concurrency.cpp
        -   symbol_name: vtable for mongo::DBClientWithCommands
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::DBClientBase::ConnectionIdSequence
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::DBDirectClient
            symbol_sources:
            - src/mongo/db/instance.cpp
        -   symbol_name: mongo::WorkingSet::~WorkingSet()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::Client::WriteContext::WriteContext(std::string const&,
                std::string const&)
            symbol_sources:
            - src/mongo/db/client.cpp
        -   symbol_name: mongo::nsGetDB(std::string const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: vtable for mongo::DBClientBase
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::WorkingSet::WorkingSet()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::nsGetCollection(std::string const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::DiskLoc::obj() const
            symbol_sources:
            - src/mongo/db/storage/record.cpp
        -   symbol_name: mongo::IndexCatalog::findIndexByKeyPattern(mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::IndexBoundsBuilder::allValues()
            symbol_sources:
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: mongo::Client::Context::~Context()
            symbol_sources:
            - src/mongo/db/client.cpp
        -   symbol_name: mongo::DistinctScan::DistinctScan(mongo::DistinctParams const&,
                mongo::WorkingSet*)
            symbol_sources:
            - src/mongo/db/exec/distinct_scan.cpp
        -   symbol_name: mongo::unittest::Suite::Suite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: typeinfo for mongo::unittest::Suite
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::DBClientBase::insert(std::string const&, mongo::BSONObj,
                int)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::DBClientWithCommands::ensureIndex(std::string const&,
                mongo::BSONObj, bool, std::string const&, bool, bool, int, int)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::demangleName(std::type_info const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::unittest::Suite::~Suite()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::storageGlobalParams
            symbol_sources:
            - src/mongo/db/storage_options.cpp
    -   file_name: src/mongo/dbtests/query_stage_keep.cpp
        file_executables:
        - test
        file_interface: []
        file_dependencies:
        -   symbol_name: mongo::KeepMutationsStage::KeepMutationsStage(mongo::MatchExpression
                const*, mongo::WorkingSet*, mongo::PlanStage*)
            symbol_sources:
            - src/mongo/db/exec/keep_mutations.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Lock::DBWrite::~DBWrite()
            symbol_sources:
            - src/mongo/db/d_concurrency.cpp
        -   symbol_name: vtable for mongo::DBClientWithCommands
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::WorkingSet::isFlagged(unsigned long) const
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::WorkingSet::allocate()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::WorkingSet::flagForReview(unsigned long const&)
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::DBClientBase::ConnectionIdSequence
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: vtable for mongo::DBDirectClient
            symbol_sources:
            - src/mongo/db/instance.cpp
        -   symbol_name: mongo::WorkingSet::~WorkingSet()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::Client::WriteContext::WriteContext(std::string const&,
                std::string const&)
            symbol_sources:
            - src/mongo/db/client.cpp
        -   symbol_name: mongo::nsGetDB(std::string const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::unittest::TestAssertion::TestAssertion(char const*,
                unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::ComparisonAssertion::ComparisonAssertion(char
                const*, char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: vtable for mongo::DBClientBase
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::unittest::Suite::add(std::string const&, boost::function<void
                ()> const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::unittest::TestAssertion::fail(std::string const&)
                const
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::WorkingSet::WorkingSet()
            symbol_sources:
            - src/mongo/db/exec/working_set.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::nsGetCollection(std::string const&)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::Client::Context::~Context()
            symbol_sources:
            - src/mongo/db/client.cpp
        -   symbol_name: mongo::unittest::Suite::Suite(std::string const&)
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::CollectionScan::CollectionScan(mongo::CollectionScanParams
                const&, mongo::WorkingSet*, mongo::MatchExpression const*)
            symbol_sources:
            - src/mongo/db/exec/collection_scan.cpp
        -   symbol_name: typeinfo for mongo::unittest::Suite
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::DBClientBase::insert(std::string const&, mongo::BSONObj,
                int)
            symbol_sources:
            - src/mongo/client/dbclient.cpp
        -   symbol_name: mongo::unittest::TestAssertion::~TestAssertion()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::demangleName(std::type_info const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Database::createCollection(mongo::StringData const&,
                bool, mongo::BSONObj const*, bool)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::unittest::Suite::~Suite()
            symbol_sources:
            - src/mongo/unittest/unittest.cpp
        -   symbol_name: mongo::storageGlobalParams
            symbol_sources:
            - src/mongo/db/storage_options.cpp
-   group_title: 'TODO: Name this group'
    group_description: Legacy utilities for managing queries. Has utilities like range
        intersection and application of# skip and limit. These are allllmost dead.
        The functionality should be replaced by the new# matcher, expressions, and
        query system.
    group_files:
    - src/mongo/db/queryutil-inl.h
    - src/mongo/db/queryutil.cpp
    - src/mongo/db/queryutil.h
    group_generated_data:
    -   file_name: src/mongo/db/queryutil-inl.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/queryutil.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::FieldRangeVectorIterator::FieldIntervalMatcher::FieldIntervalMatcher(mongo::FieldInterval
                const&, mongo::BSONElement const&, bool)
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRange::operator|=(mongo::FieldRange const&)
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::OrRangeGenerator::popOrClauseSingleKey()
            symbol_uses:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::FieldRangeSet::toString() const
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRangeVectorIterator::prepDive()
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRangeVector::FieldRangeVector(mongo::FieldRangeSet
                const&, mongo::BSONObj, int)
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRange::operator-=(mongo::FieldRange const&)
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldInterval::toString() const
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRangeVector::startKey() const
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRangeVector::endKey() const
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRangeVector::startKeyInclusive() const
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRangeVectorIterator::FieldIntervalMatcher::upperCmp()
                const
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRangeSet::subset(mongo::BSONObj const&) const
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::isSimpleIdQuery(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/commands/find_and_modify.cpp
        -   symbol_name: mongo::FieldRangeVectorIterator::advance(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRangeSetPair::frsForIndex(mongo::NamespaceDetails
                const*, int) const
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRange::isPointIntervalSet() const
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRangeVectorIterator::FieldIntervalMatcher::lowerCmp()
                const
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRangeSet::universalRange() const
            symbol_uses:
            - src/mongo/db/keypattern.cpp
            - src/mongo/dbtests/queryutiltests.cpp
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::FieldRange::universal() const
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::FieldRangeVectorIterator::CompoundRangeCounter::CompoundRangeCounter(int,
                int)
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRangeSetPair::operator&=(mongo::FieldRangeSetPair
                const&)
            symbol_uses:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::FieldRangeSetPair::operator-=(mongo::FieldRangeSet
                const&)
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRangeVector::isSingleInterval() const
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRange::toString() const
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRangeSetPair::assertValidIndex(mongo::NamespaceDetails
                const*, int) const
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRangeSetPair::noNonUniversalRanges() const
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRange::FieldRange(mongo::BSONElement const&,
                bool, bool)
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRange::intersect(mongo::FieldRange const&, bool)
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRangeVectorIterator::FieldRangeVectorIterator(mongo::FieldRangeVector
                const&, int)
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRangeSet::operator&=(mongo::FieldRangeSet const&)
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRangeSet::FieldRangeSet(char const*, mongo::BSONObj
                const&, bool, bool)
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRangeSet::getSpecial() const
            symbol_uses:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::FieldRangeVector::toString() const
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRangeSet::numNonUniversalRanges() const
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::applySkipLimit(long long, mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
        -   symbol_name: mongo::FieldRangeVector::endKeyInclusive() const
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRangeSet::operator-=(mongo::FieldRangeSet const&)
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::FieldRangeSetPair::toString() const
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        -   symbol_name: mongo::OrRangeGenerator::OrRangeGenerator(char const*, mongo::BSONObj
                const&, bool)
            symbol_uses:
            - src/mongo/s/chunk.cpp
        -   symbol_name: mongo::FieldRangeSet::prefixed(std::string const&) const
            symbol_uses:
            - src/mongo/dbtests/queryutiltests.cpp
        file_dependencies:
        -   symbol_name: mongo::BSONObjBuilder::appendMaxForType(mongo::StringData
                const&, int)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::getGtLtOp(mongo::BSONElement const&)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::BSONObj::jsonString(mongo::JsonStringFormat, int)
                const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::BSONElement::getGtLtOp(int) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::minKey
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::BtreeKeyGeneratorV1::BtreeKeyGeneratorV1(std::vector<char
                const*, std::allocator<char const*> >, std::vector<mongo::BSONElement,
                std::allocator<mongo::BSONElement> >, bool)
            symbol_sources:
            - src/mongo/db/index/btree_key_generator.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONObj::clientReadable() const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::IndexNames::GEO_2DSPHERE
            symbol_sources:
            - src/mongo/db/index_names.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::staticUndefined
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::staticNull
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::BSONObjBuilder::appendMinForType(mongo::StringData
                const&, int)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::BtreeKeyGenerator::getKeys(mongo::BSONObj const&,
                std::set<mongo::BSONObj, mongo::BSONObjCmp, std::allocator<mongo::BSONObj>
                >*) const
            symbol_sources:
            - src/mongo/db/index/btree_key_generator.cpp
        -   symbol_name: mongo::IndexNames::GEO_2D
            symbol_sources:
            - src/mongo/db/index_names.cpp
        -   symbol_name: mongo::BSONObj::woCompare(mongo::BSONObj const&, mongo::BSONObj
                const&, bool) const
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::maxKey
            symbol_sources:
            - src/mongo/db/jsobj.cpp
    -   file_name: src/mongo/db/queryutil.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
-   group_title: 'TODO: Name this group'
    group_description: Old way of doing document projections. Given a doc and a projection,
        transforms the document.## what calls it, and where are projections done now?
    group_files:
    - src/mongo/db/projection.cpp
    - src/mongo/db/projection.h
    group_generated_data:
    -   file_name: src/mongo/db/projection.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::Projection::init(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/db/commands/find_and_modify.cpp
        -   symbol_name: mongo::Projection::transform(mongo::BSONObj const&, mongo::MatchDetails
                const*) const
            symbol_uses:
            - src/mongo/db/commands/find_and_modify.cpp
        file_dependencies:
        -   symbol_name: mongo::Status mongo::parseNumberFromStringWithBase<long>(mongo::StringData
                const&, int, long*)
            symbol_sources:
            - src/mongo/base/parse_number.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrsReady
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::Matcher2::matches(mongo::BSONObj const&, mongo::MatchDetails*)
                const
            symbol_sources:
            - src/mongo/db/matcher/matcher.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MatchDetails::elemMatchKey() const
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::BSONObjBuilder::numStrs
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::StringData::Hasher::operator()(mongo::StringData const&)
                const
            symbol_sources:
            - src/mongo/base/string_data.cpp
        -   symbol_name: mongo::MatchDetails::toString() const
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: mongo::MatchDetails::MatchDetails()
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::MatchDetails::hasElemMatchKey() const
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::Matcher2::Matcher2(mongo::BSONObj const&, bool)
            symbol_sources:
            - src/mongo/db/matcher/matcher.cpp
    -   file_name: src/mongo/db/projection.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
-   group_title: 'TODO: Name this group'
    group_description: 'Entry point for various database operations## locks: we should
        clarify locking, e.g. everything in update.cpp happens## in the context of
        a db write lock## should clarify the relationship between these and db/instance.cpp
        (not built in anywhere)'
    group_files:
    - src/mongo/db/ops/count.cpp
    - src/mongo/db/ops/count.h
    - src/mongo/db/ops/delete.cpp
    - src/mongo/db/ops/delete.h
    - src/mongo/db/ops/insert.cpp
    - src/mongo/db/ops/insert.h
    - src/mongo/db/ops/update.cpp
    - src/mongo/db/ops/update.h
    group_generated_data:
    -   file_name: src/mongo/db/ops/count.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::runCount(std::string const&, mongo::BSONObj const&,
                std::string&, int&)
            symbol_uses:
            - src/mongo/dbtests/counttests.cpp
            - src/mongo/db/dbcommands.cpp
            - src/mongo/db/instance.cpp
        -   symbol_name: mongo::applySkipLimit(long long, mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/s/commands_public.cpp
        file_dependencies:
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::getRunnerCount(mongo::Collection*, mongo::BSONObj
                const&, mongo::BSONObj const&, mongo::Runner**)
            symbol_sources:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ScopedRunnerRegistration::ScopedRunnerRegistration(mongo::Runner*)
            symbol_sources:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Client::Context::~Context()
            symbol_sources:
            - src/mongo/db/client.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::Collection::numRecords() const
            symbol_sources:
            - src/mongo/db/catalog/collection.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: typeinfo for mongo::DBException
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::storageGlobalParams
            symbol_sources:
            - src/mongo/db/storage_options.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ScopedRunnerRegistration::~ScopedRunnerRegistration()
            symbol_sources:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::Client::Context::Context(std::string const&, std::string
                const&, bool)
            symbol_sources:
            - src/mongo/db/client.cpp
    -   file_name: src/mongo/db/ops/count.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/delete.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::deleteObjects(mongo::StringData const&, mongo::BSONObj,
                bool, bool, bool)
            symbol_uses:
            - src/mongo/db/ttl.cpp
            - src/mongo/db/catalog/database.cpp
            - src/mongo/db/repl/rs_rollback.cpp
            - src/mongo/db/commands/find_and_modify.cpp
            - src/mongo/db/commands/write_commands/batch_executor.cpp
            - src/mongo/db/instance.cpp
            - src/mongo/db/repl/oplog.cpp
            - src/mongo/db/catalog/index_catalog.cpp
            - src/mongo/db/dbhelpers.cpp
        file_dependencies:
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logOp(char const*, char const*, mongo::BSONObj const&,
                mongo::BSONObj*, bool*, bool, mongo::BSONObj const*)
            symbol_sources:
            - src/mongo/db/repl/oplog.cpp
        -   symbol_name: mongo::Collection::deleteDocument(mongo::DiskLoc const&,
                bool, bool, mongo::BSONObj*)
            symbol_sources:
            - src/mongo/db/catalog/collection.cpp
        -   symbol_name: mongo::ScopedRunnerRegistration::ScopedRunnerRegistration(mongo::Runner*)
            symbol_sources:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: mongo::getRunner(mongo::CanonicalQuery*, mongo::Runner**,
                unsigned long)
            symbol_sources:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::legalClientSystemNS(mongo::StringData const&, bool)
            symbol_sources:
            - src/mongo/db/structure/catalog/namespace_details.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::operator<<(std::ostream&, mongo::StringData const&)
            symbol_sources:
            - src/mongo/base/string_data.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::CanonicalQuery::canonicalize(std::string const&, mongo::BSONObj
                const&, mongo::CanonicalQuery**)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::Collection::isCapped() const
            symbol_sources:
            - src/mongo/db/catalog/collection.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::getcurns
            symbol_sources:
            - src/mongo/util/log.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::ScopedRunnerRegistration::~ScopedRunnerRegistration()
            symbol_sources:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: mongo::dur::DurableInterface::_impl
            symbol_sources:
            - src/mongo/db/dur.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogstreamBuilder
                const&)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/ops/delete.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/insert.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::fixDocumentForInsert(mongo::BSONObj const&)
            symbol_uses:
            - src/mongo/dbtests/pdfiletests.cpp
            - src/mongo/db/commands/write_commands/batch_executor.cpp
            - src/mongo/db/instance.cpp
        -   symbol_name: mongo::userAllowedWriteNS(mongo::NamespaceString const&)
            symbol_uses:
            - src/mongo/db/commands/write_commands/write_commands.cpp
            - src/mongo/db/commands/create_indexes.cpp
            - src/mongo/db/instance.cpp
        -   symbol_name: mongo::userAllowedWriteNS(mongo::StringData const&)
            symbol_uses:
            - src/mongo/db/instance.cpp
        -   symbol_name: mongo::userAllowedWriteNS(mongo::StringData const&, mongo::StringData
                const&)
            symbol_uses:
            - src/mongo/db/dbcommands.cpp
        file_dependencies:
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::OpTime::now(mongo::mutex::scoped_lock const&)
            symbol_sources:
            - src/mongo/bson/optime.cpp
        -   symbol_name: mongo::OID::init()
            symbol_sources:
            - src/mongo/bson/oid.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::OpTime::m
            symbol_sources:
            - src/mongo/bson/optime.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
    -   file_name: src/mongo/db/ops/insert.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/mongo/db/ops/update.cpp
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: mongo::update(mongo::UpdateRequest const&, mongo::OpDebug*)
            symbol_uses:
            - src/mongo/db/repl/oplog.cpp
            - src/mongo/db/repl/rs_rollback.cpp
            - src/mongo/db/commands/find_and_modify.cpp
            - src/mongo/db/commands/write_commands/batch_executor.cpp
            - src/mongo/db/repl/master_slave.cpp
            - src/mongo/db/dbhelpers.cpp
        -   symbol_name: mongo::applyUpdateOperators(mongo::BSONObj const&, mongo::BSONObj
                const&)
            symbol_uses:
            - src/mongo/db/structure/catalog/namespace_details.cpp
        -   symbol_name: mongo::update(mongo::UpdateRequest const&, mongo::OpDebug*,
                mongo::UpdateDriver*, mongo::CanonicalQuery*)
            symbol_uses:
            - src/mongo/db/instance.cpp
        file_dependencies:
        -   symbol_name: mongo::CollectionCursorCache::invalidateDocument(mongo::DiskLoc
                const&, mongo::InvalidationType)
            symbol_sources:
            - src/mongo/db/catalog/collection_cursor_cache.cpp
        -   symbol_name: mongo::NamespaceDetails::setPaddingFactor(double)
            symbol_sources:
            - src/mongo/db/structure/catalog/namespace_details.cpp
        -   symbol_name: mongo::mutablebson::Element::compareWithBSONElement(mongo::BSONElement
                const&, bool) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::ElapsedTracker::ElapsedTracker(int, int)
            symbol_sources:
            - src/mongo/util/elapsed_tracker.cpp
        -   symbol_name: mongo::causedBy(mongo::Status const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::Document::reset()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::uasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::UpdateDriver::modsAffectIndices() const
            symbol_sources:
            - src/mongo/db/ops/update_driver.cpp
        -   symbol_name: mongo::mutablebson::Element::remove()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::MatchDetails::elemMatchKey() const
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: mongo::msgasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::Element::appendElement(mongo::BSONElement
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::UpdateDriver::refreshIndexKeys(mongo::IndexPathSet
                const*)
            symbol_sources:
            - src/mongo/db/ops/update_driver.cpp
        -   symbol_name: mongo::FieldRefSet::fillFrom(std::vector<mongo::FieldRef*,
                std::allocator<mongo::FieldRef*> > const&)
            symbol_sources:
            - src/mongo/db/field_ref_set.cpp
        -   symbol_name: mongo::mutablebson::Element::hasChildren() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: mongo::UpdateDriver::populateDocumentWithQueryFields(mongo::CanonicalQuery
                const*, mongo::mutablebson::Document&) const
            symbol_sources:
            - src/mongo/db/ops/update_driver.cpp
        -   symbol_name: mongo::mutablebson::Element::leftChild() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Document::getInPlaceUpdates(std::vector<mongo::mutablebson::DamageEvent,
                std::allocator<mongo::mutablebson::DamageEvent> >*, char const**,
                unsigned long*)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::UpdateDriver::modOptions() const
            symbol_sources:
            - src/mongo/db/ops/update_driver.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::dur::DurableInterface::_impl
            symbol_sources:
            - src/mongo/db/dur.cpp
        -   symbol_name: mongo::mutablebson::Element::rightSibling(unsigned long)
                const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::getRunner(mongo::Collection*, mongo::CanonicalQuery*,
                mongo::Runner**, unsigned long)
            symbol_sources:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: mongo::Collection::insertDocument(mongo::BSONObj const&,
                bool)
            symbol_sources:
            - src/mongo/db/catalog/collection.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, char const*,
                int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::mutablebson::Document::~Document()
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: boost::system::generic_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::mutablebson::Document::makeElementNewOID(mongo::StringData
                const&)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::logOp(char const*, char const*, mongo::BSONObj const&,
                mongo::BSONObj*, bool*, bool, mongo::BSONObj const*)
            symbol_sources:
            - src/mongo/db/repl/oplog.cpp
        -   symbol_name: mongo::getRunner(mongo::Collection*, std::string const&,
                mongo::BSONObj const&, mongo::Runner**, mongo::CanonicalQuery**, unsigned
                long)
            symbol_sources:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: mongo::mutablebson::Element::writeTo(mongo::BSONObjBuilder*)
                const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::FieldRefSet::toString() const
            symbol_sources:
            - src/mongo/db/field_ref_set.cpp
        -   symbol_name: mongo::UpdateDriver::makeOplogEntryQuery(mongo::BSONObj const&,
                bool) const
            symbol_sources:
            - src/mongo/db/ops/update_driver.cpp
        -   symbol_name: mongo::MatchDetails::MatchDetails()
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: mongo::fassertFailed(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::uasserted(int, std::string const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::mutablebson::Element::getType() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: std::string mongo::integerToHex<int>(int)
            symbol_sources:
            - src/mongo/util/hex.cpp
        -   symbol_name: mongo::mutablebson::Element::leftSibling(unsigned long) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::IndexCatalog::ok() const
            symbol_sources:
            - src/mongo/db/catalog/index_catalog.cpp
        -   symbol_name: mongo::ScopedRunnerRegistration::~ScopedRunnerRegistration()
            symbol_sources:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: mongo::UpdateDriver::update(mongo::StringData const&, mongo::mutablebson::Document*,
                mongo::BSONObj*, mongo::FieldRefSet*)
            symbol_sources:
            - src/mongo/db/ops/update_driver.cpp
        -   symbol_name: mongo::mutablebson::Element::parent() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::mutablebson::Element::pushFront(mongo::mutablebson::Element)
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::Status::Status(mongo::ErrorCodes::Error, std::string
                const&, int)
            symbol_sources:
            - src/mongo/base/status.cpp
        -   symbol_name: mongo::FieldRefSet::findConflicts(mongo::FieldRef const*,
                mongo::FieldRefSet*) const
            symbol_sources:
            - src/mongo/db/field_ref_set.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::UpdateDriver::setLogOp(bool)
            symbol_sources:
            - src/mongo/db/ops/update_driver.cpp
        -   symbol_name: mongo::mutablebson::Document::Document(mongo::BSONObj const&,
                mongo::mutablebson::Document::InPlaceMode)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::Database::getCollection(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::UpdateDriver::isDocReplacement() const
            symbol_sources:
            - src/mongo/db/ops/update_driver.cpp
        -   symbol_name: mongo::ScopedRunnerRegistration::ScopedRunnerRegistration(mongo::Runner*)
            symbol_sources:
            - src/mongo/db/query/get_runner.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::legalClientSystemNS(mongo::StringData const&, bool)
            symbol_sources:
            - src/mongo/db/structure/catalog/namespace_details.cpp
        -   symbol_name: mongo::FieldRef::FieldRef(mongo::StringData const&)
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::mutablebson::Element::getFieldName() const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::FieldRefSet::FieldRefSet()
            symbol_sources:
            - src/mongo/db/field_ref_set.cpp
        -   symbol_name: mongo::mutablebson::Document::reset(mongo::BSONObj const&,
                mongo::mutablebson::Document::InPlaceMode)
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: boost::system::system_category()
            symbol_sources:
            - src/third_party/boost/libs/system/src/error_code.cpp
        -   symbol_name: mongo::currentClient
            symbol_sources:
            - src/mongo/db/client.cpp
            - src/mongo/s/s_only.cpp
        -   symbol_name: mongo::mutablebson::Element::toString() const
            symbol_sources:
            - src/mongo/bson/mutable/element.cpp
        -   symbol_name: mongo::MatchDetails::hasElemMatchKey() const
            symbol_sources:
            - src/mongo/db/matcher/match_details.cpp
        -   symbol_name: mongo::fassertFailedWithStatus(int, mongo::Status const&)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::UpdateDriver::UpdateDriver(mongo::UpdateDriver::Options
                const&)
            symbol_sources:
            - src/mongo/db/ops/update_driver.cpp
        -   symbol_name: mongo::typeName(mongo::BSONType)
            symbol_sources:
            - src/mongo/db/jsobj.cpp
        -   symbol_name: mongo::FieldRef::dottedField(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::CollectionCursorCache::deregisterRunner(mongo::Runner*)
            symbol_sources:
            - src/mongo/db/catalog/collection_cursor_cache.cpp
        -   symbol_name: mongo::UpdateDriver::parse(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/ops/update_driver.cpp
        -   symbol_name: mongo::UpdateDriver::setContext(mongo::ModifierInterface::ExecInfo::UpdateContext)
            symbol_sources:
            - src/mongo/db/ops/update_driver.cpp
        -   symbol_name: mongo::UpdateDriver::~UpdateDriver()
            symbol_sources:
            - src/mongo/db/ops/update_driver.cpp
        -   symbol_name: mongo::Database::createCollection(mongo::StringData const&,
                bool, mongo::BSONObj const*, bool)
            symbol_sources:
            - src/mongo/db/catalog/database.cpp
        -   symbol_name: mongo::CanonicalQuery::isSimpleIdQuery(mongo::BSONObj const&)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::mutablebson::Element::findFirstChildNamed(mongo::StringData
                const&) const
            symbol_sources:
            - src/mongo/bson/mutable/document.cpp
        -   symbol_name: mongo::Collection::updateDocument(mongo::DiskLoc const&,
                mongo::BSONObj const&, bool, mongo::OpDebug*)
            symbol_sources:
            - src/mongo/db/catalog/collection.cpp
        -   symbol_name: mongo::CanonicalQuery::canonicalize(std::string const&, mongo::BSONObj
                const&, mongo::CanonicalQuery**)
            symbol_sources:
            - src/mongo/db/query/canonical_query.cpp
        -   symbol_name: mongo::FieldRefSet::keepShortest(mongo::FieldRef const*)
            symbol_sources:
            - src/mongo/db/field_ref_set.cpp
        -   symbol_name: mongo::FieldRef::getPart(unsigned long) const
            symbol_sources:
            - src/mongo/db/field_ref.cpp
    -   file_name: src/mongo/db/ops/update.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
