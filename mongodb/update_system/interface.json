[
    {
        "symbol": "mongo::UpdateLifecycleImpl::UpdateLifecycleImpl(bool, mongo::NamespaceString const&)", 
        "object": "src/mongo/db/ops/update_lifecycle_impl.cpp", 
        "used_by": [
            "src/mongo/db/repl/oplog.cpp", 
            "src/mongo/db/repl/rs_rollback.cpp", 
            "src/mongo/db/commands/find_and_modify.cpp", 
            "src/mongo/db/commands/write_commands/batch_executor.cpp", 
            "src/mongo/db/instance.cpp", 
            "src/mongo/db/dbhelpers.cpp"
        ]
    }, 
    {
        "symbol": "vtable for mongo::UpdateLifecycleImpl", 
        "object": "src/mongo/db/ops/update_lifecycle_impl.cpp", 
        "used_by": [
            "src/mongo/db/repl/oplog.cpp", 
            "src/mongo/db/repl/rs_rollback.cpp", 
            "src/mongo/db/commands/find_and_modify.cpp", 
            "src/mongo/db/commands/write_commands/batch_executor.cpp", 
            "src/mongo/db/instance.cpp", 
            "src/mongo/db/dbhelpers.cpp"
        ]
    }, 
    {
        "symbol": "mongo::FieldRefSet::findConflicts(mongo::FieldRef const*, mongo::FieldRefSet*) const", 
        "object": "src/mongo/db/field_ref_set.cpp", 
        "used_by": [
            "src/mongo/db/ops/update.cpp"
        ]
    }, 
    {
        "symbol": "mongo::FieldRefSet::toString() const", 
        "object": "src/mongo/db/field_ref_set.cpp", 
        "used_by": [
            "src/mongo/db/ops/update.cpp"
        ]
    }, 
    {
        "symbol": "mongo::FieldRefSet::fillFrom(std::vector<mongo::FieldRef*, std::allocator<mongo::FieldRef*> > const&)", 
        "object": "src/mongo/db/field_ref_set.cpp", 
        "used_by": [
            "src/mongo/db/ops/update.cpp"
        ]
    }, 
    {
        "symbol": "mongo::FieldRefSet::FieldRefSet()", 
        "object": "src/mongo/db/field_ref_set.cpp", 
        "used_by": [
            "src/mongo/db/ops/update.cpp"
        ]
    }, 
    {
        "symbol": "mongo::FieldRefSet::keepShortest(mongo::FieldRef const*)", 
        "object": "src/mongo/db/field_ref_set.cpp", 
        "used_by": [
            "src/mongo/db/ops/update.cpp"
        ]
    }, 
    {
        "symbol": "mongo::FieldRef::parse(mongo::StringData const&)", 
        "object": "src/mongo/db/field_ref.cpp", 
        "used_by": [
            "src/mongo/db/catalog/index_catalog.cpp", 
            "src/mongo/db/matcher/path.cpp", 
            "src/mongo/db/ops/update.cpp", 
            "src/mongo/s/collection_metadata.cpp", 
            "src/mongo/db/fts/fts_spec.cpp"
        ]
    }, 
    {
        "symbol": "mongo::FieldRef::getPart(unsigned long) const", 
        "object": "src/mongo/db/field_ref.cpp", 
        "used_by": [
            "src/mongo/db/matcher/path_internal.cpp", 
            "src/mongo/db/fts/fts_spec.cpp", 
            "src/mongo/db/ops/update.cpp", 
            "src/mongo/db/catalog/index_catalog.cpp", 
            "src/mongo/db/matcher/path.cpp"
        ]
    }, 
    {
        "symbol": "mongo::FieldRef::dottedField(unsigned long) const", 
        "object": "src/mongo/db/field_ref.cpp", 
        "used_by": [
            "src/mongo/db/matcher/path.cpp", 
            "src/mongo/db/exec/and_sorted.cpp", 
            "src/mongo/db/exec/index_scan.cpp", 
            "src/mongo/db/exec/or.cpp", 
            "src/mongo/db/exec/and_hash.cpp", 
            "src/mongo/db/ops/update.cpp", 
            "src/mongo/db/exec/collection_scan.cpp", 
            "src/mongo/db/exec/fetch.cpp"
        ]
    }, 
    {
        "symbol": "mongo::FieldRef::equalsDottedField(mongo::StringData const&) const", 
        "object": "src/mongo/db/field_ref.cpp", 
        "used_by": [
            "src/mongo/db/exec/and_hash.cpp", 
            "src/mongo/db/exec/fetch.cpp", 
            "src/mongo/db/exec/and_sorted.cpp", 
            "src/mongo/db/exec/index_scan.cpp", 
            "src/mongo/db/exec/text.cpp", 
            "src/mongo/db/exec/2dcommon.cpp", 
            "src/mongo/db/exec/collection_scan.cpp", 
            "src/mongo/db/exec/or.cpp"
        ]
    }, 
    {
        "symbol": "mongo::UpdateDriver::modsAffectIndices() const", 
        "object": "src/mongo/db/ops/update_driver.cpp", 
        "used_by": [
            "src/mongo/db/ops/update.cpp"
        ]
    }, 
    {
        "symbol": "mongo::UpdateDriver::~UpdateDriver()", 
        "object": "src/mongo/db/ops/update_driver.cpp", 
        "used_by": [
            "src/mongo/db/auth/role_graph_update.cpp", 
            "src/mongo/db/ops/update.cpp", 
            "src/mongo/db/auth/authz_manager_external_state_mock.cpp", 
            "src/mongo/db/instance.cpp"
        ]
    }, 
    {
        "symbol": "mongo::UpdateDriver::populateDocumentWithQueryFields(mongo::CanonicalQuery const*, mongo::mutablebson::Document&) const", 
        "object": "src/mongo/db/ops/update_driver.cpp", 
        "used_by": [
            "src/mongo/db/ops/update.cpp"
        ]
    }, 
    {
        "symbol": "mongo::UpdateDriver::modOptions() const", 
        "object": "src/mongo/db/ops/update_driver.cpp", 
        "used_by": [
            "src/mongo/db/ops/update.cpp"
        ]
    }, 
    {
        "symbol": "mongo::UpdateDriver::makeOplogEntryQuery(mongo::BSONObj const&, bool) const", 
        "object": "src/mongo/db/ops/update_driver.cpp", 
        "used_by": [
            "src/mongo/db/ops/update.cpp", 
            "src/mongo/db/auth/authz_manager_external_state_mock.cpp"
        ]
    }, 
    {
        "symbol": "mongo::UpdateDriver::setLogOp(bool)", 
        "object": "src/mongo/db/ops/update_driver.cpp", 
        "used_by": [
            "src/mongo/db/ops/update.cpp"
        ]
    }, 
    {
        "symbol": "mongo::UpdateDriver::isDocReplacement() const", 
        "object": "src/mongo/db/ops/update_driver.cpp", 
        "used_by": [
            "src/mongo/db/ops/update.cpp"
        ]
    }, 
    {
        "symbol": "mongo::UpdateDriver::refreshIndexKeys(mongo::IndexPathSet const&)", 
        "object": "src/mongo/db/ops/update_driver.cpp", 
        "used_by": [
            "src/mongo/db/ops/update.cpp"
        ]
    }, 
    {
        "symbol": "mongo::UpdateDriver::UpdateDriver(mongo::UpdateDriver::Options const&)", 
        "object": "src/mongo/db/ops/update_driver.cpp", 
        "used_by": [
            "src/mongo/db/auth/role_graph_update.cpp", 
            "src/mongo/db/ops/update.cpp", 
            "src/mongo/db/auth/authz_manager_external_state_mock.cpp", 
            "src/mongo/db/instance.cpp"
        ]
    }, 
    {
        "symbol": "mongo::UpdateDriver::parse(mongo::BSONObj const&)", 
        "object": "src/mongo/db/ops/update_driver.cpp", 
        "used_by": [
            "src/mongo/db/auth/role_graph_update.cpp", 
            "src/mongo/db/ops/update.cpp", 
            "src/mongo/db/auth/authz_manager_external_state_mock.cpp", 
            "src/mongo/db/instance.cpp"
        ]
    }, 
    {
        "symbol": "mongo::UpdateDriver::setContext(mongo::ModifierInterface::ExecInfo::UpdateContext)", 
        "object": "src/mongo/db/ops/update_driver.cpp", 
        "used_by": [
            "src/mongo/db/ops/update.cpp"
        ]
    }, 
    {
        "symbol": "mongo::UpdateDriver::populateDocumentWithQueryFields(mongo::BSONObj const&, mongo::mutablebson::Document&) const", 
        "object": "src/mongo/db/ops/update_driver.cpp", 
        "used_by": [
            "src/mongo/db/auth/role_graph_update.cpp", 
            "src/mongo/db/auth/authz_manager_external_state_mock.cpp"
        ]
    }, 
    {
        "symbol": "mongo::UpdateDriver::update(mongo::StringData const&, mongo::mutablebson::Document*, mongo::BSONObj*, mongo::FieldRefSet*)", 
        "object": "src/mongo/db/ops/update_driver.cpp", 
        "used_by": [
            "src/mongo/db/auth/role_graph_update.cpp", 
            "src/mongo/db/ops/update.cpp", 
            "src/mongo/db/auth/authz_manager_external_state_mock.cpp"
        ]
    }
]