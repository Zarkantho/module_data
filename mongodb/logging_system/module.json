{
    "groups": [
        {
            "files": [
                "src/mongo/util/log.cpp",
                "src/mongo/util/log.h",
                "src/mongo/logger/appender.h",
                "src/mongo/logger/console.cpp",
                "src/mongo/logger/console.h",
                "src/mongo/logger/console_appender.h",
                "src/mongo/logger/encoder.h",
                "src/mongo/logger/labeled_level.h",
                "src/mongo/logger/log_domain-impl.h",
                "src/mongo/logger/log_domain.h",
                "src/mongo/logger/log_manager.cpp",
                "src/mongo/logger/log_manager.h",
                "src/mongo/logger/log_severity-inl.h",
                "src/mongo/logger/log_severity.cpp",
                "src/mongo/logger/log_severity.h",
                "src/mongo/logger/log_test.cpp",
                "src/mongo/logger/logger.cpp",
                "src/mongo/logger/logger.h",
                "src/mongo/logger/logstream_builder.cpp",
                "src/mongo/logger/logstream_builder.h",
                "src/mongo/logger/message_event.h",
                "src/mongo/logger/message_event_utf8_encoder.cpp",
                "src/mongo/logger/message_event_utf8_encoder.h",
                "src/mongo/logger/message_log_domain.cpp",
                "src/mongo/logger/message_log_domain.h",
                "src/mongo/logger/ramlog.cpp",
                "src/mongo/logger/ramlog.h",
                "src/mongo/logger/rotatable_file_appender.h",
                "src/mongo/logger/rotatable_file_manager.cpp",
                "src/mongo/logger/rotatable_file_manager.h",
                "src/mongo/logger/rotatable_file_writer.cpp",
                "src/mongo/logger/rotatable_file_writer.h",
                "src/mongo/logger/rotatable_file_writer_test.cpp",
                "src/mongo/logger/syslog_appender.h",
                "src/mongo/logger/tee.h"
            ],
            "comments": "## jesus, i hope this becomes a library :)## can you say a bit about what kind of logging we do? is there any sort of## ordering or atomicity (maybe per-call-to-log, or per log line?) our## logging guarantees? 'log lines are emitted in-order with respect to each## process thread?' maybe?)# Logging system (NOTE: The first two actually aren't part of the \"logger\" library, but I see no# reason why they should not be)"
        },
        {
            "files": [
                "src/mongo/db/log_process_details.cpp",
                "src/mongo/db/log_process_details.h"
            ],
            "comments": "# Helpers to dump a bunch of information about the current process## at crash time only? at any time? can you give an example of when## this is used?"
        },
        {
            "files": [
                "src/mongo/db/server_extra_log_context.cpp"
            ],
            "comments": "# MONGO_INITIALIZERs to add extra information to the server logs."
        }
    ],
    "title": "logging_system"
}