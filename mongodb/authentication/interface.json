[
    {
        "symbol": "mongo::ActionSet::addAction(mongo::ActionType const&)", 
        "object": "src/mongo/db/auth/action_set.cpp", 
        "used_by": [
            "src/mongo/db/commands/index_stats.cpp", 
            "src/mongo/db/repl/heartbeat.cpp", 
            "src/mongo/db/repl/consensus.cpp", 
            "src/mongo/db/commands/dbhash.cpp", 
            "src/mongo/db/commands/rename_collection_common.cpp", 
            "src/mongo/db/cloner.cpp", 
            "src/mongo/db/dbcommands_generic.cpp", 
            "src/mongo/db/commands/find_and_modify_common.cpp", 
            "src/mongo/db/commands/drop_indexes.cpp", 
            "src/mongo/db/exec/stagedebug_cmd.cpp", 
            "src/mongo/db/commands/validate.cpp", 
            "src/mongo/s/d_writeback.cpp", 
            "src/mongo/db/commands/touch.cpp", 
            "src/mongo/db/commands/fsync.cpp", 
            "src/mongo/db/repl/resync.cpp", 
            "src/mongo/db/commands/copydb_common.cpp", 
            "src/mongo/db/clientcursor.cpp", 
            "src/mongo/db/geo/haystack.cpp", 
            "src/mongo/db/commands/mr_common.cpp", 
            "src/mongo/s/d_state.cpp", 
            "src/mongo/db/dbcommands.cpp", 
            "src/mongo/s/d_migrate.cpp", 
            "src/mongo/s/shardconnection.cpp", 
            "src/mongo/db/commands.cpp", 
            "src/mongo/s/commands_public.cpp", 
            "src/mongo/db/commands/compact.cpp", 
            "src/mongo/db/client.cpp", 
            "src/mongo/db/commands/collection_to_capped.cpp", 
            "src/mongo/db/commands/write_commands/write_commands_common.cpp", 
            "src/mongo/s/d_split.cpp", 
            "src/mongo/db/commands/geonear.cpp", 
            "src/mongo/db/repl/replset_commands.cpp", 
            "src/mongo/s/commands_admin.cpp", 
            "src/mongo/s/shard.cpp", 
            "src/mongo/s/cursors.cpp", 
            "src/mongo/db/stats/top.cpp", 
            "src/mongo/db/repl/rs_initiate.cpp", 
            "src/mongo/db/commands/server_status.cpp", 
            "src/mongo/db/commands/shutdown.cpp", 
            "src/mongo/db/fts/fts_command.cpp", 
            "src/mongo/db/pipeline/pipeline.cpp", 
            "src/mongo/db/commands/storage_details.cpp", 
            "src/mongo/db/commands/mr.cpp", 
            "src/mongo/db/commands/distinct.cpp", 
            "src/mongo/db/commands/parameters.cpp"
        ]
    }, 
    {
        "symbol": "mongo::ActionSet::removeAllActions()", 
        "object": "src/mongo/db/auth/action_set.cpp", 
        "used_by": [
            "src/mongo/db/commands/copydb_common.cpp", 
            "src/mongo/db/commands/rename_collection_common.cpp"
        ]
    }, 
    {
        "symbol": "mongo::authindex::createSystemIndexes(mongo::NamespaceString const&)", 
        "object": "src/mongo/db/auth/auth_index_d.cpp", 
        "used_by": [
            "src/mongo/db/catalog/database.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::updateAuthzDocuments(mongo::NamespaceString const&, mongo::BSONObj const&, mongo::BSONObj const&, bool, bool, mongo::BSONObj const&, int*) const", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::internalSecurity", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/authentication_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::ROLE_NAME_FIELD_NAME", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::schemaVersion26Final", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::updateRoleDocument(mongo::RoleName const&, mongo::BSONObj const&, mongo::BSONObj const&) const", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::logOp(char const*, char const*, mongo::BSONObj const&, mongo::BSONObj*, bool*)", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/repl/oplog.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::rolesCollectionNamespace", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::invalidateUsersFromDB(std::string const&)", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::releaseUser(mongo::User*)", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/authentication_commands.cpp", 
            "src/mongo/db/commands/user_management_commands.cpp", 
            "src/mongo/db/dbwebserver.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::getBSONForPrivileges(std::vector<mongo::Privilege, std::allocator<mongo::Privilege> > const&, mongo::mutablebson::Element)", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::removePrivilegeDocuments(mongo::BSONObj const&, mongo::BSONObj const&, int*) const", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::writeAuthSchemaVersionIfNeeded()", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::queryAuthzDocument(mongo::NamespaceString const&, mongo::BSONObj const&, mongo::BSONObj const&, boost::function<void (mongo::BSONObj const&)> const&)", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::getRoleDescription(mongo::RoleName const&, bool, mongo::BSONObj*)", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::acquireUser(mongo::UserName const&, mongo::User**)", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/authentication_commands.cpp", 
            "src/mongo/db/commands/user_management_commands.cpp", 
            "src/mongo/db/dbwebserver.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::upgradeSchema(int, mongo::BSONObj const&)", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/s/commands/auth_schema_upgrade_s.cpp", 
            "src/mongo/db/commands/auth_schema_upgrade_d.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::AuthorizationManager(mongo::AuthzManagerExternalState*)", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/s/server.cpp", 
            "src/mongo/tools/tool.cpp", 
            "src/mongo/dbtests/dbtests.cpp", 
            "src/mongo/db/db.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::getUserDescription(mongo::UserName const&, mongo::BSONObj*)", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::ROLE_SOURCE_FIELD_NAME", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::removeRoleDocuments(mongo::BSONObj const&, mongo::BSONObj const&, int*) const", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::hasAnyPrivilegeDocuments() const", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/restapi.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::isAuthEnabled() const", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands.cpp", 
            "src/mongo/db/repl/heartbeat.cpp", 
            "src/mongo/db/repl/consensus.cpp", 
            "src/mongo/db/commands/isself.cpp", 
            "src/mongo/s/shard.cpp", 
            "src/mongo/db/db.cpp", 
            "src/mongo/db/repl/sync_source_feedback.cpp", 
            "src/mongo/db/repl/oplogreader.cpp", 
            "src/mongo/db/commands/auth_schema_upgrade_d.cpp", 
            "src/mongo/db/repl/manager.cpp", 
            "src/mongo/db/repl/rs_config.cpp", 
            "src/mongo/s/d_migrate.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::invalidateUserCache()", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::schemaVersion26Upgrade", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::insertRoleDocument(mongo::BSONObj const&, mongo::BSONObj const&) const", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::updatePrivilegeDocument(mongo::UserName const&, mongo::BSONObj const&, mongo::BSONObj const&) const", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::setAuthEnabled(bool)", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/initialize_server_global_state.cpp", 
            "src/mongo/db/mongod_options.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::invalidateUserByName(mongo::UserName const&)", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::getRoleDescriptionsForDB(std::string, bool, bool, std::vector<mongo::BSONObj, std::allocator<mongo::BSONObj> >*)", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::initialize()", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/s/server.cpp", 
            "src/mongo/db/repl/rs_rollback.cpp", 
            "src/mongo/db/db.cpp", 
            "src/mongo/db/repl/rs_initialsync.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::insertPrivilegeDocument(std::string const&, mongo::BSONObj const&, mongo::BSONObj const&) const", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::USER_DB_FIELD_NAME", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/introspect.cpp", 
            "src/mongo/db/commands/user_management_commands.cpp", 
            "src/mongo/db/commands/connection_status.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::usersCollectionNamespace", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::getAuthorizationVersion()", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationManager::USER_NAME_FIELD_NAME", 
        "object": "src/mongo/db/auth/authorization_manager.cpp", 
        "used_by": [
            "src/mongo/db/introspect.cpp", 
            "src/mongo/db/commands/user_management_commands.cpp", 
            "src/mongo/db/commands/connection_status.cpp"
        ]
    }, 
    {
        "symbol": "mongo::getGlobalAuthorizationManager()", 
        "object": "src/mongo/db/auth/authorization_manager_global.cpp", 
        "used_by": [
            "src/mongo/db/commands/authentication_commands.cpp", 
            "src/mongo/db/repl/heartbeat.cpp", 
            "src/mongo/db/repl/consensus.cpp", 
            "src/mongo/db/mongod_options.cpp", 
            "src/mongo/db/repl/rs_rollback.cpp", 
            "src/mongo/db/commands/auth_schema_upgrade_d.cpp", 
            "src/mongo/s/server.cpp", 
            "src/mongo/db/repl/sync_source_feedback.cpp", 
            "src/mongo/s/s_only.cpp", 
            "src/mongo/db/repl/rs_initialsync.cpp", 
            "src/mongo/db/repl/manager.cpp", 
            "src/mongo/db/commands/isself.cpp", 
            "src/mongo/db/client.cpp", 
            "src/mongo/s/commands/auth_schema_upgrade_s.cpp", 
            "src/mongo/db/commands/user_management_commands.cpp", 
            "src/mongo/db/repl/oplog.cpp", 
            "src/mongo/db/repl/rs_config.cpp", 
            "src/mongo/s/d_migrate.cpp", 
            "src/mongo/s/client_info.cpp", 
            "src/mongo/db/initialize_server_global_state.cpp", 
            "src/mongo/s/shard.cpp", 
            "src/mongo/db/db.cpp", 
            "src/mongo/db/repl/oplogreader.cpp"
        ]
    }, 
    {
        "symbol": "mongo::setGlobalAuthorizationManager(mongo::AuthorizationManager*)", 
        "object": "src/mongo/db/auth/authorization_manager_global.cpp", 
        "used_by": [
            "src/mongo/tools/tool.cpp", 
            "src/mongo/db/db.cpp", 
            "src/mongo/s/server.cpp", 
            "src/mongo/dbtests/dbtests.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::startRequest()", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/s/request.cpp", 
            "src/mongo/db/instance.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::grantInternalAuthorization()", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/commands/authentication_commands.cpp", 
            "src/mongo/db/ttl.cpp", 
            "src/mongo/db/dbwebserver.cpp", 
            "src/mongo/db/repl/write_concern.cpp", 
            "src/mongo/db/index_rebuilder.cpp", 
            "src/mongo/db/repl/rs.cpp", 
            "src/mongo/s/d_migrate.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::isAuthenticatedAsUserWithRole(mongo::RoleName const&)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::lookupUser(mongo::UserName const&)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::isAuthorizedForActionsOnResource(mongo::ResourcePattern const&, mongo::ActionSet const&)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/commands/copydb_common.cpp", 
            "src/mongo/db/cloner.cpp", 
            "src/mongo/db/commands/rename_collection_common.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::isAuthorizedForPrivileges(std::vector<mongo::Privilege, std::allocator<mongo::Privilege> > const&)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/commands.cpp", 
            "src/mongo/db/commands/write_commands/write_commands_common.cpp", 
            "src/mongo/db/commands/server_status.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::getAuthorizationManager()", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/commands.cpp", 
            "src/mongo/db/dbwebserver.cpp", 
            "src/mongo/db/restapi.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::checkAuthorizedToRevokePrivilege(mongo::Privilege const&)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::setImpersonatedUserNames(std::vector<mongo::UserName, std::allocator<mongo::UserName> > const&)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/dbcommands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::AuthorizationSession(mongo::AuthzSessionExternalState*)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/client.cpp", 
            "src/mongo/s/client_info.cpp", 
            "src/mongo/s/s_only.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::getAuthenticatedUserNamesToken()", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/matcher/expression_where.cpp", 
            "src/mongo/db/commands/mr.cpp", 
            "src/mongo/db/dbeval.cpp", 
            "src/mongo/db/commands/group.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::isAuthorizedToChangeOwnPasswordAsUser(mongo::UserName const&)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::getAuthenticatedUserNames()", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/commands/connection_status.cpp", 
            "src/mongo/db/server_extra_log_context.cpp", 
            "src/mongo/db/introspect.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::logoutDatabase(std::string const&)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/commands/authentication_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::checkAuthForQuery(mongo::NamespaceString const&, mongo::BSONObj const&)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/s/strategy.cpp", 
            "src/mongo/db/instance.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::checkAuthForInsert(mongo::NamespaceString const&, mongo::BSONObj const&)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/instance.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::checkAuthForGetMore(mongo::NamespaceString const&, long long)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/s/strategy.cpp", 
            "src/mongo/db/instance.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::isAuthorizedToRevokeRole(mongo::RoleName const&)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::isAuthorizedToGrantRole(mongo::RoleName const&)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::isAuthorizedForActionsOnResource(mongo::ResourcePattern const&, mongo::ActionType)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/s/commands_public.cpp", 
            "src/mongo/s/commands_admin.cpp", 
            "src/mongo/db/commands/merge_chunks_cmd.cpp", 
            "src/mongo/s/strategy.cpp", 
            "src/mongo/db/commands/rename_collection_common.cpp", 
            "src/mongo/s/commands/cluster_plan_cache_cmd.cpp", 
            "src/mongo/s/commands/cluster_hint_cmd.cpp", 
            "src/mongo/db/commands/hint_commands.cpp", 
            "src/mongo/db/commands/oplog_note.cpp", 
            "src/mongo/db/commands/plan_cache_commands.cpp", 
            "src/mongo/db/instance.cpp", 
            "src/mongo/s/d_state.cpp", 
            "src/mongo/db/commands/user_management_commands.cpp", 
            "src/mongo/db/dbcommands.cpp", 
            "src/mongo/s/commands/cluster_merge_chunks_cmd.cpp", 
            "src/mongo/db/commands/cleanup_orphaned_cmd.cpp", 
            "src/mongo/s/d_split.cpp", 
            "src/mongo/s/d_migrate.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::~AuthorizationSession()", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/client_basic.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::isAuthorizedForActionsOnNamespace(mongo::NamespaceString const&, mongo::ActionSet const&)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/commands/copydb_common.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::checkAuthForDelete(mongo::NamespaceString const&, mongo::BSONObj const&)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/instance.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::checkAuthForUpdate(mongo::NamespaceString const&, mongo::BSONObj const&, mongo::BSONObj const&, bool)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/instance.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::isImpersonating() const", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/dbcommands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::isAuthorizedForActionsOnNamespace(mongo::NamespaceString const&, mongo::ActionType)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/clientcursor.cpp", 
            "src/mongo/s/cursors.cpp", 
            "src/mongo/db/commands/group.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::checkAuthorizedToGrantPrivilege(mongo::Privilege const&)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::addAndAuthorizeUser(mongo::UserName const&)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/commands/authentication_commands.cpp", 
            "src/mongo/db/dbwebserver.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::clearImpersonatedUserNames()", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/dbcommands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthorizationSession::isAuthorizedToChangeOwnCustomDataAsUser(mongo::UserName const&)", 
        "object": "src/mongo/db/auth/authorization_session.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthzDocumentsUpdateGuard::tryLock(mongo::StringData const&)", 
        "object": "src/mongo/db/auth/authz_documents_update_guard.cpp", 
        "used_by": [
            "src/mongo/s/commands/auth_schema_upgrade_s.cpp", 
            "src/mongo/db/commands/user_management_commands.cpp", 
            "src/mongo/db/commands/auth_schema_upgrade_d.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthzDocumentsUpdateGuard::~AuthzDocumentsUpdateGuard()", 
        "object": "src/mongo/db/auth/authz_documents_update_guard.cpp", 
        "used_by": [
            "src/mongo/s/commands/auth_schema_upgrade_s.cpp", 
            "src/mongo/db/commands/user_management_commands.cpp", 
            "src/mongo/db/commands/auth_schema_upgrade_d.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthzDocumentsUpdateGuard::AuthzDocumentsUpdateGuard(mongo::AuthorizationManager*)", 
        "object": "src/mongo/db/auth/authz_documents_update_guard.cpp", 
        "used_by": [
            "src/mongo/s/commands/auth_schema_upgrade_s.cpp", 
            "src/mongo/db/commands/user_management_commands.cpp", 
            "src/mongo/db/commands/auth_schema_upgrade_d.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthzManagerExternalStateMongod::AuthzManagerExternalStateMongod()", 
        "object": "src/mongo/db/auth/authz_manager_external_state_d.cpp", 
        "used_by": [
            "src/mongo/db/db.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthzManagerExternalStateMock::AuthzManagerExternalStateMock()", 
        "object": "src/mongo/db/auth/authz_manager_external_state_mock.cpp", 
        "used_by": [
            "src/mongo/tools/tool.cpp", 
            "src/mongo/dbtests/dbtests.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthzManagerExternalStateMongos::AuthzManagerExternalStateMongos()", 
        "object": "src/mongo/db/auth/authz_manager_external_state_s.cpp", 
        "used_by": [
            "src/mongo/s/server.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthzSessionExternalStateMongod::AuthzSessionExternalStateMongod(mongo::AuthorizationManager*)", 
        "object": "src/mongo/db/auth/authz_session_external_state_d.cpp", 
        "used_by": [
            "src/mongo/db/client.cpp"
        ]
    }, 
    {
        "symbol": "mongo::AuthzSessionExternalStateMongos::AuthzSessionExternalStateMongos(mongo::AuthorizationManager*)", 
        "object": "src/mongo/db/auth/authz_session_external_state_s.cpp", 
        "used_by": [
            "src/mongo/s/client_info.cpp", 
            "src/mongo/s/s_only.cpp"
        ]
    }, 
    {
        "symbol": "mongo::MongoAuthenticationSession::MongoAuthenticationSession(unsigned long long)", 
        "object": "src/mongo/db/auth/mongo_authentication_session.cpp", 
        "used_by": [
            "src/mongo/db/commands/authentication_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::Privilege::addPrivilegeToPrivilegeVector(std::vector<mongo::Privilege, std::allocator<mongo::Privilege> >*, mongo::Privilege const&)", 
        "object": "src/mongo/db/auth/privilege.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::Privilege::Privilege(mongo::ResourcePattern const&, mongo::ActionSet const&)", 
        "object": "src/mongo/db/auth/privilege.cpp", 
        "used_by": [
            "src/mongo/db/commands/index_stats.cpp", 
            "src/mongo/db/repl/heartbeat.cpp", 
            "src/mongo/db/repl/consensus.cpp", 
            "src/mongo/db/commands/dbhash.cpp", 
            "src/mongo/db/dbcommands_generic.cpp", 
            "src/mongo/db/commands/find_and_modify_common.cpp", 
            "src/mongo/db/commands/drop_indexes.cpp", 
            "src/mongo/db/exec/stagedebug_cmd.cpp", 
            "src/mongo/db/commands/validate.cpp", 
            "src/mongo/s/d_writeback.cpp", 
            "src/mongo/db/commands/touch.cpp", 
            "src/mongo/db/commands/fsync.cpp", 
            "src/mongo/db/repl/resync.cpp", 
            "src/mongo/db/geo/haystack.cpp", 
            "src/mongo/db/commands/mr_common.cpp", 
            "src/mongo/s/d_state.cpp", 
            "src/mongo/db/commands/storage_details.cpp", 
            "src/mongo/db/dbcommands.cpp", 
            "src/mongo/s/d_migrate.cpp", 
            "src/mongo/s/shardconnection.cpp", 
            "src/mongo/db/commands.cpp", 
            "src/mongo/s/commands_public.cpp", 
            "src/mongo/db/commands/compact.cpp", 
            "src/mongo/db/client.cpp", 
            "src/mongo/db/commands/collection_to_capped.cpp", 
            "src/mongo/db/commands/write_commands/write_commands_common.cpp", 
            "src/mongo/s/d_split.cpp", 
            "src/mongo/db/commands/geonear.cpp", 
            "src/mongo/db/repl/replset_commands.cpp", 
            "src/mongo/s/commands_admin.cpp", 
            "src/mongo/s/shard.cpp", 
            "src/mongo/s/cursors.cpp", 
            "src/mongo/db/stats/top.cpp", 
            "src/mongo/db/repl/rs_initiate.cpp", 
            "src/mongo/db/commands/server_status.cpp", 
            "src/mongo/db/commands/shutdown.cpp", 
            "src/mongo/db/fts/fts_command.cpp", 
            "src/mongo/db/pipeline/pipeline.cpp", 
            "src/mongo/db/clientcursor.cpp", 
            "src/mongo/db/commands/mr.cpp", 
            "src/mongo/db/commands/distinct.cpp", 
            "src/mongo/db/commands/parameters.cpp"
        ]
    }, 
    {
        "symbol": "mongo::Privilege::removeActions(mongo::ActionSet const&)", 
        "object": "src/mongo/db/auth/privilege.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::Privilege::Privilege(mongo::ResourcePattern const&, mongo::ActionType const&)", 
        "object": "src/mongo/db/auth/privilege.cpp", 
        "used_by": [
            "src/mongo/s/commands_public.cpp", 
            "src/mongo/db/commands/mr_common.cpp", 
            "src/mongo/db/dbcommands.cpp", 
            "src/mongo/db/pipeline/pipeline.cpp", 
            "src/mongo/db/commands/write_commands/write_commands_common.cpp"
        ]
    }, 
    {
        "symbol": "mongo::ParsedPrivilege::toBSON() const", 
        "object": "src/mongo/db/auth/privilege_parser.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::ParsedPrivilege::ParsedPrivilege()", 
        "object": "src/mongo/db/auth/privilege_parser.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::ParsedPrivilege::isValid(std::string*) const", 
        "object": "src/mongo/db/auth/privilege_parser.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::ParsedPrivilege::~ParsedPrivilege()", 
        "object": "src/mongo/db/auth/privilege_parser.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::ParsedPrivilege::privilegeToParsedPrivilege(mongo::Privilege const&, mongo::ParsedPrivilege*, std::string*)", 
        "object": "src/mongo/db/auth/privilege_parser.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::ResourcePattern::toString() const", 
        "object": "src/mongo/db/auth/resource_pattern.cpp", 
        "used_by": [
            "src/mongo/db/commands/mr_common.cpp", 
            "src/mongo/db/commands/find_and_modify_common.cpp", 
            "src/mongo/db/pipeline/pipeline.cpp"
        ]
    }, 
    {
        "symbol": "mongo::RoleGraph::isBuiltinRole(mongo::RoleName const&)", 
        "object": "src/mongo/db/auth/role_graph_builtin_roles.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::RoleGraph::generateUniversalPrivileges(std::vector<mongo::Privilege, std::allocator<mongo::Privilege> >*)", 
        "object": "src/mongo/db/auth/role_graph_builtin_roles.cpp", 
        "used_by": [
            "src/mongo/s/commands_public.cpp", 
            "src/mongo/db/dbeval.cpp", 
            "src/mongo/db/commands/apply_ops.cpp"
        ]
    }, 
    {
        "symbol": "mongo::RoleName::RoleName(mongo::StringData const&, mongo::StringData const&)", 
        "object": "src/mongo/db/auth/role_name.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::isInternalAuthSet()", 
        "object": "src/mongo/db/auth/security_key.cpp", 
        "used_by": [
            "src/mongo/db/repl/oplogreader.cpp", 
            "src/mongo/db/repl/sync_source_feedback.cpp", 
            "src/mongo/db/commands/isself.cpp"
        ]
    }, 
    {
        "symbol": "mongo::authenticateInternalUser(mongo::DBClientWithCommands*)", 
        "object": "src/mongo/db/auth/security_key.cpp", 
        "used_by": [
            "src/mongo/db/repl/heartbeat.cpp", 
            "src/mongo/db/repl/consensus.cpp", 
            "src/mongo/db/commands/isself.cpp", 
            "src/mongo/s/shard.cpp", 
            "src/mongo/db/repl/sync_source_feedback.cpp", 
            "src/mongo/db/repl/oplogreader.cpp", 
            "src/mongo/db/commands/auth_schema_upgrade_d.cpp", 
            "src/mongo/db/repl/manager.cpp", 
            "src/mongo/db/repl/rs_config.cpp"
        ]
    }, 
    {
        "symbol": "mongo::setInternalUserAuthParams(mongo::BSONObj)", 
        "object": "src/mongo/db/auth/security_key.cpp", 
        "used_by": [
            "src/mongo/db/initialize_server_global_state.cpp"
        ]
    }, 
    {
        "symbol": "mongo::setUpSecurityKey(std::string const&)", 
        "object": "src/mongo/db/auth/security_key.cpp", 
        "used_by": [
            "src/mongo/db/initialize_server_global_state.cpp"
        ]
    }, 
    {
        "symbol": "mongo::User::getRoles() const", 
        "object": "src/mongo/db/auth/user.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::User::getCredentials() const", 
        "object": "src/mongo/db/auth/user.cpp", 
        "used_by": [
            "src/mongo/db/commands/authentication_commands.cpp", 
            "src/mongo/db/dbwebserver.cpp"
        ]
    }, 
    {
        "symbol": "mongo::User::getName() const", 
        "object": "src/mongo/db/auth/user.cpp", 
        "used_by": [
            "src/mongo/db/commands/authentication_commands.cpp"
        ]
    }, 
    {
        "symbol": "vtable for mongo::UserCacheInvalidator", 
        "object": "src/mongo/db/auth/user_cache_invalidator_job.cpp", 
        "used_by": [
            "src/mongo/s/server.cpp"
        ]
    }, 
    {
        "symbol": "mongo::V2UserDocumentParser::checkValidUserDocument(mongo::BSONObj const&) const", 
        "object": "src/mongo/db/auth/user_document_parser.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp", 
            "src/mongo/db/catalog/collection.cpp"
        ]
    }, 
    {
        "symbol": "mongo::auth::parseDropRoleCommand(mongo::BSONObj const&, std::string const&, mongo::RoleName*, mongo::BSONObj*)", 
        "object": "src/mongo/db/auth/user_management_commands_parser.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::auth::parseRoleNamesFromBSONArray(mongo::BSONArray const&, mongo::StringData const&, std::vector<mongo::RoleName, std::allocator<mongo::RoleName> >*)", 
        "object": "src/mongo/db/auth/user_management_commands_parser.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::auth::parseAuthSchemaUpgradeStepCommand(mongo::BSONObj const&, std::string const&, int*, bool*, mongo::BSONObj*)", 
        "object": "src/mongo/db/auth/user_management_commands_parser.cpp", 
        "used_by": [
            "src/mongo/s/commands/auth_schema_upgrade_s.cpp", 
            "src/mongo/db/commands/auth_schema_upgrade_d.cpp"
        ]
    }, 
    {
        "symbol": "mongo::auth::parseCreateOrUpdateUserCommands(mongo::BSONObj const&, mongo::StringData const&, std::string const&, mongo::auth::CreateOrUpdateUserArgs*)", 
        "object": "src/mongo/db/auth/user_management_commands_parser.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::auth::parseAndValidateDropUserCommand(mongo::BSONObj const&, std::string const&, mongo::UserName*, mongo::BSONObj*)", 
        "object": "src/mongo/db/auth/user_management_commands_parser.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::auth::parseDropAllRolesFromDatabaseCommand(mongo::BSONObj const&, std::string const&, mongo::BSONObj*)", 
        "object": "src/mongo/db/auth/user_management_commands_parser.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::auth::parseRolesInfoCommand(mongo::BSONObj const&, mongo::StringData const&, mongo::auth::RolesInfoArgs*)", 
        "object": "src/mongo/db/auth/user_management_commands_parser.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::auth::parseUsersInfoCommand(mongo::BSONObj const&, mongo::StringData const&, mongo::auth::UsersInfoArgs*)", 
        "object": "src/mongo/db/auth/user_management_commands_parser.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::auth::parseAndValidateRolePrivilegeManipulationCommands(mongo::BSONObj const&, mongo::StringData const&, std::string const&, mongo::RoleName*, std::vector<mongo::Privilege, std::allocator<mongo::Privilege> >*, mongo::BSONObj*)", 
        "object": "src/mongo/db/auth/user_management_commands_parser.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::auth::parseAndValidateDropAllUsersFromDatabaseCommand(mongo::BSONObj const&, std::string const&, mongo::BSONObj*)", 
        "object": "src/mongo/db/auth/user_management_commands_parser.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::auth::parseRolePossessionManipulationCommands(mongo::BSONObj const&, mongo::StringData const&, std::string const&, std::string*, std::vector<mongo::RoleName, std::allocator<mongo::RoleName> >*, mongo::BSONObj*)", 
        "object": "src/mongo/db/auth/user_management_commands_parser.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::auth::parseCreateOrUpdateRoleCommands(mongo::BSONObj const&, mongo::StringData const&, std::string const&, mongo::auth::CreateOrUpdateRoleArgs*)", 
        "object": "src/mongo/db/auth/user_management_commands_parser.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::auth::parseAndValidatePrivilegeArray(mongo::BSONArray const&, std::vector<mongo::Privilege, std::allocator<mongo::Privilege> >*)", 
        "object": "src/mongo/db/auth/user_management_commands_parser.cpp", 
        "used_by": [
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }, 
    {
        "symbol": "mongo::UserName::UserName(mongo::StringData const&, mongo::StringData const&)", 
        "object": "src/mongo/db/auth/user_name.cpp", 
        "used_by": [
            "src/mongo/db/commands/authentication_commands.cpp", 
            "src/mongo/db/dbwebserver.cpp", 
            "src/mongo/db/commands/user_management_commands.cpp"
        ]
    }
]