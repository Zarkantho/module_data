module_title: S2
module_name: s2
module_description: Third Party - Google spherical geometry math library
module_groups:
-   group_title: S2 Library
    group_description: Third Party - Google spherical geometry math library
    group_files:
    - src/third_party/s2/base/basictypes.h
    - src/third_party/s2/base/casts.h
    - src/third_party/s2/base/definer.h
    - src/third_party/s2/base/int128.cc
    - src/third_party/s2/base/int128.h
    - src/third_party/s2/base/integral_types.h
    - src/third_party/s2/base/logging.cc
    - src/third_party/s2/base/logging.h
    - src/third_party/s2/base/macros.h
    - src/third_party/s2/base/port.h
    - src/third_party/s2/base/scoped_ptr.h
    - src/third_party/s2/base/stringprintf.cc
    - src/third_party/s2/base/stringprintf.h
    - src/third_party/s2/base/strtoint.cc
    - src/third_party/s2/base/strtoint.h
    - src/third_party/s2/base/template_util.h
    - src/third_party/s2/base/type_traits.h
    - src/third_party/s2/hash.h
    - src/third_party/s2/r1interval.h
    - src/third_party/s2/s1angle.cc
    - src/third_party/s2/s1angle.h
    - src/third_party/s2/s1interval.cc
    - src/third_party/s2/s1interval.h
    - src/third_party/s2/s2.cc
    - src/third_party/s2/s2.h
    - src/third_party/s2/s2cap.cc
    - src/third_party/s2/s2cap.h
    - src/third_party/s2/s2cell.cc
    - src/third_party/s2/s2cell.h
    - src/third_party/s2/s2cellid.cc
    - src/third_party/s2/s2cellid.h
    - src/third_party/s2/s2cellunion.cc
    - src/third_party/s2/s2cellunion.h
    - src/third_party/s2/s2edgeindex.cc
    - src/third_party/s2/s2edgeindex.h
    - src/third_party/s2/s2edgeutil.cc
    - src/third_party/s2/s2edgeutil.h
    - src/third_party/s2/s2latlng.cc
    - src/third_party/s2/s2latlng.h
    - src/third_party/s2/s2latlngrect.cc
    - src/third_party/s2/s2latlngrect.h
    - src/third_party/s2/s2loop.cc
    - src/third_party/s2/s2loop.h
    - src/third_party/s2/s2pointregion.cc
    - src/third_party/s2/s2pointregion.h
    - src/third_party/s2/s2polygon.cc
    - src/third_party/s2/s2polygon.h
    - src/third_party/s2/s2polygonbuilder.cc
    - src/third_party/s2/s2polygonbuilder.h
    - src/third_party/s2/s2polyline.cc
    - src/third_party/s2/s2polyline.h
    - src/third_party/s2/s2r2rect.cc
    - src/third_party/s2/s2r2rect.h
    - src/third_party/s2/s2region.cc
    - src/third_party/s2/s2region.h
    - src/third_party/s2/s2regioncoverer.cc
    - src/third_party/s2/s2regioncoverer.h
    - src/third_party/s2/s2regionintersection.cc
    - src/third_party/s2/s2regionintersection.h
    - src/third_party/s2/s2regionunion.cc
    - src/third_party/s2/s2regionunion.h
    - src/third_party/s2/strings/ascii_ctype.h
    - src/third_party/s2/strings/split.cc
    - src/third_party/s2/strings/split.h
    - src/third_party/s2/strings/stringprintf.cc
    - src/third_party/s2/strings/stringprintf.h
    - src/third_party/s2/strings/strutil.cc
    - src/third_party/s2/strings/strutil.h
    - src/third_party/s2/util/coding/coder.cc
    - src/third_party/s2/util/coding/coder.h
    - src/third_party/s2/util/coding/varint.cc
    - src/third_party/s2/util/coding/varint.h
    - src/third_party/s2/util/endian/endian.h
    - src/third_party/s2/util/hash/hash_jenkins_lookup2.h
    - src/third_party/s2/util/math/exactfloat/exactfloat.h
    - src/third_party/s2/util/math/mathlimits.cc
    - src/third_party/s2/util/math/mathlimits.h
    - src/third_party/s2/util/math/mathutil.cc
    - src/third_party/s2/util/math/mathutil.h
    - src/third_party/s2/util/math/matrix3x3-inl.h
    - src/third_party/s2/util/math/matrix3x3.h
    - src/third_party/s2/util/math/vector2-inl.h
    - src/third_party/s2/util/math/vector2.h
    - src/third_party/s2/util/math/vector3-inl.h
    - src/third_party/s2/util/math/vector3.h
    - src/third_party/s2/util/math/vector4.h
    group_generated_data:
    -   file_name: src/third_party/s2/base/basictypes.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/base/casts.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/base/definer.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/base/int128.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/base/int128.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/base/integral_types.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/base/logging.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2polygonbuilder.cc
            - src/third_party/s2/s2cellunion.cc
            - src/third_party/s2/s1interval.cc
            - src/third_party/s2/s2latlng.cc
            - src/third_party/s2/util/math/mathutil.cc
            - src/third_party/s2/s2regioncoverer.cc
            - src/third_party/s2/s2cell.cc
            - src/mongo/db/geo/s2common.cpp
            - src/third_party/s2/s2cap.cc
            - src/third_party/s2/s2pointregion.cc
            - src/mongo/db/geo/geoparser.cpp
            - src/third_party/s2/s2edgeutil.cc
            - src/third_party/s2/strings/strutil.cc
            - src/third_party/s2/s2cellid.cc
            - src/third_party/s2/s2polyline.cc
            - src/third_party/s2/s2loop.cc
            - src/third_party/s2/s2regionintersection.cc
            - src/mongo/db/index/s2_access_method.cpp
            - src/third_party/s2/strings/stringprintf.cc
            - src/third_party/s2/s2edgeindex.cc
            - src/mongo/db/query/index_bounds_builder.cpp
            - src/third_party/s2/s2.cc
            - src/third_party/s2/util/coding/coder.cc
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2regionunion.cc
            - src/third_party/s2/s2r2rect.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2polygonbuilder.cc
            - src/third_party/s2/s2cellunion.cc
            - src/third_party/s2/s1interval.cc
            - src/third_party/s2/s2latlng.cc
            - src/third_party/s2/util/math/mathutil.cc
            - src/third_party/s2/s2regioncoverer.cc
            - src/third_party/s2/s2cell.cc
            - src/mongo/db/geo/s2common.cpp
            - src/third_party/s2/s2cap.cc
            - src/third_party/s2/s2pointregion.cc
            - src/mongo/db/geo/geoparser.cpp
            - src/third_party/s2/s2edgeutil.cc
            - src/third_party/s2/strings/strutil.cc
            - src/third_party/s2/s2cellid.cc
            - src/third_party/s2/s2polyline.cc
            - src/third_party/s2/s2loop.cc
            - src/third_party/s2/s2regionintersection.cc
            - src/mongo/db/index/s2_access_method.cpp
            - src/third_party/s2/strings/stringprintf.cc
            - src/third_party/s2/s2edgeindex.cc
            - src/mongo/db/query/index_bounds_builder.cpp
            - src/third_party/s2/s2.cc
            - src/third_party/s2/util/coding/coder.cc
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2regionunion.cc
            - src/third_party/s2/s2r2rect.cc
        file_dependencies:
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: mongo::verifyFailed(char const*, char const*, unsigned int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::fassertFailed(int)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: mongo::msgasserted(int, char const*)
            symbol_sources:
            - src/mongo/util/assert_util.cpp
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
    -   file_name: src/third_party/s2/base/logging.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/base/macros.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/base/port.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/base/scoped_ptr.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/base/stringprintf.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: StringPrintf(char const*, ...)
            symbol_uses:
            - src/third_party/s2/strings/stringprintf.cc
            - src/third_party/s2/s2cellid.cc
            - src/third_party/s2/s2latlng.cc
        file_dependencies: []
    -   file_name: src/third_party/s2/base/stringprintf.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/base/strtoint.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: strtou32_adapter(char const*, char**, int)
            symbol_uses:
            - src/third_party/s2/strings/split.cc
        -   symbol_name: strto32_adapter(char const*, char**, int)
            symbol_uses:
            - src/third_party/s2/strings/split.cc
        file_dependencies: []
    -   file_name: src/third_party/s2/base/strtoint.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/base/template_util.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/base/type_traits.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/hash.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/r1interval.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/s1angle.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: operator<<(std::ostream&, S1Angle const&)
            symbol_uses:
            - src/third_party/s2/s2cap.cc
            - src/third_party/s2/s2latlng.cc
        -   symbol_name: S1Angle::S1Angle(Vector3<double> const&, Vector3<double>
                const&)
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/third_party/s2/s2polyline.cc
            - src/third_party/s2/s2edgeutil.cc
        file_dependencies:
        -   symbol_name: S2LatLng::GetDistance(S2LatLng const&) const
            symbol_sources:
            - src/third_party/s2/s2latlng.cc
    -   file_name: src/third_party/s2/s1angle.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/s1interval.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: S1Interval::ApproxEquals(S1Interval const&, double) const
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S1Interval::InteriorIntersects(S1Interval const&) const
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S1Interval::GetDirectedHausdorffDistance(S1Interval const&)
                const
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S1Interval::Intersects(S1Interval const&) const
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S1Interval::FromPoint(double)
            symbol_uses:
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: S1Interval::Contains(S1Interval const&) const
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S1Interval::Contains(double) const
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: S1Interval::Union(S1Interval const&) const
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S1Interval::AddPoint(double)
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S1Interval::InteriorContains(double) const
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S1Interval::Expanded(double) const
            symbol_uses:
            - src/third_party/s2/s2cell.cc
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: S1Interval::GetCenter() const
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S1Interval::GetComplementCenter() const
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S1Interval::Intersection(S1Interval const&) const
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: S1Interval::FromPointPair(double, double)
            symbol_uses:
            - src/third_party/s2/s2cell.cc
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S1Interval::InteriorContains(S1Interval const&) const
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S1Interval::GetLength() const
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2loop.cc
        file_dependencies:
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
    -   file_name: src/third_party/s2/s1interval.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/s2.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: S2::SimpleCCW(Vector3<double> const&, Vector3<double> const&,
                Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2::debug
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: S2::TrueCentroid(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2::kMinWidth
            symbol_uses:
            - src/third_party/s2/s2regioncoverer.cc
            - src/third_party/s2/s2polygonbuilder.cc
            - src/third_party/s2/s2cellunion.cc
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2edgeindex.cc
        -   symbol_name: S2::kPosToIJ
            symbol_uses:
            - src/third_party/s2/s2cell.cc
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2::kAvgEdge
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/index/s2_access_method.cpp
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: S2::OrderedCCW(Vector3<double> const&, Vector3<double> const&,
                Vector3<double> const&, Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2polygonbuilder.cc
            - src/third_party/s2/s2polyline.cc
            - src/third_party/s2/s2loop.cc
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2::kMaxDetError
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2polyline.cc
            - src/third_party/s2/s2loop.cc
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2::Area(Vector3<double> const&, Vector3<double> const&,
                Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2::ExpensiveCCW(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2polyline.cc
            - src/third_party/s2/s2loop.cc
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2::SignedArea(Vector3<double> const&, Vector3<double> const&,
                Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2::TurnAngle(Vector3<double> const&, Vector3<double> const&,
                Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2::kMaxCellLevel
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/third_party/s2/s2polygonbuilder.cc
            - src/third_party/s2/s2cellunion.cc
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/index/s2_access_method.cpp
            - src/third_party/s2/s2edgeindex.cc
            - src/mongo/db/query/index_bounds_builder.cpp
            - src/third_party/s2/s2regioncoverer.cc
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: std::tr1::hash<Vector3<double> >::operator()(Vector3<double>
                const&) const
            symbol_uses:
            - src/third_party/s2/s2polygonbuilder.cc
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2::ApproxEquals(Vector3<double> const&, Vector3<double>
                const&, double)
            symbol_uses:
            - src/third_party/s2/s2polyline.cc
            - src/third_party/s2/s2cap.cc
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2::RobustCCW(Vector3<double> const&, Vector3<double> const&,
                Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2polyline.cc
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2::kSwapMask
            symbol_uses:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2::RobustCrossProd(Vector3<double> const&, Vector3<double>
                const&)
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2polygonbuilder.cc
            - src/third_party/s2/s2loop.cc
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2::kAvgArea
            symbol_uses:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2::IsUnitLength(Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2polyline.cc
            - src/third_party/s2/s2cap.cc
            - src/third_party/s2/s2loop.cc
            - src/third_party/s2/s2pointregion.cc
            - src/third_party/s2/s2cellunion.cc
            - src/third_party/s2/s2edgeutil.cc
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2edgeindex.cc
            - src/third_party/s2/s2cell.cc
            - src/third_party/s2/s2r2rect.cc
        -   symbol_name: S2::GetFrame(Vector3<double> const&, Matrix3x3<double>*)
            symbol_uses:
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: S2::ToFrame(Matrix3x3<double> const&, Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: S2::kPosToOrientation
            symbol_uses:
            - src/third_party/s2/s2cell.cc
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2::Ortho(Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2loop.cc
            - src/third_party/s2/s2edgeutil.cc
        file_dependencies:
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
    -   file_name: src/third_party/s2/s2.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/s2cap.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: S2Cap::GetRectBound() const
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2r2rect.cc
        -   symbol_name: vtable for S2Cap
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/third_party/s2/s2pointregion.cc
            - src/third_party/s2/s2cellunion.cc
            - src/mongo/db/geo/geoparser.cpp
            - src/mongo/db/geo/geoquery.cpp
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2regioncoverer.cc
            - src/third_party/s2/s2cell.cc
            - src/third_party/s2/s2r2rect.cc
        -   symbol_name: S2Cap::AddCap(S2Cap const&)
            symbol_uses:
            - src/third_party/s2/s2cellunion.cc
        -   symbol_name: S2Cap::Complement() const
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
        -   symbol_name: S2Cap::angle() const
            symbol_uses:
            - src/third_party/s2/s2regioncoverer.cc
        -   symbol_name: S2Cap::FromAxisAngle(Vector3<double> const&, S1Angle const&)
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/third_party/s2/s2latlngrect.cc
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2Cap::AddPoint(Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2cell.cc
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2r2rect.cc
        -   symbol_name: S2Cap::MayIntersect(S2Cell const&) const
            symbol_uses:
            - src/mongo/db/geo/geoquery.cpp
        file_dependencies:
        -   symbol_name: S2LatLng::S2LatLng(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2latlng.cc
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2Cell::GetEdgeRaw(int) const
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S2::IsUnitLength(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: typeinfo for S2Region
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2Region::DecodeWithinScope(Decoder*)
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: vtable for S2LatLngRect
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: operator<<(std::ostream&, S1Angle const&)
            symbol_sources:
            - src/third_party/s2/s1angle.cc
        -   symbol_name: S2Cell::GetVertexRaw(int) const
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2::ApproxEquals(Vector3<double> const&, Vector3<double>
                const&, double)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2Cell::Contains(Vector3<double> const&) const
            symbol_sources:
            - src/third_party/s2/s2cell.cc
    -   file_name: src/third_party/s2/s2cap.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/s2cell.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: S2Cell::Subdivide(S2Cell*) const
            symbol_uses:
            - src/third_party/s2/s2regioncoverer.cc
            - src/third_party/s2/s2edgeindex.cc
        -   symbol_name: S2Cell::GetCapBound() const
            symbol_uses:
            - src/third_party/s2/s2cellunion.cc
        -   symbol_name: S2Cell::Init(S2CellId const&)
            symbol_uses:
            - src/third_party/s2/s2regioncoverer.cc
            - src/third_party/s2/s2cellunion.cc
            - src/third_party/s2/s2polygon.cc
            - src/mongo/db/geo/geoparser.cpp
            - src/third_party/s2/s2edgeindex.cc
        -   symbol_name: vtable for S2Cell
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/mongo/db/geo/s2common.cpp
            - src/third_party/s2/s2polygon.cc
            - src/mongo/db/query/query_solution.cpp
            - src/mongo/db/exec/2dnear.cpp
            - src/third_party/s2/s2cellunion.cc
            - src/mongo/db/query/planner_access.cpp
            - src/mongo/db/geo/geoparser.cpp
            - src/mongo/db/geo/geoquery.cpp
            - src/mongo/db/matcher/expression_parser_geo.cpp
            - src/third_party/s2/s2regioncoverer.cc
            - src/mongo/db/query/stage_builder.cpp
            - src/third_party/s2/s2edgeindex.cc
            - src/mongo/db/matcher/expression_geo.cpp
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: S2Cell::AverageArea(int)
            symbol_uses:
            - src/third_party/s2/s2cellunion.cc
        -   symbol_name: S2Cell::MayIntersect(S2Cell const&) const
            symbol_uses:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: S2Cell::ExactArea() const
            symbol_uses:
            - src/third_party/s2/s2cellunion.cc
        -   symbol_name: S2Cell::ApproxArea() const
            symbol_uses:
            - src/third_party/s2/s2cellunion.cc
        -   symbol_name: S2Cell::GetVertexRaw(int) const
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2polyline.cc
            - src/third_party/s2/s2loop.cc
            - src/third_party/s2/s2cap.cc
            - src/third_party/s2/s2edgeindex.cc
        -   symbol_name: S2Cell::GetEdgeRaw(int) const
            symbol_uses:
            - src/third_party/s2/s2cap.cc
        -   symbol_name: S2Cell::GetCenterRaw() const
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2Cell::GetRectBound() const
            symbol_uses:
            - src/third_party/s2/s2cellunion.cc
        -   symbol_name: S2Cell::Contains(Vector3<double> const&) const
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2polyline.cc
            - src/third_party/s2/s2cap.cc
            - src/third_party/s2/s2pointregion.cc
        file_dependencies:
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2CellId::kMaxSize
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2CellId::ToPointRaw() const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2::Area(Vector3<double> const&, Vector3<double> const&,
                Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2::IsUnitLength(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S1Interval::Expanded(double) const
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: S2CellId::level() const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2CellId::ToFaceIJOrientation(int*, int*, int*) const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2::kPosToIJ
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2Cap::AddPoint(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2cap.cc
        -   symbol_name: S2::kPosToOrientation
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2CellId::kPosBits
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2CellId::GetCenterUV() const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: typeinfo for S2Region
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2::kAvgArea
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2Region::DecodeWithinScope(Decoder*)
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: vtable for S2LatLngRect
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: vtable for S2Cap
            symbol_sources:
            - src/third_party/s2/s2cap.cc
        -   symbol_name: S2CellId::kMaxLevel
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S1Interval::FromPointPair(double, double)
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: S2CellId::kNumFaces
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
    -   file_name: src/third_party/s2/s2cell.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/s2cellid.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: S2CellId::AppendVertexNeighbors(int, std::vector<S2CellId,
                std::allocator<S2CellId> >*) const
            symbol_uses:
            - src/third_party/s2/s2polygonbuilder.cc
            - src/third_party/s2/s2regioncoverer.cc
            - src/third_party/s2/s2edgeindex.cc
        -   symbol_name: S2CellId::level() const
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/third_party/s2/s2polygonbuilder.cc
            - src/third_party/s2/s2cellunion.cc
            - src/mongo/db/geo/s2common.cpp
            - src/third_party/s2/s2regioncoverer.cc
            - src/third_party/s2/s2edgeindex.cc
            - src/mongo/db/query/index_bounds_builder.cpp
            - src/third_party/s2/s2cell.cc
            - src/third_party/s2/s2r2rect.cc
        -   symbol_name: S2CellId::AppendAllNeighbors(int, std::vector<S2CellId, std::allocator<S2CellId>
                >*) const
            symbol_uses:
            - src/third_party/s2/s2cellunion.cc
        -   symbol_name: S2CellId::kNumFaces
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/third_party/s2/s2polygonbuilder.cc
            - src/third_party/s2/s2cellunion.cc
            - src/mongo/db/geo/s2common.cpp
            - src/third_party/s2/s2regioncoverer.cc
            - src/third_party/s2/s2edgeindex.cc
            - src/mongo/db/query/index_bounds_builder.cpp
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2CellId::kMaxSize
            symbol_uses:
            - src/third_party/s2/s2cell.cc
            - src/third_party/s2/s2r2rect.cc
        -   symbol_name: S2CellId::ToPointRaw() const
            symbol_uses:
            - src/third_party/s2/s2cell.cc
            - src/third_party/s2/s2cellunion.cc
        -   symbol_name: S2CellId::FromFacePosLevel(int, unsigned long long, int)
            symbol_uses:
            - src/third_party/s2/s2regioncoverer.cc
            - src/third_party/s2/s2edgeindex.cc
        -   symbol_name: S2CellId::ToFaceIJOrientation(int*, int*, int*) const
            symbol_uses:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2CellId::ToString() const
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: S2CellId::GetEdgeNeighbors(S2CellId*) const
            symbol_uses:
            - src/third_party/s2/s2regioncoverer.cc
        -   symbol_name: S2CellId::GetCenterST() const
            symbol_uses:
            - src/third_party/s2/s2r2rect.cc
        -   symbol_name: S2CellId::kMaxLevel
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2polygonbuilder.cc
            - src/third_party/s2/s2cellunion.cc
            - src/mongo/db/geo/s2common.cpp
            - src/third_party/s2/s2regioncoverer.cc
            - src/third_party/s2/s2edgeindex.cc
            - src/mongo/db/query/index_bounds_builder.cpp
            - src/third_party/s2/s2cell.cc
            - src/third_party/s2/s2r2rect.cc
        -   symbol_name: S2CellId::kPosBits
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/third_party/s2/s2polygonbuilder.cc
            - src/third_party/s2/s2cellunion.cc
            - src/mongo/db/geo/s2common.cpp
            - src/third_party/s2/s2regioncoverer.cc
            - src/third_party/s2/s2edgeindex.cc
            - src/mongo/db/query/index_bounds_builder.cpp
            - src/third_party/s2/s2cell.cc
            - src/third_party/s2/s2r2rect.cc
        -   symbol_name: S2CellId::GetCenterUV() const
            symbol_uses:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2CellId::FromPoint(Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2polygonbuilder.cc
            - src/third_party/s2/s2cellunion.cc
            - src/mongo/db/geo/geoparser.cpp
            - src/third_party/s2/s2regioncoverer.cc
            - src/third_party/s2/s2edgeindex.cc
            - src/third_party/s2/s2r2rect.cc
        file_dependencies:
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: IntToString(int, char const*)
            symbol_sources:
            - src/third_party/s2/strings/strutil.cc
        -   symbol_name: S2::kSwapMask
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: StringPrintf(char const*, ...)
            symbol_sources:
            - src/third_party/s2/base/stringprintf.cc
        -   symbol_name: S2LatLng::ToPoint() const
            symbol_sources:
            - src/third_party/s2/s2latlng.cc
        -   symbol_name: S2::kPosToIJ
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: FastHex64ToBuffer(unsigned long long, char*)
            symbol_sources:
            - src/third_party/s2/strings/strutil.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2::kPosToOrientation
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2::kMaxCellLevel
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: mongo::_makeStringVector(int, ...)
            symbol_sources:
            - src/mongo/base/make_string_vector.cpp
        -   symbol_name: S2LatLng::S2LatLng(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2latlng.cc
        -   symbol_name: mongo::GlobalInitializerRegisterer::GlobalInitializerRegisterer(std::string
                const&, boost::function<mongo::Status (mongo::InitializerContext*)>
                const&, std::vector<std::string, std::allocator<std::string> > const&,
                std::vector<std::string, std::allocator<std::string> > const&)
            symbol_sources:
            - src/mongo/base/global_initializer_registerer.cpp
        -   symbol_name: ParseLeadingHex64Value(char const*, unsigned long long)
            symbol_sources:
            - src/third_party/s2/strings/strutil.cc
    -   file_name: src/third_party/s2/s2cellid.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/s2cellunion.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: vtable for S2CellUnion
            symbol_uses:
            - src/third_party/s2/s2regioncoverer.cc
        -   symbol_name: S2CellUnion::InitSwap(std::vector<S2CellId, std::allocator<S2CellId>
                >*)
            symbol_uses:
            - src/third_party/s2/s2regioncoverer.cc
        -   symbol_name: S2CellUnion::Denormalize(int, int, std::vector<S2CellId,
                std::allocator<S2CellId> >*) const
            symbol_uses:
            - src/third_party/s2/s2regioncoverer.cc
        file_dependencies:
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2Cell::ExactArea() const
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2CellId::ToPointRaw() const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2::IsUnitLength(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S2::kMinWidth
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2LatLngRect::Union(S2LatLngRect const&) const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2CellId::level() const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2Cell::GetRectBound() const
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2Cell::GetCapBound() const
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: vtable for S2Cell
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2::kMaxCellLevel
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2CellId::kPosBits
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2Cell::ApproxArea() const
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2CellId::FromPoint(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: typeinfo for S2Region
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2Cell::Init(S2CellId const&)
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2Cap::AddCap(S2Cap const&)
            symbol_sources:
            - src/third_party/s2/s2cap.cc
        -   symbol_name: S2Region::DecodeWithinScope(Decoder*)
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: vtable for S2LatLngRect
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2Cell::AverageArea(int)
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: vtable for S2Cap
            symbol_sources:
            - src/third_party/s2/s2cap.cc
        -   symbol_name: S2CellId::kMaxLevel
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2CellId::AppendAllNeighbors(int, std::vector<S2CellId, std::allocator<S2CellId>
                >*) const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2CellId::kNumFaces
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
    -   file_name: src/third_party/s2/s2cellunion.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/s2edgeindex.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: S2EdgeIndex::Iterator::GetCandidates(Vector3<double> const&,
                Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2EdgeIndex::Reset()
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2EdgeIndex::PredictAdditionalCalls(int)
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2loop.cc
        file_dependencies:
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2CellId::level() const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2CellId::kMaxLevel
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2::IsUnitLength(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S2::kMinWidth
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2CellId::AppendVertexNeighbors(int, std::vector<S2CellId,
                std::allocator<S2CellId> >*) const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2Cell::Subdivide(S2Cell*) const
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2CellId::FromFacePosLevel(int, unsigned long long, int)
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: vtable for S2Cell
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2::kMaxCellLevel
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2CellId::kPosBits
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2CellId::FromPoint(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2Cell::Init(S2CellId const&)
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2Cell::GetVertexRaw(int) const
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2CellId::kNumFaces
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
    -   file_name: src/third_party/s2/s2edgeindex.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/s2edgeutil.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: S2EdgeUtil::EdgeCrosser::RobustCrossingInternal(Vector3<double>
                const*)
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2polyline.cc
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2EdgeUtil::GetIntersection(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&, Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2EdgeUtil::IsEdgeBNearEdgeA(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&, Vector3<double> const&, S1Angle const&)
            symbol_uses:
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: S2EdgeUtil::kIntersectionTolerance
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2EdgeUtil::VertexCrossing(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&, Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2EdgeUtil::WedgeIntersects(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&, Vector3<double> const&, Vector3<double>
                const&)
            symbol_uses:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2EdgeUtil::SimpleCrossing(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&, Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2EdgeUtil::GetClosestPoint(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: S2EdgeUtil::GetDistance(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2polyline.cc
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2EdgeUtil::GetDistance(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&, Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2polygonbuilder.cc
        -   symbol_name: S2EdgeUtil::GetWedgeRelation(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&, Vector3<double> const&, Vector3<double>
                const&)
            symbol_uses:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2EdgeUtil::GetDistanceFraction(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2EdgeUtil::RectBounder::AddPoint(Vector3<double> const*)
            symbol_uses:
            - src/third_party/s2/s2polyline.cc
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2EdgeUtil::WedgeContains(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&, Vector3<double> const&, Vector3<double>
                const&)
            symbol_uses:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2EdgeUtil::InterpolateAtDistance(S1Angle const&, Vector3<double>
                const&, Vector3<double> const&, S1Angle const&)
            symbol_uses:
            - src/third_party/s2/s2polyline.cc
        file_dependencies:
        -   symbol_name: S2::RobustCrossProd(Vector3<double> const&, Vector3<double>
                const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2::Ortho(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2::OrderedCCW(Vector3<double> const&, Vector3<double> const&,
                Vector3<double> const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2::RobustCCW(Vector3<double> const&, Vector3<double> const&,
                Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S1Angle::S1Angle(Vector3<double> const&, Vector3<double>
                const&)
            symbol_sources:
            - src/third_party/s2/s1angle.cc
        -   symbol_name: S2::IsUnitLength(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S2LatLngRect::Union(S2LatLngRect const&) const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2::ExpensiveCCW(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2LatLngRect::FromPointPair(S2LatLng const&, S2LatLng const&)
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2LatLngRect::AddPoint(S2LatLng const&)
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2::SimpleCCW(Vector3<double> const&, Vector3<double> const&,
                Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: vtable for S2LatLngRect
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2LatLng::S2LatLng(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2latlng.cc
        -   symbol_name: S2::kMaxDetError
            symbol_sources:
            - src/third_party/s2/s2.cc
    -   file_name: src/third_party/s2/s2edgeutil.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/s2latlng.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: S2LatLng::Normalized() const
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2LatLng::GetDistance(S2LatLng const&) const
            symbol_uses:
            - src/third_party/s2/s1angle.cc
        -   symbol_name: operator<<(std::ostream&, S2LatLng const&)
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2polygonbuilder.cc
            - src/third_party/s2/s2pointregion.cc
        -   symbol_name: S2LatLng::ToPoint() const
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2polyline.cc
            - src/mongo/db/geo/geoparser.cpp
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2LatLng::S2LatLng(Vector3<double> const&)
            symbol_uses:
            - src/third_party/s2/s2cap.cc
            - src/third_party/s2/s2pointregion.cc
            - src/third_party/s2/s2polygonbuilder.cc
            - src/third_party/s2/s2edgeutil.cc
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2cellid.cc
        file_dependencies:
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: operator<<(std::ostream&, S1Angle const&)
            symbol_sources:
            - src/third_party/s2/s1angle.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: StringPrintf(char const*, ...)
            symbol_sources:
            - src/third_party/s2/base/stringprintf.cc
    -   file_name: src/third_party/s2/s2latlng.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/s2latlngrect.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: S2LatLngRect::Decode(Decoder*)
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2LatLngRect::GetCapBound() const
            symbol_uses:
            - src/third_party/s2/s2regionintersection.cc
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2polyline.cc
            - src/third_party/s2/s2regionunion.cc
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2LatLngRect::Area() const
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: S2LatLngRect::Intersects(S2LatLngRect const&) const
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2polyline.cc
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2LatLngRect::Intersection(S2LatLngRect const&) const
            symbol_uses:
            - src/third_party/s2/s2regionintersection.cc
        -   symbol_name: S2LatLngRect::Union(S2LatLngRect const&) const
            symbol_uses:
            - src/third_party/s2/s2cellunion.cc
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2regionunion.cc
            - src/third_party/s2/s2loop.cc
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2LatLngRect::AddPoint(S2LatLng const&)
            symbol_uses:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: vtable for S2LatLngRect
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2polyline.cc
            - src/third_party/s2/s2cap.cc
            - src/third_party/s2/s2loop.cc
            - src/third_party/s2/s2pointregion.cc
            - src/third_party/s2/s2cellunion.cc
            - src/third_party/s2/s2edgeutil.cc
            - src/third_party/s2/s2regionintersection.cc
            - src/third_party/s2/s2regionunion.cc
            - src/mongo/db/query/index_bounds_builder.cpp
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2LatLngRect::Contains(Vector3<double> const&) const
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2LatLngRect::FromPointPair(S2LatLng const&, S2LatLng const&)
            symbol_uses:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2LatLngRect::Contains(S2LatLngRect const&) const
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2LatLngRect::Encode(Encoder*) const
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2loop.cc
        file_dependencies:
        -   symbol_name: S2::RobustCrossProd(Vector3<double> const&, Vector3<double>
                const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S1Interval::Contains(double) const
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S1Interval::ApproxEquals(S1Interval const&, double) const
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: S1Interval::Intersects(S1Interval const&) const
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: S1Interval::GetDirectedHausdorffDistance(S1Interval const&)
                const
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: S1Interval::InteriorIntersects(S1Interval const&) const
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: S2::IsUnitLength(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S1Interval::GetComplementCenter() const
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: S1Interval::GetCenter() const
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: S2EdgeUtil::SimpleCrossing(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S1Interval::Expanded(double) const
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: S2Cell::GetCenterRaw() const
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2Cap::FromAxisAngle(Vector3<double> const&, S1Angle const&)
            symbol_sources:
            - src/third_party/s2/s2cap.cc
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S1Interval::Contains(S1Interval const&) const
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: S2Cell::GetVertexRaw(int) const
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S1Interval::Union(S1Interval const&) const
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: S2LatLng::ToPoint() const
            symbol_sources:
            - src/third_party/s2/s2latlng.cc
        -   symbol_name: S2Cap::GetRectBound() const
            symbol_sources:
            - src/third_party/s2/s2cap.cc
        -   symbol_name: S1Interval::AddPoint(double)
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: Encoder::EnsureSlowPath(int)
            symbol_sources:
            - src/third_party/s2/util/coding/coder.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2Cap::AddPoint(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2cap.cc
        -   symbol_name: S1Interval::InteriorContains(double) const
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: typeinfo for S2Region
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2LatLng::Normalized() const
            symbol_sources:
            - src/third_party/s2/s2latlng.cc
        -   symbol_name: S2Region::DecodeWithinScope(Decoder*)
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2EdgeUtil::GetDistance(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: vtable for S2Cap
            symbol_sources:
            - src/third_party/s2/s2cap.cc
        -   symbol_name: S2LatLng::S2LatLng(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2latlng.cc
        -   symbol_name: S1Interval::Intersection(S1Interval const&) const
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: operator<<(std::ostream&, S2LatLng const&)
            symbol_sources:
            - src/third_party/s2/s2latlng.cc
        -   symbol_name: S1Interval::FromPointPair(double, double)
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: S1Interval::InteriorContains(S1Interval const&) const
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: S2Cell::Contains(Vector3<double> const&) const
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S1Interval::GetLength() const
            symbol_sources:
            - src/third_party/s2/s1interval.cc
    -   file_name: src/third_party/s2/s2latlngrect.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/s2loop.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: S2Loop::IsValid() const
            symbol_uses:
            - src/third_party/s2/s2polygonbuilder.cc
            - src/third_party/s2/s2polygon.cc
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2Loop::BoundaryNear(S2Loop const*, double) const
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2Loop::S2Loop(S2Cell const&)
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2Loop::Contains(S2Loop const*) const
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2Loop::~S2Loop()
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2Loop::Normalize()
            symbol_uses:
            - src/third_party/s2/s2polygonbuilder.cc
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2Loop::Intersects(S2Loop const*) const
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2Loop::BoundaryApproxEquals(S2Loop const*, double) const
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2Loop::ContainsNested(S2Loop const*) const
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2Loop::S2Loop()
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2Loop::GetArea() const
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2Loop::Invert()
            symbol_uses:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2Loop::IsNormalized() const
            symbol_uses:
            - src/third_party/s2/s2polygonbuilder.cc
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2Loop::ContainsOrCrosses(S2Loop const*) const
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2Loop::GetCentroid() const
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2Loop::S2Loop(std::vector<Vector3<double>, std::allocator<Vector3<double>
                > > const&)
            symbol_uses:
            - src/third_party/s2/s2polygonbuilder.cc
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2Loop::BoundaryEquals(S2Loop const*) const
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2Loop::Contains(Vector3<double> const&) const
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
        file_dependencies:
        -   symbol_name: S2::RobustCrossProd(Vector3<double> const&, Vector3<double>
                const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2LatLngRect::Intersects(S2LatLngRect const&) const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2Cell::GetVertexRaw(int) const
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2::OrderedCCW(Vector3<double> const&, Vector3<double> const&,
                Vector3<double> const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2LatLngRect::Contains(Vector3<double> const&) const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2LatLngRect::Decode(Decoder*)
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2::kMaxDetError
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2EdgeUtil::EdgeCrosser::RobustCrossingInternal(Vector3<double>
                const*)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2EdgeIndex::PredictAdditionalCalls(int)
            symbol_sources:
            - src/third_party/s2/s2edgeindex.cc
        -   symbol_name: S2::TrueCentroid(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2::IsUnitLength(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S2LatLngRect::Contains(S2LatLngRect const&) const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2LatLngRect::Union(S2LatLngRect const&) const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2EdgeIndex::Iterator::GetCandidates(Vector3<double> const&,
                Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2edgeindex.cc
        -   symbol_name: S2Cell::GetCenterRaw() const
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: typeinfo for S2Region
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2::ExpensiveCCW(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2LatLngRect::GetCapBound() const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2::SignedArea(Vector3<double> const&, Vector3<double> const&,
                Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2::TurnAngle(Vector3<double> const&, Vector3<double> const&,
                Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2EdgeUtil::GetDistance(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2EdgeUtil::WedgeContains(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&, Vector3<double> const&, Vector3<double>
                const&)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: Encoder::EnsureSlowPath(int)
            symbol_sources:
            - src/third_party/s2/util/coding/coder.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2EdgeUtil::RectBounder::AddPoint(Vector3<double> const*)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2EdgeIndex::Reset()
            symbol_sources:
            - src/third_party/s2/s2edgeindex.cc
        -   symbol_name: std::tr1::hash<Vector3<double> >::operator()(Vector3<double>
                const&) const
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2LatLngRect::Encode(Encoder*) const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2EdgeUtil::VertexCrossing(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2EdgeUtil::WedgeIntersects(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&, Vector3<double> const&, Vector3<double>
                const&)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: vtable for S2LatLngRect
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2::Ortho(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2::ApproxEquals(Vector3<double> const&, Vector3<double>
                const&, double)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2EdgeUtil::GetWedgeRelation(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&, Vector3<double> const&, Vector3<double>
                const&)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S1Interval::GetLength() const
            symbol_sources:
            - src/third_party/s2/s1interval.cc
    -   file_name: src/third_party/s2/s2loop.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/s2pointregion.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies:
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2::IsUnitLength(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: Encoder::EnsureSlowPath(int)
            symbol_sources:
            - src/third_party/s2/util/coding/coder.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: typeinfo for S2Region
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2Region::DecodeWithinScope(Decoder*)
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: vtable for S2LatLngRect
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: vtable for S2Cap
            symbol_sources:
            - src/third_party/s2/s2cap.cc
        -   symbol_name: S2LatLng::S2LatLng(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2latlng.cc
        -   symbol_name: operator<<(std::ostream&, S2LatLng const&)
            symbol_sources:
            - src/third_party/s2/s2latlng.cc
        -   symbol_name: S2Cell::Contains(Vector3<double> const&) const
            symbol_sources:
            - src/third_party/s2/s2cell.cc
    -   file_name: src/third_party/s2/s2pointregion.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/s2polygon.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: S2Polygon::S2Polygon()
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/geo/geoparser.cpp
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: S2Polygon::Contains(S2Polygon const*) const
            symbol_uses:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: S2Polygon::IntersectWithPolyline(S2Polyline const*, std::vector<S2Polyline*,
                std::allocator<S2Polyline*> >*) const
            symbol_uses:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: S2Polygon::Init(std::vector<S2Loop*, std::allocator<S2Loop*>
                >*)
            symbol_uses:
            - src/third_party/s2/s2polygonbuilder.cc
        -   symbol_name: S2Polygon::MayIntersect(S2Cell const&) const
            symbol_uses:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: S2Polygon::~S2Polygon()
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/geo/geoparser.cpp
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: S2Polygon::Intersects(S2Polygon const*) const
            symbol_uses:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: S2Polygon::IsValid(std::vector<S2Loop*, std::allocator<S2Loop*>
                > const&)
            symbol_uses:
            - src/third_party/s2/s2polygonbuilder.cc
        -   symbol_name: S2Polygon::Contains(Vector3<double> const&) const
            symbol_uses:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: S2Polygon::Project(Vector3<double> const&) const
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
        file_dependencies:
        -   symbol_name: S2Loop::IsValid() const
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2PolygonBuilder::S2PolygonBuilder(S2PolygonBuilderOptions
                const&)
            symbol_sources:
            - src/third_party/s2/s2polygonbuilder.cc
        -   symbol_name: S2CellId::kMaxLevel
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2LatLngRect::Decode(Decoder*)
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2Loop::~S2Loop()
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2EdgeUtil::EdgeCrosser::RobustCrossingInternal(Vector3<double>
                const*)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2Loop::BoundaryNear(S2Loop const*, double) const
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2::kMinWidth
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2EdgeIndex::Iterator::GetCandidates(Vector3<double> const&,
                Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2edgeindex.cc
        -   symbol_name: S2LatLngRect::GetCapBound() const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S1Interval::Union(S1Interval const&) const
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: vtable for S2Cell
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2Loop::S2Loop(S2Cell const&)
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2Cell::Init(S2CellId const&)
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2Loop::Contains(S2Loop const*) const
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2Loop::ContainsNested(S2Loop const*) const
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2PolygonBuilder::~S2PolygonBuilder()
            symbol_sources:
            - src/third_party/s2/s2polygonbuilder.cc
        -   symbol_name: S2LatLngRect::Intersects(S2LatLngRect const&) const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2EdgeUtil::GetIntersection(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2Loop::Intersects(S2Loop const*) const
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S2Loop::Contains(Vector3<double> const&) const
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2::debug
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2::ExpensiveCCW(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2Loop::BoundaryApproxEquals(S2Loop const*, double) const
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2EdgeUtil::kIntersectionTolerance
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2EdgeUtil::VertexCrossing(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: std::tr1::hash<Vector3<double> >::operator()(Vector3<double>
                const&) const
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2Loop::S2Loop()
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2Polyline::S2Polyline(std::vector<Vector3<double>, std::allocator<Vector3<double>
                > > const&)
            symbol_sources:
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: S2PolygonBuilder::AddLoop(S2Loop const*)
            symbol_sources:
            - src/third_party/s2/s2polygonbuilder.cc
        -   symbol_name: S2PolygonBuilderOptions::set_vertex_merge_radius(S1Angle
                const&)
            symbol_sources:
            - src/third_party/s2/s2polygonbuilder.cc
        -   symbol_name: S2LatLngRect::Union(S2LatLngRect const&) const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2Loop::GetArea() const
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2EdgeUtil::GetClosestPoint(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2EdgeUtil::GetDistance(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2Loop::GetCentroid() const
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2PolygonBuilderOptions::set_undirected_edges(bool)
            symbol_sources:
            - src/third_party/s2/s2polygonbuilder.cc
        -   symbol_name: Encoder::EnsureSlowPath(int)
            symbol_sources:
            - src/third_party/s2/util/coding/coder.cc
        -   symbol_name: S2EdgeIndex::Reset()
            symbol_sources:
            - src/third_party/s2/s2edgeindex.cc
        -   symbol_name: S2Polyline::~S2Polyline()
            symbol_sources:
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: typeinfo for S2Region
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: vtable for S2LatLngRect
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2::kMaxDetError
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2Loop::IsNormalized() const
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2PolygonBuilder::AssemblePolygon(S2Polygon*, std::vector<std::pair<Vector3<double>,
                Vector3<double> >, std::allocator<std::pair<Vector3<double>, Vector3<double>
                > > >*)
            symbol_sources:
            - src/third_party/s2/s2polygonbuilder.cc
        -   symbol_name: S2PolygonBuilderOptions::set_validate(bool)
            symbol_sources:
            - src/third_party/s2/s2polygonbuilder.cc
        -   symbol_name: S2PolygonBuilder::AddEdge(Vector3<double> const&, Vector3<double>
                const&)
            symbol_sources:
            - src/third_party/s2/s2polygonbuilder.cc
        -   symbol_name: S2EdgeUtil::GetDistanceFraction(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2LatLngRect::Contains(Vector3<double> const&) const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2EdgeIndex::PredictAdditionalCalls(int)
            symbol_sources:
            - src/third_party/s2/s2edgeindex.cc
        -   symbol_name: S2::IsUnitLength(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2LatLngRect::Contains(S2LatLngRect const&) const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2Loop::ContainsOrCrosses(S2Loop const*) const
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2Cell::GetCenterRaw() const
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2Polyline::SubsampleVertices(S1Angle const&, std::vector<int,
                std::allocator<int> >*) const
            symbol_sources:
            - src/third_party/s2/s2polyline.cc
        -   symbol_name: S2LatLngRect::Encode(Encoder*) const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2Loop::BoundaryEquals(S2Loop const*) const
            symbol_sources:
            - src/third_party/s2/s2loop.cc
    -   file_name: src/third_party/s2/s2polygon.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/s2polygonbuilder.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: S2PolygonBuilder::S2PolygonBuilder(S2PolygonBuilderOptions
                const&)
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2PolygonBuilder::~S2PolygonBuilder()
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2PolygonBuilder::AddLoop(S2Loop const*)
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2PolygonBuilderOptions::set_vertex_merge_radius(S1Angle
                const&)
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2PolygonBuilderOptions::set_undirected_edges(bool)
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2PolygonBuilderOptions::set_xor_edges(bool)
            symbol_uses:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2PolygonBuilder::AssemblePolygon(S2Polygon*, std::vector<std::pair<Vector3<double>,
                Vector3<double> >, std::allocator<std::pair<Vector3<double>, Vector3<double>
                > > >*)
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2PolygonBuilderOptions::set_validate(bool)
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2PolygonBuilder::AddEdge(Vector3<double> const&, Vector3<double>
                const&)
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
        file_dependencies:
        -   symbol_name: S2::RobustCrossProd(Vector3<double> const&, Vector3<double>
                const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2Loop::IsValid() const
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2::OrderedCCW(Vector3<double> const&, Vector3<double> const&,
                Vector3<double> const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2Polygon::Init(std::vector<S2Loop*, std::allocator<S2Loop*>
                >*)
            symbol_sources:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S2Polygon::IsValid(std::vector<S2Loop*, std::allocator<S2Loop*>
                > const&)
            symbol_sources:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2::kMinWidth
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2CellId::FromPoint(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2CellId::AppendVertexNeighbors(int, std::vector<S2CellId,
                std::allocator<S2CellId> >*) const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2CellId::level() const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2::kMaxCellLevel
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2CellId::kPosBits
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2Loop::S2Loop(std::vector<Vector3<double>, std::allocator<Vector3<double>
                > > const&)
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: std::tr1::hash<Vector3<double> >::operator()(Vector3<double>
                const&) const
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2EdgeUtil::GetDistance(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2LatLng::S2LatLng(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2latlng.cc
        -   symbol_name: operator<<(std::ostream&, S2LatLng const&)
            symbol_sources:
            - src/third_party/s2/s2latlng.cc
        -   symbol_name: S2CellId::kMaxLevel
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2Loop::IsNormalized() const
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2Loop::Normalize()
            symbol_sources:
            - src/third_party/s2/s2loop.cc
        -   symbol_name: S2CellId::kNumFaces
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
    -   file_name: src/third_party/s2/s2polygonbuilder.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/s2polyline.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: S2Polyline::MayIntersect(S2Cell const&) const
            symbol_uses:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: S2Polyline::S2Polyline()
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/geo/geoparser.cpp
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: S2Polyline::S2Polyline(std::vector<Vector3<double>, std::allocator<Vector3<double>
                > > const&)
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2Polyline::IsValid(std::vector<Vector3<double>, std::allocator<Vector3<double>
                > > const&)
            symbol_uses:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2Polyline::~S2Polyline()
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
            - src/third_party/s2/s2polygon.cc
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: S2Polyline::Init(std::vector<Vector3<double>, std::allocator<Vector3<double>
                > > const&)
            symbol_uses:
            - src/mongo/db/geo/geoparser.cpp
        -   symbol_name: S2Polyline::Intersects(S2Polyline const*) const
            symbol_uses:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: S2Polyline::NearlyCoversPolyline(S2Polyline const&, S1Angle
                const&) const
            symbol_uses:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: S2Polyline::SubsampleVertices(S1Angle const&, std::vector<int,
                std::allocator<int> >*) const
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
        -   symbol_name: S2Polyline::Project(Vector3<double> const&, int*) const
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
        file_dependencies:
        -   symbol_name: mongo::logger::LogstreamBuilder::~LogstreamBuilder()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S1Interval::Contains(double) const
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: S2::OrderedCCW(Vector3<double> const&, Vector3<double> const&,
                Vector3<double> const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2::RobustCCW(Vector3<double> const&, Vector3<double> const&,
                Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2EdgeUtil::InterpolateAtDistance(S1Angle const&, Vector3<double>
                const&, Vector3<double> const&, S1Angle const&)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2::GetFrame(Vector3<double> const&, Matrix3x3<double>*)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::LogstreamBuilder(mongo::logger::LogDomain<mongo::logger::MessageEventEphemeral>*,
                std::string const&, mongo::logger::LogSeverity)
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S2EdgeUtil::IsEdgeBNearEdgeA(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&, Vector3<double> const&, S1Angle const&)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2EdgeUtil::EdgeCrosser::RobustCrossingInternal(Vector3<double>
                const*)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2LatLngRect::Intersects(S2LatLngRect const&) const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2::IsUnitLength(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S1Interval::FromPoint(double)
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: S1Interval::Expanded(double) const
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: S2::debug
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2::ExpensiveCCW(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2LatLngRect::GetCapBound() const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S1Angle::S1Angle(Vector3<double> const&, Vector3<double>
                const&)
            symbol_sources:
            - src/third_party/s2/s1angle.cc
        -   symbol_name: S2::ToFrame(Matrix3x3<double> const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2EdgeUtil::GetClosestPoint(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: S2LatLng::ToPoint() const
            symbol_sources:
            - src/third_party/s2/s2latlng.cc
        -   symbol_name: S2EdgeUtil::GetDistance(Vector3<double> const&, Vector3<double>
                const&, Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: Encoder::EnsureSlowPath(int)
            symbol_sources:
            - src/third_party/s2/util/coding/coder.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2EdgeUtil::RectBounder::AddPoint(Vector3<double> const*)
            symbol_sources:
            - src/third_party/s2/s2edgeutil.cc
        -   symbol_name: mongo::getThreadName()
            symbol_sources:
            - src/mongo/util/concurrency/thread_name.cpp
        -   symbol_name: typeinfo for S2Region
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: mongo::logger::globalLogManager()
            symbol_sources:
            - src/mongo/logger/logger.cpp
        -   symbol_name: S2Region::DecodeWithinScope(Decoder*)
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: vtable for S2LatLngRect
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2Cell::GetVertexRaw(int) const
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2::ApproxEquals(Vector3<double> const&, Vector3<double>
                const&, double)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S1Interval::Intersection(S1Interval const&) const
            symbol_sources:
            - src/third_party/s2/s1interval.cc
        -   symbol_name: S2::kMaxDetError
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2Cell::Contains(Vector3<double> const&) const
            symbol_sources:
            - src/third_party/s2/s2cell.cc
    -   file_name: src/third_party/s2/s2polyline.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/s2r2rect.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies:
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2CellId::kMaxSize
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2::IsUnitLength(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S2CellId::GetCenterST() const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2CellId::level() const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2CellId::kMaxLevel
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2Cap::GetRectBound() const
            symbol_sources:
            - src/third_party/s2/s2cap.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2Cap::AddPoint(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2cap.cc
        -   symbol_name: S2CellId::kPosBits
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2CellId::FromPoint(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: typeinfo for S2Region
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2Region::DecodeWithinScope(Decoder*)
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: vtable for S2Cap
            symbol_sources:
            - src/third_party/s2/s2cap.cc
    -   file_name: src/third_party/s2/s2r2rect.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/s2region.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: S2Region::DecodeWithinScope(Decoder*)
            symbol_uses:
            - src/third_party/s2/s2polyline.cc
            - src/third_party/s2/s2cap.cc
            - src/third_party/s2/s2pointregion.cc
            - src/third_party/s2/s2cellunion.cc
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2regionintersection.cc
            - src/third_party/s2/s2regionunion.cc
            - src/third_party/s2/s2cell.cc
            - src/third_party/s2/s2r2rect.cc
        -   symbol_name: S2Region::~S2Region()
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/third_party/s2/s2polygon.cc
            - src/mongo/db/query/query_solution.cpp
            - src/mongo/db/matcher/expression_geo.cpp
            - src/third_party/s2/s2cellunion.cc
            - src/mongo/db/geo/geoquery.cpp
            - src/third_party/s2/s2regioncoverer.cc
            - src/third_party/s2/s2cell.cc
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2cap.cc
            - src/third_party/s2/s2pointregion.cc
            - src/mongo/db/geo/geoparser.cpp
            - src/third_party/s2/s2edgeutil.cc
            - src/third_party/s2/s2regionunion.cc
            - src/third_party/s2/s2polyline.cc
            - src/third_party/s2/s2loop.cc
            - src/mongo/db/exec/2dnear.cpp
            - src/mongo/db/query/planner_access.cpp
            - src/mongo/db/matcher/expression_parser_geo.cpp
            - src/third_party/s2/s2regionintersection.cc
            - src/third_party/s2/s2edgeindex.cc
            - src/mongo/db/query/index_bounds_builder.cpp
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/query/stage_builder.cpp
            - src/third_party/s2/s2r2rect.cc
            - src/mongo/db/query/query_planner.cpp
        -   symbol_name: typeinfo for S2Region
            symbol_uses:
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2polyline.cc
            - src/third_party/s2/s2cap.cc
            - src/third_party/s2/s2loop.cc
            - src/third_party/s2/s2pointregion.cc
            - src/third_party/s2/s2cellunion.cc
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2regionintersection.cc
            - src/third_party/s2/s2regionunion.cc
            - src/third_party/s2/s2cell.cc
            - src/third_party/s2/s2r2rect.cc
        file_dependencies: []
    -   file_name: src/third_party/s2/s2region.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/s2regioncoverer.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: S2RegionCoverer::S2RegionCoverer()
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: S2RegionCoverer::set_max_cells(int)
            symbol_uses:
            - src/mongo/db/geo/s2common.cpp
        -   symbol_name: S2RegionCoverer::set_max_level(int)
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: S2RegionCoverer::set_min_level(int)
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: S2RegionCoverer::~S2RegionCoverer()
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/query/index_bounds_builder.cpp
        -   symbol_name: S2RegionCoverer::GetCovering(S2Region const&, std::vector<S2CellId,
                std::allocator<S2CellId> >*)
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
            - src/mongo/db/geo/s2common.cpp
            - src/mongo/db/query/index_bounds_builder.cpp
        file_dependencies:
        -   symbol_name: vtable for S2CellUnion
            symbol_sources:
            - src/third_party/s2/s2cellunion.cc
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2CellUnion::InitSwap(std::vector<S2CellId, std::allocator<S2CellId>
                >*)
            symbol_sources:
            - src/third_party/s2/s2cellunion.cc
        -   symbol_name: S2CellId::level() const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2CellId::kPosBits
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S2::kMinWidth
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: S2CellId::GetEdgeNeighbors(S2CellId*) const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2Cap::angle() const
            symbol_sources:
            - src/third_party/s2/s2cap.cc
        -   symbol_name: S2CellId::AppendVertexNeighbors(int, std::vector<S2CellId,
                std::allocator<S2CellId> >*) const
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2Cell::Subdivide(S2Cell*) const
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2CellId::FromFacePosLevel(int, unsigned long long, int)
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2CellUnion::Denormalize(int, int, std::vector<S2CellId,
                std::allocator<S2CellId> >*) const
            symbol_sources:
            - src/third_party/s2/s2cellunion.cc
        -   symbol_name: vtable for S2Cell
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2::kMaxCellLevel
            symbol_sources:
            - src/third_party/s2/s2.cc
        -   symbol_name: mongo::_makeStringVector(int, ...)
            symbol_sources:
            - src/mongo/base/make_string_vector.cpp
        -   symbol_name: S2CellId::FromPoint(Vector3<double> const&)
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: S2Cell::Init(S2CellId const&)
            symbol_sources:
            - src/third_party/s2/s2cell.cc
        -   symbol_name: vtable for S2Cap
            symbol_sources:
            - src/third_party/s2/s2cap.cc
        -   symbol_name: S2CellId::kMaxLevel
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: mongo::GlobalInitializerRegisterer::GlobalInitializerRegisterer(std::string
                const&, boost::function<mongo::Status (mongo::InitializerContext*)>
                const&, std::vector<std::string, std::allocator<std::string> > const&,
                std::vector<std::string, std::allocator<std::string> > const&)
            symbol_sources:
            - src/mongo/base/global_initializer_registerer.cpp
        -   symbol_name: S2CellId::kNumFaces
            symbol_sources:
            - src/third_party/s2/s2cellid.cc
    -   file_name: src/third_party/s2/s2regioncoverer.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/s2regionintersection.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: S2RegionIntersection::S2RegionIntersection()
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
        -   symbol_name: S2RegionIntersection::Release(std::vector<S2Region*, std::allocator<S2Region*>
                >*)
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
        -   symbol_name: S2RegionIntersection::Init(std::vector<S2Region*, std::allocator<S2Region*>
                >*)
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
        -   symbol_name: S2RegionIntersection::~S2RegionIntersection()
            symbol_uses:
            - src/mongo/db/exec/s2near.cpp
        file_dependencies:
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: S2Region::DecodeWithinScope(Decoder*)
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S2LatLngRect::Intersection(S2LatLngRect const&) const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2LatLngRect::GetCapBound() const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: typeinfo for S2Region
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: vtable for S2LatLngRect
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
    -   file_name: src/third_party/s2/s2regionintersection.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/s2regionunion.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: S2RegionUnion::Add(S2Region*)
            symbol_uses:
            - src/mongo/db/geo/geoquery.cpp
        -   symbol_name: S2RegionUnion::S2RegionUnion()
            symbol_uses:
            - src/mongo/db/geo/geoquery.cpp
        file_dependencies:
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: S2LatLngRect::Union(S2LatLngRect const&) const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: S2Region::~S2Region()
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2LatLngRect::GetCapBound() const
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: typeinfo for S2Region
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: S2Region::DecodeWithinScope(Decoder*)
            symbol_sources:
            - src/third_party/s2/s2region.cc
        -   symbol_name: vtable for S2LatLngRect
            symbol_sources:
            - src/third_party/s2/s2latlngrect.cc
    -   file_name: src/third_party/s2/s2regionunion.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/strings/ascii_ctype.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/strings/split.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: SplitStringAllowEmpty(std::string const&, char const*, std::vector<std::string,
                std::allocator<std::string> >*)
            symbol_uses:
            - src/third_party/s2/strings/strutil.cc
        -   symbol_name: SplitStringUsing(std::string const&, char const*, std::vector<std::string,
                std::allocator<std::string> >*)
            symbol_uses:
            - src/third_party/s2/strings/strutil.cc
        file_dependencies:
        -   symbol_name: strtou32_adapter(char const*, char**, int)
            symbol_sources:
            - src/third_party/s2/base/strtoint.cc
        -   symbol_name: strto32_adapter(char const*, char**, int)
            symbol_sources:
            - src/third_party/s2/base/strtoint.cc
    -   file_name: src/third_party/s2/strings/split.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/strings/stringprintf.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies:
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: StringPrintf(char const*, ...)
            symbol_sources:
            - src/third_party/s2/base/stringprintf.cc
    -   file_name: src/third_party/s2/strings/stringprintf.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/strings/strutil.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: FastHex64ToBuffer(unsigned long long, char*)
            symbol_uses:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: IntToString(int, char const*)
            symbol_uses:
            - src/third_party/s2/s2cellid.cc
        -   symbol_name: ParseLeadingHex64Value(char const*, unsigned long long)
            symbol_uses:
            - src/third_party/s2/s2cellid.cc
        file_dependencies:
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: SplitStringAllowEmpty(std::string const&, char const*, std::vector<std::string,
                std::allocator<std::string> >*)
            symbol_sources:
            - src/third_party/s2/strings/split.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: SplitStringUsing(std::string const&, char const*, std::vector<std::string,
                std::allocator<std::string> >*)
            symbol_sources:
            - src/third_party/s2/strings/split.cc
    -   file_name: src/third_party/s2/strings/strutil.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/util/coding/coder.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: Encoder::EnsureSlowPath(int)
            symbol_uses:
            - src/third_party/s2/s2latlngrect.cc
            - src/third_party/s2/s2polygon.cc
            - src/third_party/s2/s2polyline.cc
            - src/third_party/s2/s2loop.cc
            - src/third_party/s2/s2pointregion.cc
        file_dependencies:
        -   symbol_name: Varint::Length64(unsigned long long)
            symbol_sources:
            - src/third_party/s2/util/coding/varint.cc
        -   symbol_name: Varint::length32_bytes_required
            symbol_sources:
            - src/third_party/s2/util/coding/varint.cc
        -   symbol_name: Varint::kMax64
            symbol_sources:
            - src/third_party/s2/util/coding/varint.cc
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: Varint::Parse64Fallback(char const*, unsigned long long*)
            symbol_sources:
            - src/third_party/s2/util/coding/varint.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: Varint::Parse32Fallback(char const*, unsigned int*)
            symbol_sources:
            - src/third_party/s2/util/coding/varint.cc
        -   symbol_name: Varint::kMax32
            symbol_sources:
            - src/third_party/s2/util/coding/varint.cc
    -   file_name: src/third_party/s2/util/coding/coder.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/util/coding/varint.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface:
        -   symbol_name: Varint::Parse64Fallback(char const*, unsigned long long*)
            symbol_uses:
            - src/third_party/s2/util/coding/coder.cc
        -   symbol_name: Varint::length32_bytes_required
            symbol_uses:
            - src/third_party/s2/util/coding/coder.cc
        -   symbol_name: Varint::kMax64
            symbol_uses:
            - src/third_party/s2/util/coding/coder.cc
        -   symbol_name: Varint::kMax32
            symbol_uses:
            - src/third_party/s2/util/coding/coder.cc
        -   symbol_name: Varint::Length64(unsigned long long)
            symbol_uses:
            - src/third_party/s2/util/coding/coder.cc
        -   symbol_name: Varint::Parse32Fallback(char const*, unsigned int*)
            symbol_uses:
            - src/third_party/s2/util/coding/coder.cc
        file_dependencies: []
    -   file_name: src/third_party/s2/util/coding/varint.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/util/endian/endian.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/util/hash/hash_jenkins_lookup2.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/util/math/exactfloat/exactfloat.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/util/math/mathlimits.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/util/math/mathlimits.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/util/math/mathutil.cc
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies:
        -   symbol_name: LogMessageFatal::~LogMessageFatal()
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: LogMessageFatal::LogMessageFatal(char const*, int)
            symbol_sources:
            - src/third_party/s2/base/logging.cc
        -   symbol_name: mongo::logger::LogstreamBuilder::makeStream()
            symbol_sources:
            - src/mongo/logger/logstream_builder.cpp
    -   file_name: src/third_party/s2/util/math/mathutil.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/util/math/matrix3x3-inl.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/util/math/matrix3x3.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/util/math/vector2-inl.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/util/math/vector2.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/util/math/vector3-inl.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/util/math/vector3.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
    -   file_name: src/third_party/s2/util/math/vector4.h
        file_executables:
        - mongotop
        - mongod
        - perftest
        - mongoperf
        - mongosniff
        - mongodump
        - mongobridge
        - mongostat
        - bsondump
        - mongoimport
        - mongos
        - mongooplog
        - test
        - mongoexport
        - mongofiles
        - mongorestore
        file_interface: []
        file_dependencies: []
